<?php
defined('BASEPATH') OR exit('No direct script access allowed');

class NonKyc extends CI_Controller {
    public function __construct()
    {
        date_default_timezone_set('Asia/Kolkata');
       parent:: __construct();
       error_reporting(0);
       if(isset($_SESSION['landingMob'])){
            $getDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
            if($getDetail[0]['finalStepStatus'] == 'success')
            {
                
            }else{
                redirect(base_url().'step1-guest','refresh');
            }
      }
    }

    function getLastInsertedMissingId()
    {
        if($_GET['type'] == 'without')
        {
            $getLastTransaction = $this->db->query('select * from uploadWithoutTransactions where userId='.$_SESSION['user_id'].' order by Id desc limit 1')->result_array();
            echo json_encode(array(
                'Id' => $getLastTransaction[0]['Id']
            ));
        }else{
            $getLastTransaction = $this->db->query('select * from uploadtransactions where userId='.$_SESSION['user_id'].' order by Id desc limit 1')->result_array();
            echo json_encode(array(
                'Id' => $getLastTransaction[0]['Id']
            ));
        }
    }

    function dontShowAgain()
    {
        $update = $this->db->query('update funneltransactions set dontShowAgain=1 where Id='.$_POST['Id']);
    }

    function sendMessage91CustomMsg($username,$mob,$templateId)
    {
        $mob = '91' . $mob;
        $url = "https://shammtech.in/api/send-message-91-sms";
        $data = [
            "applicationNumber"   => $username,
            "otp"        => $otp,
            "mob"        => $mob,
            "templateId" => $templateId,
        ];

        $ch = curl_init($url);
        curl_setopt($ch, CURLOPT_POST, true);
        curl_setopt($ch, CURLOPT_HTTPHEADER, ["Content-Type: application/json"]);
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

        $response = curl_exec($ch);

        if (curl_errno($ch)) {
            $error = curl_error($ch);
            curl_close($ch);
            return [
                "status"  => "error",
                "message" => "CURL Error: " . $error
            ];
        }

        curl_close($ch);

        // Decode Laravel API response (which already returns JSON)
        $decoded = json_decode($response, true);

        if (!$decoded) {
            return [
                "status"  => "error",
                "message" => "Invalid response from API",
                "raw"     => $response
            ];
        }

        return $decoded;
    }

    function sendMessage91Otp($username, $mob, $otp, $templateId)
    {
        $type = 'otp';
        switch ($type) {
            case 'otp':
                $mob = '91' . $mob;
                $url = "https://shammtech.in/api/send-message-91-sms";
                $data = [
                    "username"   => $username,
                    "otp"        => $otp,
                    "mob"        => $mob,
                    "templateId" => $templateId,
                ];

                $ch = curl_init($url);
                curl_setopt($ch, CURLOPT_POST, true);
                curl_setopt($ch, CURLOPT_HTTPHEADER, ["Content-Type: application/json"]);
                curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

                $response = curl_exec($ch);

                if (curl_errno($ch)) {
                    $error = curl_error($ch);
                    curl_close($ch);
                    return [
                        "status"  => "error",
                        "message" => "CURL Error: " . $error
                    ];
                }

                curl_close($ch);

                // Decode Laravel API response (which already returns JSON)
                $decoded = json_decode($response, true);

                if (!$decoded) {
                    return [
                        "status"  => "error",
                        "message" => "Invalid response from API",
                        "raw"     => $response
                    ];
                }

                return $decoded;       
                break;
            case 'active':
                $mob = '91' . $mob;
                $url = "https://shammtech.in/api/send-message-91-sms";
                $data = [
                    "applicationNumber"   => $username,
                    "otp"        => $otp,
                    "mob"        => $mob,
                    "templateId" => $templateId,
                ];

                $ch = curl_init($url);
                curl_setopt($ch, CURLOPT_POST, true);
                curl_setopt($ch, CURLOPT_HTTPHEADER, ["Content-Type: application/json"]);
                curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
                curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);

                $response = curl_exec($ch);

                if (curl_errno($ch)) {
                    $error = curl_error($ch);
                    curl_close($ch);
                    return [
                        "status"  => "error",
                        "message" => "CURL Error: " . $error
                    ];
                }

                curl_close($ch);

                // Decode Laravel API response (which already returns JSON)
                $decoded = json_decode($response, true);

                if (!$decoded) {
                    return [
                        "status"  => "error",
                        "message" => "Invalid response from API",
                        "raw"     => $response
                    ];
                }

                return $decoded;
                break;
        }
    }

    function sendFunnelFamilyPersonMobileOtp()
    {
        if(isset($_POST['id']))
        {
            $getPreviousDetail = $this->db->query('select * from funnelfamily where id='.$_POST['id'])->result_array();
            $getIfAlreadyOtherInNominee1 = $this->db->query('select * from funnelfamily where well1="'.$_POST['mobile'].'" and id='.$_POST['id'])->result_array();
            $getIfAlreadyOtherInNominee2 = $this->db->query('select * from funnelfamily where well2="'.$_POST['mobile'].'" and id='.$_POST['id'])->result_array();
            $getIfAlreadyOtherInNominee3 = $this->db->query('select * from funnelfamily where well3="'.$_POST['mobile'].'" and id='.$_POST['id'])->result_array();
            if(count($getIfAlreadyOtherInNominee1) > 0 || count($getIfAlreadyOtherInNominee2) > 0 || count($getIfAlreadyOtherInNominee3) > 0)
            {
                $response = array(
                    'status' => 'username',
                    'message' => 'Mobile number already added'
                );
                echo json_encode($response);
            }else{
                // $otp = '1234';
                $string = '0123456789';
                $string_shuffled = str_shuffle($string);
                $otp = substr($string_shuffled, 1, 4);
                $sendStatus = $this->sendMessage91Otp($_SESSION['aadharName'],$_POST['mobile'],$otp,$this->config->item('login_template_id'));
                if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                    $response = [
                        'status' => 'error',
                        'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                    ];
                    echo json_encode($response);
                    die();
                }
                $updatedata = array(
                    'otp' => $otp
                );
                $this->db->where('id',$getPreviousDetail[0]['id']);
                $update = $this->db->update('funnelfamily',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'OTP Sent Successfully To - '.substr_replace($_POST['mobile'],'XXXXXXX',0,7)
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }
        }else{
            $getPreviousDetail = $this->db->query('select * from funnelfamily where id='.$_SESSION['funnelFamId'])->result_array();
            $getIfAlreadyOtherInNominee1 = $this->db->query('select * from funnelfamily where well1="'.$_POST['mobile'].'" and id='.$_SESSION['funnelFamId'])->result_array();
            $getIfAlreadyOtherInNominee2 = $this->db->query('select * from funnelfamily where well2="'.$_POST['mobile'].'" and id='.$_SESSION['funnelFamId'])->result_array();
            $getIfAlreadyOtherInNominee3 = $this->db->query('select * from funnelfamily where well3="'.$_POST['mobile'].'" and id='.$_SESSION['funnelFamId'])->result_array();
            if(count($getIfAlreadyOtherInNominee1) > 0 || count($getIfAlreadyOtherInNominee2) > 0 || count($getIfAlreadyOtherInNominee3) > 0)
            {
                $response = array(
                    'status' => 'username',
                    'message' => 'Mobile number already added'
                );
                echo json_encode($response);
            }else{
                // $otp = '1234';
                $string = '0123456789';
                $string_shuffled = str_shuffle($string);
                $otp = substr($string_shuffled, 1, 4);
                $sendStatus = $this->sendMessage91Otp($_SESSION['aadharName'],$_POST['mobile'],$otp,$this->config->item('login_template_id'));
                if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                    $response = [
                        'status' => 'error',
                        'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                    ];
                    echo json_encode($response);
                    die();
                }
                $updatedata = array(
                    'otp' => $otp
                );
                $this->db->where('id',$getPreviousDetail[0]['id']);
                $update = $this->db->update('funnelfamily',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'OTP Sent Successfully To - '.substr_replace($_POST['mobile'],'XXXXXXX',0,7)
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }   
        }
    }

    function deleteFunnelFaceMatchFromFamily()
    {
        if($_POST['index'] == 1)
        {
            $getPrevious = $this->db->query('select * from funnelfamily where id='.$_POST['id'])->result_array();
            unlink($getPrevious[0]['Photo1']);
            $this->db->query('update funnelfamily set Photo1=NULL,imageId1=NULL where id='.$_POST['id']);
        }else{
            $getPrevious = $this->db->query('select * from funnelfamily where id='.$_POST['id'])->result_array();
            unlink($getPrevious[0]['Photo2']);
            $this->db->query('update funnelfamily set Photo2=NULL,imageId2=NULL where id='.$_POST['id']);
        }
    }

    function deleteFunnelFamilyGold()
    {
        $this->db->query('delete from funnelfamilypersongold where Id='.$_POST['oldId']);
    }

    function manage_both_missing()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'manage_both_missing';
            if(isset($_GET['appNo']))
            {
                $page_data['data'] = $this->db->query('SELECT * FROM ( (SELECT id, Application_no, person_name, aadharNumber, Age, Gender, dob, missingDate, Message, isFinalSubmitted, Photo, dateCreated, userId, isFound, expiryDate, "funnel_missing" AS type, NULL AS isFree, NULL AS rescueDate, NULL AS isFromUpload, NULL AS awsEventName, NULL AS isKyc FROM funnel_missing WHERE userId = '.$_SESSION['user_id'].' ORDER BY dateCreated DESC LIMIT 1000000) UNION ALL (SELECT id, Application_no, person_name, aadharNumber, Age, Gender, dob, missingDate, Message, isFinalSubmitted, Photo, dateCreated, userId, isFound, expiryDate, "missing" AS type, NULL AS isFree, NULL AS rescueDate, NULL AS isFromUpload, NULL AS awsEventName, NULL AS isKyc FROM unknown_person WHERE Photo is not null and awsEventName = "All" AND userId = '.$_SESSION['user_id'].' AND isKyc = 0 and expiryDate is not null ORDER BY dateCreated DESC LIMIT 1000000)) AS combined_data where isFinalSubmitted = 1 and Application_no="'.$_GET['appNo'].'" ORDER BY dateCreated DESC;')->result_array();
            }else{
                $page_data['data'] = $this->db->query('SELECT * FROM ( (SELECT id, Application_no, person_name, aadharNumber, Age, Gender, dob, missingDate, Message, isFinalSubmitted, Photo, dateCreated, userId, isFound, expiryDate, "funnel_missing" AS type, NULL AS isFree, NULL AS rescueDate, NULL AS isFromUpload, NULL AS awsEventName, NULL AS isKyc FROM funnel_missing WHERE userId = '.$_SESSION['user_id'].' ORDER BY dateCreated DESC LIMIT 1000000) UNION ALL (SELECT id, Application_no, person_name, aadharNumber, Age, Gender, dob, missingDate, Message, isFinalSubmitted, Photo, dateCreated, userId, isFound, expiryDate, "missing" AS type, NULL AS isFree, NULL AS rescueDate, NULL AS isFromUpload, NULL AS awsEventName, NULL AS isKyc FROM unknown_person WHERE Photo is not null and awsEventName = "All" AND userId = '.$_SESSION['user_id'].' AND isKyc = 0 and expiryDate is not null ORDER BY dateCreated DESC LIMIT 1000000)) AS combined_data where isFinalSubmitted = 1 ORDER BY dateCreated DESC;')->result_array();
            }
            $page_data['rows'] = count($page_data['data']);
            $page_rows = 15;
         
            $last = ceil($page_data['rows']/$page_rows);

            if($last < 1){
                $last = 1;
            }
         
            $pagenum = 1;
         
            if(isset($_GET['pn'])){
                $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
            }
         
            if ($pagenum < 1) { 
                $pagenum = 1; 
            } 
            else if ($pagenum > $last) { 
                $pagenum = $last; 
            }
            if(isset($_GET['appNo']))
            {
                $page_data['data'] = $this->db->query('SELECT * FROM ( (SELECT id, Application_no, person_name, aadharNumber, Age, Gender, dob, missingDate, Message, isFinalSubmitted, Photo, dateCreated, userId, isFound, expiryDate, "funnel_missing" AS type, NULL AS isFree, NULL AS rescueDate, NULL AS isFromUpload, NULL AS awsEventName, NULL AS isKyc FROM funnel_missing WHERE userId = '.$_SESSION['user_id'].' ORDER BY dateCreated DESC LIMIT 1000000) UNION ALL (SELECT id, Application_no, person_name, aadharNumber, Age, Gender, dob, missingDate, Message, isFinalSubmitted, Photo, dateCreated, userId, isFound, expiryDate, "missing" AS type, NULL AS isFree, NULL AS rescueDate, NULL AS isFromUpload, NULL AS awsEventName, NULL AS isKyc FROM unknown_person WHERE Photo is not null and awsEventName = "All" AND userId = '.$_SESSION['user_id'].' AND isKyc = 0 and expiryDate is not null ORDER BY dateCreated DESC LIMIT 1000000)) AS combined_data where Application_no="'.$_GET['appNo'].'" and isFinalSubmitted = 1 ORDER BY dateCreated DESC;')->result_array();
            }else{
                $page_data['data'] = $this->db->query('SELECT * FROM ( (SELECT id, Application_no, person_name, aadharNumber, Age, Gender, dob, missingDate, Message, isFinalSubmitted, Photo, dateCreated, userId, isFound, expiryDate, "funnel_missing" AS type, NULL AS isFree, NULL AS rescueDate, NULL AS isFromUpload, NULL AS awsEventName, NULL AS isKyc FROM funnel_missing WHERE userId = '.$_SESSION['user_id'].' ORDER BY dateCreated DESC LIMIT 1000000) UNION ALL (SELECT id, Application_no, person_name, aadharNumber, Age, Gender, dob, missingDate, Message, isFinalSubmitted, Photo, dateCreated, userId, isFound, expiryDate, "missing" AS type, NULL AS isFree, NULL AS rescueDate, NULL AS isFromUpload, NULL AS awsEventName, NULL AS isKyc FROM unknown_person WHERE Photo is not null and awsEventName = "All" and expiryDate is not null AND userId = '.$_SESSION['user_id'].' AND isKyc = 0 ORDER BY dateCreated DESC LIMIT 1000000)) AS combined_data where isFinalSubmitted = 1 ORDER BY dateCreated DESC LIMIT '.$page_rows.' offset '.(($pagenum - 1) * $page_rows).';')->result_array();
            }
            $page_data['paginationCtrls'] = '';     
            if($last != 1){
                if ($pagenum > 1) {
                    $previous = $pagenum - 1;
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_both_missing?pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
             
                    for($i = $pagenum-4; $i < $pagenum; $i++){
                        if($i > 0){
                            $paginationCtrls .= '<a href="'.base_url().'NonKyc/manage_both_missing?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                        }
                    }
                }
             
                $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
             
                for($i = $pagenum+1; $i <= $last; $i++){
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_both_missing?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                    if($i >= $pagenum+4){
                        break;
                    }
                }
             
                if ($pagenum != $last) {
                    $next = $pagenum + 1;
                    $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manage_both_missing?pn='.$next.'" class="btn btn-default">Next</a> ';
                }
            }
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        }
    }

    function manage_both_family()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'manage_both_family';
            $page_data['data'] = $this->db->query('SELECT * FROM ( (SELECT id, person_name, aadharNumber, Age, Gender, dob, isFinalSubmitted, Photo, dateCreated, parentId, activeStatus, expiryDate, "family" AS type, NULL AS paymentStatus, NULL AS isKyc FROM familyMember WHERE parentId = '.$_SESSION['user_id'].' and expiryDate is not null and Photo is not null ORDER BY dateCreated DESC LIMIT 1000000) UNION ALL (SELECT id, person_name, aadharNumber, Age, Gender, dob, isFinalSubmitted, Photo, dateCreated, parentId, activeStatus, expiryDate, "funnel_family" AS type, NULL AS paymentStatus, NULL AS isKyc FROM funnelfamily WHERE parentId = '.$_SESSION['user_id'].' and expiryDate is not null and Photo is not null ORDER BY dateCreated DESC LIMIT 1000000)) AS combined_data where isFinalSubmitted = 1 ORDER BY dateCreated DESC;')->result_array();
            $page_data['rows'] = count($page_data['data']);
            $page_rows = 15;
         
            $last = ceil($page_data['rows']/$page_rows);

            if($last < 1){
                $last = 1;
            }
         
            $pagenum = 1;
         
            if(isset($_GET['pn'])){
                $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
            }
         
            if ($pagenum < 1) { 
                $pagenum = 1; 
            } 
            else if ($pagenum > $last) { 
                $pagenum = $last; 
            }
            $page_data['data'] = $this->db->query('SELECT * FROM ( (SELECT id, person_name, aadharNumber, Age, Gender, dob, isFinalSubmitted, Photo, dateCreated, parentId, activeStatus, expiryDate, "family" AS type, NULL AS paymentStatus, NULL AS isKyc FROM familyMember WHERE parentId = '.$_SESSION['user_id'].' and expiryDate is not null and Photo is not null ORDER BY dateCreated DESC LIMIT 1000000) UNION ALL (SELECT id, person_name, aadharNumber, Age, Gender, dob, isFinalSubmitted, Photo, dateCreated, parentId, activeStatus, expiryDate, "funnel_family" AS type, NULL AS paymentStatus, NULL AS isKyc FROM funnelfamily WHERE parentId = '.$_SESSION['user_id'].' and expiryDate is not null and Photo is not null ORDER BY dateCreated DESC LIMIT 1000000)) AS combined_data where isFinalSubmitted = 1 ORDER BY dateCreated DESC LIMIT '.$page_rows.' offset '.(($pagenum - 1) * $page_rows).';')->result_array();
            $page_data['paginationCtrls'] = '';     
            if($last != 1){
                if ($pagenum > 1) {
                    $previous = $pagenum - 1;
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_both_family?pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
             
                    for($i = $pagenum-4; $i < $pagenum; $i++){
                        if($i > 0){
                            $paginationCtrls .= '<a href="'.base_url().'NonKyc/manage_both_family?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                        }
                    }
                }
             
                $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
             
                for($i = $pagenum+1; $i <= $last; $i++){
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_both_family?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                    if($i >= $pagenum+4){
                        break;
                    }
                }
             
                if ($pagenum != $last) {
                    $next = $pagenum + 1;
                    $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manage_both_family?pn='.$next.'" class="btn btn-default">Next</a> ';
                }
            }
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        }
    }

    function manage_funnel_family()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'manage_funnel_family';
            $page_data['data'] = $this->db->query('select * from funnelfamily where isFinalSubmitted=1 and parentId='.$_SESSION['user_id'].' order by dateCreated desc')->result_array();
            $page_data['rows'] = count($page_data['data']);
            $page_rows = 15;
         
            $last = ceil($page_data['rows']/$page_rows);

            if($last < 1){
                $last = 1;
            }
         
            $pagenum = 1;
         
            if(isset($_GET['pn'])){
                $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
            }
         
            if ($pagenum < 1) { 
                $pagenum = 1; 
            } 
            else if ($pagenum > $last) { 
                $pagenum = $last; 
            }
            $this->db->where('isFinalSubmitted',1);
            $this->db->where('parentId',$_SESSION['user_id']);
            $this->db->order_by('dateCreated','desc');
            $this->db->limit($page_rows,($pagenum - 1) * $page_rows);
            $page_data['data'] = $this->db->get('funnelfamily')->result_array();
            $page_data['paginationCtrls'] = '';     
            if($last != 1){
                if ($pagenum > 1) {
                    $previous = $pagenum - 1;
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_funnel_family?pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
             
                    for($i = $pagenum-4; $i < $pagenum; $i++){
                        if($i > 0){
                            $paginationCtrls .= '<a href="'.base_url().'NonKyc/manage_funnel_family?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                        }
                    }
                }
             
                $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
             
                for($i = $pagenum+1; $i <= $last; $i++){
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_funnel_family?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                    if($i >= $pagenum+4){
                        break;
                    }
                }
             
                if ($pagenum != $last) {
                    $next = $pagenum + 1;
                    $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manage_funnel_family?pn='.$next.'" class="btn btn-default">Next</a> ';
                }
            }
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        } 
    }

    function manage_funnel_missing()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'manage_funnel_missing';
            if(!isset($_GET['appNo']))
            {
                $page_data['data'] = $this->db->query('select * from funnel_missing where userId='.$_SESSION['user_id'].' order by dateCreated desc')->result_array();
            }else{
                $page_data['data'] = $this->db->query('SELECT * FROM funnel_missing WHERE userId='.$_SESSION['user_id'].' and Application_no = "'.$_GET['appNo'].'" OR (Application_no IS NULL AND CONCAT("MAH", LPAD(id, 3, "0")) = "'.$_GET['appNo'].'")')->result_array();
            }
            $page_data['rows'] = count($page_data['data']);
            $page_rows = 15;
         
            $last = ceil($page_data['rows']/$page_rows);

            if($last < 1){
                $last = 1;
            }
         
            $pagenum = 1;
         
            if(isset($_GET['pn'])){
                $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
            }
         
            if ($pagenum < 1) { 
                $pagenum = 1; 
            } 
            else if ($pagenum > $last) { 
                $pagenum = $last; 
            }
            $this->db->where('userId',$_SESSION['user_id']);
            if(isset($_GET['appNo']))
            {
                $this->db->group_start(); // Start grouping conditions
                $this->db->where('Application_no', $_GET['appNo']);
                $this->db->or_where('Application_no IS NULL AND CONCAT("MAH", LPAD(id, 3, "0")) =', $_GET['appNo']);
                $this->db->group_end(); // End grouping conditions
            }
            $this->db->order_by('dateCreated','desc');
            $this->db->limit($page_rows,($pagenum - 1) * $page_rows);
            $page_data['data'] = $this->db->get('funnel_missing')->result_array();
            $page_data['paginationCtrls'] = '';     
            if($last != 1){
                if ($pagenum > 1) {
                    $previous = $pagenum - 1;
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_funnel_missing?pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
             
                    for($i = $pagenum-4; $i < $pagenum; $i++){
                        if($i > 0){
                            $paginationCtrls .= '<a href="'.base_url().'NonKyc/manage_funnel_missing?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                        }
                    }
                }
             
                $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
             
                for($i = $pagenum+1; $i <= $last; $i++){
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_funnel_missing?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                    if($i >= $pagenum+4){
                        break;
                    }
                }
             
                if ($pagenum != $last) {
                    $next = $pagenum + 1;
                    $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manage_funnel_missing?pn='.$next.'" class="btn btn-default">Next</a> ';
                }
            }
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        }
    }

    function sendFamilyPersonMobileOtp()
    {
        $getPreviousDetail = $this->db->query('select * from funnelfamily where id='.$_SESSION['funnelFamId'])->result_array();
        $getIfAlreadyOtherInNominee1 = $this->db->query('select * from funnelfamily where well1="'.$_POST['mobile'].'" and id='.$_SESSION['unknownId'])->result_array();
        $getIfAlreadyOtherInNominee2 = $this->db->query('select * from funnelfamily where well2="'.$_POST['mobile'].'" and id='.$_SESSION['unknownId'])->result_array();
        $getIfAlreadyOtherInNominee3 = $this->db->query('select * from funnelfamily where well3="'.$_POST['mobile'].'" and id='.$_SESSION['unknownId'])->result_array();
        if(count($getIfAlreadyOtherInNominee1) > 0 || count($getIfAlreadyOtherInNominee2) > 0 || count($getIfAlreadyOtherInNominee3) > 0)
        {
            $response = array(
                'status' => 'username',
                'message' => 'Mobile number already added'
            );
            echo json_encode($response);
        }else{
            // $otp = '1234';
            $string = '0123456789';
            $string_shuffled = str_shuffle($string);
            $otp = substr($string_shuffled, 1, 4);
            $sendStatus = $this->sendMessage91Otp($_SESSION['aadharName'],$_POST['mobile'],$otp,$this->config->item('login_template_id'));
            if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                $response = [
                    'status' => 'error',
                    'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                ];
                echo json_encode($response);
                die();
            }
            $updatedata = array(
                'otp' => $otp
            );
            $this->db->where('id',$getPreviousDetail[0]['id']);
            $update = $this->db->update('funnelfamily',$updatedata);
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'OTP Sent Successfully To - '.substr_replace($_POST['mobile'],'XXXXXXX',0,7)
                );
                echo json_encode($response);
            }else
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }   
    }

    function verifyFunnelFamilyPersonMobileOtp()
    {
        if(isset($_POST['id']))
        {
            $getPreviousDetail = $this->db->query('select * from funnelfamily where id='.$_POST['id'])->result_array();
            if($_POST['otp'] == $getPreviousDetail[0]['otp'])
            {
                if($_POST['index'] == 2)
                {
                    $updatedata = array(
                        'well2' => $_POST['mobile'],
                    );   
                }else if($_POST['index'] == 3)
                {
                    $updatedata = array(
                        'well3' => $_POST['mobile'],
                    );   
                }
                else{
                    $updatedata = array(
                        'well1' => $_POST['mobile'],
                    );
                }
                $this->db->where('id',$getPreviousDetail[0]['id']);
                $update = $this->db->update('funnelfamily',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'New Contact Added Successfully'
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'OTP Invalid'
                );
                echo json_encode($response);
            }
        }else{
            $getPreviousDetail = $this->db->query('select * from funnelfamily where id='.$_SESSION['funnelFamId'])->result_array();
            if($_POST['otp'] == $getPreviousDetail[0]['otp'])
            {
                if($_POST['index'] == 2)
                {
                    $updatedata = array(
                        'well2' => $_POST['mobile'],
                    );   
                }else if($_POST['index'] == 3)
                {
                    $updatedata = array(
                        'well3' => $_POST['mobile'],
                    );   
                }
                else{
                    $updatedata = array(
                        'well1' => $_POST['mobile'],
                    );
                }
                $this->db->where('id',$getPreviousDetail[0]['id']);
                $update = $this->db->update('funnelfamily',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'New Contact Added Successfully'
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'OTP Invalid'
                );
                echo json_encode($response);
            }   
        }
    }

    function uploadFunnelFamilyPhoto()
    {
        if(isset($_POST['id']))
        {
            $data = $_POST["file"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = 'FAM_'.time().''.rand(0,10000);
            $mainphoto = 'upload/familyMember/'.$imageId.'.'.$split1[1];
            file_put_contents($mainphoto, $data);
            if($_POST['isUploaded'] == 0)
            {
                $insertdata = array(
                    'photourl' => $mainphoto,
                    'funnelId' => $_POST['id']
                );
                $this->db->insert('funnelfamilyphotos',$insertdata);
            }else{
                $updatetdata = array(
                    'photourl' => $mainphoto,
                );
                $this->db->where('Id',$_POST['isUploaded']);
                $this->db->update('funnelfamilyphotos',$updatetdata);
            }
            $response = array(
                'status' => 'success',
                'message' => 'Photo Uploaded Successfully'
            );
            echo json_encode($response);     
        }else{
            $data = $_POST["file"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = 'FAM_'.time().''.rand(0,10000);
            $mainphoto = 'upload/familyMember/'.$imageId.'.'.$split1[1];
            file_put_contents($mainphoto, $data);
            if($_POST['isUploaded'] == 0)
            {
                $insertdata = array(
                    'photourl' => $mainphoto,
                    'funnelId' => $_SESSION['funnelFamId']
                );
                $this->db->insert('funnelfamilyphotos',$insertdata);
            }else{
                $updatetdata = array(
                    'photourl' => $mainphoto,
                );
                $this->db->where('Id',$_POST['isUploaded']);
                $this->db->update('funnelfamilyphotos',$updatetdata);
            }
            $response = array(
                'status' => 'success',
                'message' => 'Photo Uploaded Successfully'
            );
            echo json_encode($response);  
        }
    }

    function search_mahakumbh_filter()
    {
        if(isset($_SESSION['landingMob']))
        {
            if(isset($_GET['pn']))
            {
                if($_GET['pn'] == 2)
                {
                    if($_GET['idNumber'] != '')
                    {
                        if($_GET['idType'] == 'aadhar')
                        {
                            $this->db->where('aadharNumber',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'dl')
                        {
                            $this->db->where('Dl_no',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'pan')
                        {
                            $this->db->where('PAN',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'voter')
                        {
                            $this->db->where('voter_id',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'vehicle')
                        {
                            $this->db->where('vehicle_no',$_GET['idNumber']);
                        }
                    }
                    if($_GET['startFormDate'] != '')
                    {
                        $this->db->where('dateCreated >=',date('Y-m-d 00:00:00',strtotime($_GET['startFormDate'])));
                        $this->db->where('dateCreated <=',date('Y-m-d 23:59:59',strtotime($_GET['endFormDate'])));
                    }
                    if($_GET['genderForm'] != '')
                    {
                        $this->db->where('Gender',$_GET['genderForm']);
                    }
                    if(($_GET['personFormName']) != '')
                    {
                        $personFormName = $_GET['personFormName'];
                        $likeClauses = [];
                        for ($i = 0; $i < strlen($personFormName); $i++) {
                            $likeClauses[] = "person_name LIKE '%" . $personFormName[$i] . "%'";
                        }
                        $whereClause = implode(' OR ', $likeClauses);
                        $this->db->where("($whereClause)");
                    }
                    if(($_GET['AgeForm']) != '')
                    {
                        $this->db->where('AgeBand',$_GET['AgeForm']);
                    }
                    if(($_GET['stateForm']) != '')
                    {
                        $this->db->like('state',$_GET['stateForm']);
                    }
                    if(($_GET['districtForm']) != '')
                    {
                        $this->db->like('district',$_GET['districtForm']);
                    }
                    if(($_GET['faceMatch']) != '')
                    {
                        $this->db->where_in('imageId',explode(',',$_GET['faceMatch']));
                        $this->db->or_where_in('imageId1',explode(',',$_GET['faceMatch']));
                        $this->db->or_where_in('imageId2',explode(',',$_GET['faceMatch']));
                    }
                    $this->db->where('isFound',0);
                    $this->db->order_by('dateCreated','desc');
                    $page_data['data']=$this->db->get('mahakumbhSpecial')->result_array();
                    $page_data['rows'] = count($page_data['data']);
                    if(isset($_GET['perPage']))
                    {
                        $page_rows = $_GET['perPage'];
                        $page_data['perPage'] = $page_rows; 
                    }else{
                        $page_rows = 100;
                        $page_data['perPage'] = 100;
                    }
                    $last = ceil($page_data['rows']/$page_rows);
                    if($last < 1){
                        $last = 1;
                    }

                    $page_data['last'] = $last;
                 
                    $pagenum = 1;
                 
                    if(isset($_GET['page'])){
                        $pagenum = preg_replace('#[^0-9]#', '', $_GET['page']);
                    }
                 
                    if ($pagenum < 1) { 
                        $pagenum = 1; 
                    } 
                    else if ($pagenum > $last) { 
                        $pagenum = $last; 
                    }
                    if($_GET['idNumber'] != '')
                    {
                        if($_GET['idType'] == 'aadhar')
                        {
                            $this->db->where('aadharNumber',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'dl')
                        {
                            $this->db->where('Dl_no',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'pan')
                        {
                            $this->db->where('PAN',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'voter')
                        {
                            $this->db->where('voter_id',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'vehicle')
                        {
                            $this->db->where('vehicle_no',$_GET['idNumber']);
                        }
                    }
                    if($_GET['startFormDate'] != '')
                    {
                        $this->db->where('dateCreated >=',date('Y-m-d 00:00:00',strtotime($_GET['startFormDate'])));
                        $this->db->where('dateCreated <=',date('Y-m-d 23:59:59',strtotime($_GET['endFormDate'])));
                    }
                    if($_GET['genderForm'] != '')
                    {
                        $this->db->where('Gender',$_GET['genderForm']);
                    }
                    if(($_GET['personFormName']) != '')
                    {
                        $personFormName = $_GET['personFormName'];
                        $likeClauses = [];
                        for ($i = 0; $i < strlen($personFormName); $i++) {
                            $likeClauses[] = "person_name LIKE '%" . $personFormName[$i] . "%'";
                        }
                        $whereClause = implode(' OR ', $likeClauses);
                        $this->db->where("($whereClause)");
                    }
                    if(($_GET['AgeForm']) != '')
                    {
                        $this->db->where('AgeBand',$_GET['AgeForm']);
                    }
                    if(($_GET['stateForm']) != '')
                    {
                        $this->db->like('state',$_GET['stateForm']);
                    }
                    if(($_GET['districtForm']) != '')
                    {
                        $this->db->like('district',$_GET['districtForm']);
                    }
                    if(($_GET['faceMatch']) != '')
                    {
                        $this->db->where_in('imageId',explode(',',$_GET['faceMatch']));
                        $this->db->or_where_in('imageId1',explode(',',$_GET['faceMatch']));
                        $this->db->or_where_in('imageId2',explode(',',$_GET['faceMatch']));
                    }
                    $this->db->where('isFound',0);
                    $this->db->order_by('dateCreated','desc');
                    if($_GET['idNumber'] == '')
                    {
                        $this->db->limit($page_rows,($pagenum - 1) * $page_rows);
                    }
                    $page_data['data']=$this->db->get('mahakumbhSpecial')->result_array();
                    $page_data['paginationBigCtrls'] = '';     
                    $page_data['paginationMobileCtrls'] = '';     
                    if($last != 1){
                        if ($pagenum > 1) {
                            $previous = $pagenum - 1;
                            $page_data['paginationBigCtrls'] .= '<a href="javascript:void(0)" onclick="apply('.$previous.')" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                            $page_data['paginationMobileCtrls'] .= '<a href="javascript:void(0)" onclick="apply('.$previous.')" class="btn btn-default mt-0">Previous</a> &nbsp; &nbsp; ';
                     
                            for($i = $pagenum-4; $i < $pagenum; $i++){
                                if($i > 0){
                                    $paginationCtrls .= '<a href="javascript:void(0)" onclick="apply('.$i.')" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                }
                            }
                        }
                     
                        $page_data['paginationBigCtrls'] .= '<a href="javascript:void(0)" class="mt-0 ms-3">'.$pagenum.' </a>&nbsp; ';
                     
                        for($i = $pagenum+1; $i <= $last; $i++){
                            $page_data['paginationBigCtrls'] .= '<a href="javascript:void(0)" onclick="apply('.$i.')" class="btn btn-default">'.$i.'</a> &nbsp; ';
                            if($i >= $pagenum+4){
                                break;
                            }
                        }
                     
                        if ($pagenum != $last) {
                            $next = $pagenum + 1;
                            $page_data['paginationBigCtrls'] .= ' &nbsp; &nbsp; <a href="javascript:void(0)" onclick="apply('.$next.')" class="btn btn-default">Next</a> ';
                            $page_data['paginationMobileCtrls'] .= ' &nbsp; &nbsp; <a href="javascript:void(0)" onclick="apply('.$next.')" class="btn btn-default mt-0">Next</a> ';
                        }
                    }   
                }else{
                    $page_data['data']= [];
                    $page_data['paginationBigCtrls'] = '';
                    $page_data['paginationMobileCtrls'] = '';
                }
            }else{
                $page_data['data']= [];
                $page_data['paginationBigCtrls'] = '';
                $page_data['paginationMobileCtrls'] = '';
            }
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page'] = 1;
            if(isset($_GET['page']))
            {
                $page_data['page'] = $_GET['page'];    
            }
            $page_data['page_name'] = 'search_mahakumbh_filter';
            $this->load->view('nonkyc/index', $page_data);  
        }else{
           redirect(base_url().'mobile-landing-login?type=filter','refresh');
        }
    }

    function lapata_new_login()
    {
        if(isset($_SESSION['landingMob']))
        {
            unset($_SESSION['previous_url']);
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page_name'] = 'upload_new_lapata';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function mahakumbhSubmit()
    {
        $getPreviousData = $this->db->query('select * from mahakumbhMember where id='.$_POST['id'])->result_array();
        if($getPreviousData[0]['well1'] == NULL)
        {
            $updateData = array(
                'isFinalSubmitted' => 1,
                'finalSubmitTime' => date('Y-m-d h:i:s A')
            );   
            $this->db->where('id',$_POST['id']);
            $this->db->update('mahakumbhMember',$updateData);
        }else{
            $updateData = array(
                'isFinalSubmitted' => 1,
                'finalSubmitTime' => date('Y-m-d h:i:s A')
            );   
            $this->db->where('id',$_POST['id']);
            $this->db->update('mahakumbhMember',$updateData);
        }
    }

    function funnelfamilySubmit()
    {
        $getPreviousData = $this->db->query('select * from funnelfamily where id='.$_POST['id'])->result_array();
        if($getPreviousData[0]['well1'] == NULL)
        {
            $updateData = array(
                'isFinalSubmitted' => 1,
                'finalSubmitTime' => date('Y-m-d h:i:s A')
            );   
            $this->db->where('id',$_POST['id']);
            $this->db->update('funnelfamily',$updateData);
        }else{
            $updateData = array(
                'isFinalSubmitted' => 1,
                'finalSubmitTime' => date('Y-m-d h:i:s A')
            );   
            $this->db->where('id',$_POST['id']);
            $this->db->update('funnelfamily',$updateData);
        }
    }

    function familySubmit()
    {
        $getPreviousData = $this->db->query('select * from familyMember where id='.$_POST['id'])->result_array();
        if($getPreviousData[0]['well1'] == NULL)
        {
            $updateData = array(
                'isFinalSubmitted' => 1,
                'finalSubmitTime' => date('Y-m-d h:i:s A')
            );   
            $this->db->where('id',$_POST['id']);
            $this->db->update('familyMember',$updateData);
        }else{
            $updateData = array(
                'isFinalSubmitted' => 1,
                'finalSubmitTime' => date('Y-m-d h:i:s A')
            );   
            $this->db->where('id',$_POST['id']);
            $this->db->update('familyMember',$updateData);
        }
    }

    function showFamilyPaymentModels()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['page_name'] = 'showFamilyPaymentModels';
            $this->load->view('nonkyc/index', $page_data);  
        } else {
             redirect('login','refresh');
        }
    }

    function showMahakumbhPaymentModels()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['page_name'] = 'showMahakumbhPaymentModels';
            $this->load->view('nonkyc/index', $page_data);  
        } else {
             redirect('login','refresh');
        }
    }

    function deleteMahakumbhMember()
    {
        $getData = $this->db->query('select * from mahakumbhMember where id="'.$_POST['id'].'"')->result_array();
        unlink($getData[0]['Photo']);
        $this->db->query('delete from mahakumbhMember where id="'.$_POST['id'].'"');
    }

    function deleteMahakumbhSpecialMember()
    {
        $getData = $this->db->query('select * from mahakumbhSpecial where id="'.$_POST['id'].'"')->result_array();
        unlink($getData[0]['Photo']);
        $this->db->query('delete from mahakumbhSpecial where id="'.$_POST['id'].'"');
    }

    function deleteFamilyMember()
    {
        $getData = $this->db->query('select * from familyMember where id="'.$_POST['id'].'"')->result_array();
        unlink($getData[0]['Photo']);
        $this->db->query('delete from familyPersonGold where familyId='.$getData[0]['id']);
        $this->db->query('delete from familyMember where id="'.$_POST['id'].'"');
    }

    function deleteFunnelFamilyMember()
    {
        $getData = $this->db->query('select * from funnelfamily where id="'.$_POST['id'].'"')->result_array();
        unlink($getData[0]['Photo']);
        $this->db->query('delete from funnelfamilypersongold where funnelId='.$getData[0]['id']);
        $this->db->query('delete from funnelfamily where id="'.$_POST['id'].'"');
    }

    function reactivateFamilyMember()
    {
        if($_POST['status'] == 1)
        {
            $this->db->query('update familyMember set activeStatus=1 where id='.$_POST['id']);
        }else{
            $this->db->query('update familyMember set activeStatus=0 where id='.$_POST['id']);
        }
    }

    function reactivateFunnelFamilyMember()
    {
        if($_POST['status'] == 1)
        {
            $this->db->query('update funnelfamily set activeStatus=1 where id='.$_POST['id']);
        }else{
            $this->db->query('update funnelfamily set activeStatus=0 where id='.$_POST['id']);
        }
    }

    function reactivateSpecialFamilyMember()
    {
        if($_POST['status'] == 1)
        {
            $this->db->query('update mahakumbhSpecial set isFound=1 where id='.$_POST['id']);
        }else{
            $this->db->query('update mahakumbhSpecial set isFound=0 where id='.$_POST['id']);
        }
    }

    function manage_mahakumbh_person_special()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'manage_mahakumbh_person_special';
            if(!isset($_GET['appNo']))
            {
                $page_data['data'] = $this->db->query('select * from mahakumbhSpecial where userId='.$_SESSION['user_id'].' order by dateCreated desc')->result_array();
            }else{
                $page_data['data'] = $this->db->query('SELECT * FROM mahakumbhSpecial WHERE userId='.$_SESSION['user_id'].' and Application_no = "'.$_GET['appNo'].'" OR (Application_no IS NULL AND CONCAT("MAH", LPAD(id, 3, "0")) = "'.$_GET['appNo'].'")')->result_array();
            }
            $page_data['rows'] = count($page_data['data']);
            $page_rows = 15;
         
            $last = ceil($page_data['rows']/$page_rows);

            if($last < 1){
                $last = 1;
            }
         
            $pagenum = 1;
         
            if(isset($_GET['pn'])){
                $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
            }
         
            if ($pagenum < 1) { 
                $pagenum = 1; 
            } 
            else if ($pagenum > $last) { 
                $pagenum = $last; 
            }
            $this->db->where('userId',$_SESSION['user_id']);
            if(isset($_GET['appNo']))
            {
                $this->db->group_start(); // Start grouping conditions
                $this->db->where('Application_no', $_GET['appNo']);
                $this->db->or_where('Application_no IS NULL AND CONCAT("MAH", LPAD(id, 3, "0")) =', $_GET['appNo']);
                $this->db->group_end(); // End grouping conditions
            }
            $this->db->order_by('dateCreated','desc');
            $this->db->limit($page_rows,($pagenum - 1) * $page_rows);
            $page_data['data'] = $this->db->get('mahakumbhSpecial')->result_array();
            $page_data['paginationCtrls'] = '';     
            if($last != 1){
                if ($pagenum > 1) {
                    $previous = $pagenum - 1;
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_mahakumbh_person_special?pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
             
                    for($i = $pagenum-4; $i < $pagenum; $i++){
                        if($i > 0){
                            $paginationCtrls .= '<a href="'.base_url().'NonKyc/manage_mahakumbh_person_special?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                        }
                    }
                }
             
                $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
             
                for($i = $pagenum+1; $i <= $last; $i++){
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_mahakumbh_person_special?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                    if($i >= $pagenum+4){
                        break;
                    }
                }
             
                if ($pagenum != $last) {
                    $next = $pagenum + 1;
                    $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manage_mahakumbh_person_special?pn='.$next.'" class="btn btn-default">Next</a> ';
                }
            }
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        }
    }

    function manage_mahakumbh_person()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'manage_mahakumbh_person';
            $page_data['data'] = $this->db->query('select * from mahakumbhMember where isFinalSubmitted=1 and isKyc=0 and parentId='.$_SESSION['user_id'].' order by dateCreated desc')->result_array();
            $page_data['rows'] = count($page_data['data']);
            $page_rows = 15;
         
            $last = ceil($page_data['rows']/$page_rows);

            if($last < 1){
                $last = 1;
            }
         
            $pagenum = 1;
         
            if(isset($_GET['pn'])){
                $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
            }
         
            if ($pagenum < 1) { 
                $pagenum = 1; 
            } 
            else if ($pagenum > $last) { 
                $pagenum = $last; 
            }
            $this->db->where('isKyc',0);
            $this->db->where('isFinalSubmitted',1);
            $this->db->where('parentId',$_SESSION['user_id']);
            $this->db->order_by('dateCreated','desc');
            $this->db->limit($page_rows,($pagenum - 1) * $page_rows);
            $page_data['data'] = $this->db->get('mahakumbhMember')->result_array();
            $page_data['paginationCtrls'] = '';     
            if($last != 1){
                if ($pagenum > 1) {
                    $previous = $pagenum - 1;
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_mahakumbh_person?pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
             
                    for($i = $pagenum-4; $i < $pagenum; $i++){
                        if($i > 0){
                            $paginationCtrls .= '<a href="'.base_url().'NonKyc/manage_mahakumbh_person?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                        }
                    }
                }
             
                $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
             
                for($i = $pagenum+1; $i <= $last; $i++){
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_mahakumbh_person?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                    if($i >= $pagenum+4){
                        break;
                    }
                }
             
                if ($pagenum != $last) {
                    $next = $pagenum + 1;
                    $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manage_mahakumbh_person?pn='.$next.'" class="btn btn-default">Next</a> ';
                }
            }
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        }
    }

    function manage_family_person()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'manage_family_person';
            $page_data['data'] = $this->db->query('select * from familyMember where isFinalSubmitted=1 and isKyc=0 and parentId='.$_SESSION['user_id'].' order by dateCreated desc')->result_array();
            $page_data['rows'] = count($page_data['data']);
            $page_rows = 15;
         
            $last = ceil($page_data['rows']/$page_rows);

            if($last < 1){
                $last = 1;
            }
         
            $pagenum = 1;
         
            if(isset($_GET['pn'])){
                $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
            }
         
            if ($pagenum < 1) { 
                $pagenum = 1; 
            } 
            else if ($pagenum > $last) { 
                $pagenum = $last; 
            }
            $this->db->where('isKyc',0);
            $this->db->where('isFinalSubmitted',1);
            $this->db->where('parentId',$_SESSION['user_id']);
            $this->db->order_by('dateCreated','desc');
            $this->db->limit($page_rows,($pagenum - 1) * $page_rows);
            $page_data['data'] = $this->db->get('familyMember')->result_array();
            $page_data['paginationCtrls'] = '';     
            if($last != 1){
                if ($pagenum > 1) {
                    $previous = $pagenum - 1;
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_family_person?pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
             
                    for($i = $pagenum-4; $i < $pagenum; $i++){
                        if($i > 0){
                            $paginationCtrls .= '<a href="'.base_url().'NonKyc/manage_family_person?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                        }
                    }
                }
             
                $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
             
                for($i = $pagenum+1; $i <= $last; $i++){
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_family_person?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                    if($i >= $pagenum+4){
                        break;
                    }
                }
             
                if ($pagenum != $last) {
                    $next = $pagenum + 1;
                    $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manage_family_person?pn='.$next.'" class="btn btn-default">Next</a> ';
                }
            }
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        } 
    }

    function addMahakumbhSpecialFaceMatchPhoto()
    {
        $data = $_POST["image"];
        $image_array_1 = explode(";", $data);
        $split1 = explode('data:image/',$image_array_1[0]);
        $image_array_2 = explode(",", $image_array_1[1]);
        $data = base64_decode($image_array_2[1]);
        $imageId = 'SPE_'.time().''.rand(0,10000);
        $mainphoto = 'upload/mahakumbhSpecial/'.$imageId.'.'.$split1[1];
        file_put_contents($mainphoto, $data);
        $curl = curl_init();
        $postdata = json_encode(array(
            "collection_id" => "shivaguptabcakhoji4",
            "image_id" => $imageId,
            "image_url" => base_url().''.$mainphoto,
        ));
        curl_setopt_array($curl, array(
          CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => '',
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 0,
          CURLOPT_FOLLOWLOCATION => true,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => 'POST',
          CURLOPT_POSTFIELDS => $postdata,
          CURLOPT_HTTPHEADER => array(
            'Content-Type: application/json',
            'Authorization: '.$this->getSettings('facematchtoken')
          ),
        ));
        $response = json_decode(curl_exec($curl),true);
        curl_close($curl);
        if(count($response) > 0)
        {
            if($response['status'] == 200)
            {
                if($response['face_count'] == 1)
                {
                    if($_POST['index'] == '')
                    {
                        $this->db->query('update mahakumbhSpecial set Photo="'.$mainphoto.'",imageId="'.$imageId.'" where id='.$_POST['Id']);
                    }else if($_POST['index'] == 1)
                    {
                        $this->db->query('update mahakumbhSpecial set Photo1="'.$mainphoto.'",imageId="'.$imageId.'" where id='.$_POST['Id']);
                    }else{
                        $this->db->query('update mahakumbhSpecial set Photo2="'.$mainphoto.'",imageId="'.$imageId.'" where id='.$_POST['Id']);
                    }
                    $finalresponse = array(
                        'status' => 'success',
                    );
                    echo json_encode($finalresponse);
                }else{
                    if($response['face_count'] > 1)
                    {
                        $finalresponse = array(
                            'status' => 'error',
                            'message' => 'Multiple faces detected in image'
                        );
                        echo json_encode($finalresponse);
                    }else{
                        $finalresponse = array(
                            'status' => 'error',
                            'message' => 'No face found in the image'
                        );
                        echo json_encode($finalresponse);
                    }
                }
            }else{
                $finalresponse = array(
                    'status' => 'error',
                    'message' => 'Please upload valid face match image'
                );
                echo json_encode($finalresponse);
            }
        }else{
            $finalresponse = array(
                'status' => 'error',
                'message' => 'Please upload valid face match image'
            );
            echo json_encode($finalresponse);
        }
    }

    function addMahakumbhFaceMatchPhoto()
    {
        $data = $_POST["image"];
        $image_array_1 = explode(";", $data);
        $split1 = explode('data:image/',$image_array_1[0]);
        $image_array_2 = explode(",", $image_array_1[1]);
        $data = base64_decode($image_array_2[1]);
        $imageId = 'MAH_'.time().''.rand(0,10000);
        $mainphoto = 'upload/mahakumbhMember/nonkyc/'.$imageId.'.'.$split1[1];
        file_put_contents($mainphoto, $data);
        $curl = curl_init();
        $postdata = json_encode(array(
            "collection_id" => "shivaguptabcakhoji4",
            "image_id" => $imageId,
            "image_url" => base_url().''.$mainphoto,
        ));
        curl_setopt_array($curl, array(
          CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => '',
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 0,
          CURLOPT_FOLLOWLOCATION => true,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => 'POST',
          CURLOPT_POSTFIELDS => $postdata,
          CURLOPT_HTTPHEADER => array(
            'Content-Type: application/json',
            'Authorization: '.$this->getSettings('facematchtoken')
          ),
        ));
        $response = json_decode(curl_exec($curl),true);
        curl_close($curl);
        if(count($response) > 0)
        {
            if($response['status'] == 200)
            {
                if($response['face_count'] == 1)
                {
                    if($_POST['index'] == '')
                    {
                        $this->db->query('update mahakumbhMember set Photo="'.$mainphoto.'",imageId="'.$imageId.'" where id='.$_POST['Id']);
                    }else if($_POST['index'] == 1)
                    {
                        $this->db->query('update mahakumbhMember set Photo1="'.$mainphoto.'",imageId="'.$imageId.'" where id='.$_POST['Id']);
                    }else{
                        $this->db->query('update mahakumbhMember set Photo2="'.$mainphoto.'",imageId="'.$imageId.'" where id='.$_POST['Id']);
                    }
                    $finalresponse = array(
                        'status' => 'success',
                    );
                    echo json_encode($finalresponse);
                }else{
                    if($response['face_count'] > 1)
                    {
                        $finalresponse = array(
                            'status' => 'error',
                            'message' => 'Multiple faces detected in image'
                        );
                        echo json_encode($finalresponse);
                    }else{
                        $finalresponse = array(
                            'status' => 'error',
                            'message' => 'No face found in the image'
                        );
                        echo json_encode($finalresponse);
                    }
                }
            }else{
                $finalresponse = array(
                    'status' => 'error',
                    'message' => 'Please upload valid face match image'
                );
                echo json_encode($finalresponse);
            }
        }else{
            $finalresponse = array(
                'status' => 'error',
                'message' => 'Please upload valid face match image'
            );
            echo json_encode($finalresponse);
        }
    }

    function addFunnelFamilyFaceMatchPhoto()
    {
        if(isset($_POST['Id']))
        {
            $data = $_POST["image"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = 'FFU_'.time().''.rand(0,10000);
            $mainphoto = 'upload/familyMember/nonkyc/'.$imageId.'.'.$split1[1];
            file_put_contents($mainphoto, $data);
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcakhoji4",
                "image_id" => $imageId,
                "image_url" => base_url().''.$mainphoto,
            ));
            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => $postdata,
              CURLOPT_HTTPHEADER => array(
                'Content-Type: application/json',
                'Authorization: '.$this->getSettings('facematchtoken')
              ),
            ));
            $response = json_decode(curl_exec($curl),true);
            curl_close($curl);
            if(count($response) > 0)
            {
                if($response['status'] == 200)
                {
                    if($response['face_count'] == 1)
                    {
                        if($_POST['index'] == '')
                        {
                            $this->db->query('update funnelfamily set Photo="'.$mainphoto.'",imageId="'.$imageId.'" where id='.$_POST['Id']);
                        }else if($_POST['index'] == 1)
                        {
                            $this->db->query('update funnelfamily set Photo1="'.$mainphoto.'",imageId="'.$imageId.'" where id='.$_POST['Id']);
                        }else{
                            $this->db->query('update funnelfamily set Photo2="'.$mainphoto.'",imageId="'.$imageId.'" where id='.$_POST['Id']);
                        }
                        $finalresponse = array(
                            'status' => 'success',
                        );
                        echo json_encode($finalresponse);
                    }else{
                        if($response['face_count'] > 1)
                        {
                            $finalresponse = array(
                                'status' => 'error',
                                'message' => 'Multiple faces detected in image'
                            );
                            echo json_encode($finalresponse);
                        }else{
                            $finalresponse = array(
                                'status' => 'error',
                                'message' => 'No face found in the image'
                            );
                            echo json_encode($finalresponse);
                        }
                    }
                }else{
                    $finalresponse = array(
                        'status' => 'error',
                        'message' => 'Please upload valid face match image'
                    );
                    echo json_encode($finalresponse);
                }
            }else{
                $finalresponse = array(
                    'status' => 'error',
                    'message' => 'Please upload valid face match image'
                );
                echo json_encode($finalresponse);
            }
        }else{
            $data = $_POST["image"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = 'FFU_'.time().''.rand(0,10000);
            $mainphoto = 'upload/familyMember/nonkyc/'.$imageId.'.'.$split1[1];
            file_put_contents($mainphoto, $data);
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcakhoji4",
                "image_id" => $imageId,
                "image_url" => base_url().''.$mainphoto,
            ));
            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => $postdata,
              CURLOPT_HTTPHEADER => array(
                'Content-Type: application/json',
                'Authorization: '.$this->getSettings('facematchtoken')
              ),
            ));
            $response = json_decode(curl_exec($curl),true);
            curl_close($curl);
            if(count($response) > 0)
            {
                if($response['status'] == 200)
                {
                    if($response['face_count'] == 1)
                    {
                        if($_POST['index'] == '')
                        {
                            $this->db->query('update funnelfamily set Photo="'.$mainphoto.'",imageId="'.$imageId.'" where id='.$_SESSION['funnelFamId']);
                        }else if($_POST['index'] == 1)
                        {
                            $this->db->query('update funnelfamily set Photo1="'.$mainphoto.'",imageId="'.$imageId.'" where id='.$_SESSION['funnelFamId']);
                        }else{
                            $this->db->query('update funnelfamily set Photo2="'.$mainphoto.'",imageId="'.$imageId.'" where id='.$_SESSION['funnelFamId']);
                        }
                        $finalresponse = array(
                            'status' => 'success',
                        );
                        echo json_encode($finalresponse);
                    }else{
                        if($response['face_count'] > 1)
                        {
                            $finalresponse = array(
                                'status' => 'error',
                                'message' => 'Multiple faces detected in image'
                            );
                            echo json_encode($finalresponse);
                        }else{
                            $finalresponse = array(
                                'status' => 'error',
                                'message' => 'No face found in the image'
                            );
                            echo json_encode($finalresponse);
                        }
                    }
                }else{
                    $finalresponse = array(
                        'status' => 'error',
                        'message' => 'Please upload valid face match image'
                    );
                    echo json_encode($finalresponse);
                }
            }else{
                $finalresponse = array(
                    'status' => 'error',
                    'message' => 'Please upload valid face match image'
                );
                echo json_encode($finalresponse);
            }
        }
    }

    function addFamilyFaceMatchPhoto()
    {
        $data = $_POST["image"];
        $image_array_1 = explode(";", $data);
        $split1 = explode('data:image/',$image_array_1[0]);
        $image_array_2 = explode(",", $image_array_1[1]);
        $data = base64_decode($image_array_2[1]);
        $imageId = 'FAM_'.time().''.rand(0,10000);
        $mainphoto = 'upload/familyMember/nonkyc/'.$imageId.'.'.$split1[1];
        file_put_contents($mainphoto, $data);
        $curl = curl_init();
        $postdata = json_encode(array(
            "collection_id" => "shivaguptabcakhoji4",
            "image_id" => $imageId,
            "image_url" => base_url().''.$mainphoto,
        ));
        curl_setopt_array($curl, array(
          CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => '',
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 0,
          CURLOPT_FOLLOWLOCATION => true,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => 'POST',
          CURLOPT_POSTFIELDS => $postdata,
          CURLOPT_HTTPHEADER => array(
            'Content-Type: application/json',
            'Authorization: '.$this->getSettings('facematchtoken')
          ),
        ));
        $response = json_decode(curl_exec($curl),true);
        curl_close($curl);
        if(count($response) > 0)
        {
            if($response['status'] == 200)
            {
                if($response['face_count'] == 1)
                {
                    if($_POST['index'] == '')
                    {
                        $this->db->query('update familyMember set Photo="'.$mainphoto.'",imageId="'.$imageId.'" where id='.$_POST['Id']);
                    }else if($_POST['index'] == 1)
                    {
                        $this->db->query('update familyMember set Photo1="'.$mainphoto.'",imageId="'.$imageId.'" where id='.$_POST['Id']);
                    }else{
                        $this->db->query('update familyMember set Photo2="'.$mainphoto.'",imageId="'.$imageId.'" where id='.$_POST['Id']);
                    }
                    $finalresponse = array(
                        'status' => 'success',
                    );
                    echo json_encode($finalresponse);
                }else{
                    if($response['face_count'] > 1)
                    {
                        $finalresponse = array(
                            'status' => 'error',
                            'message' => 'Multiple faces detected in image'
                        );
                        echo json_encode($finalresponse);
                    }else{
                        $finalresponse = array(
                            'status' => 'error',
                            'message' => 'No face found in the image'
                        );
                        echo json_encode($finalresponse);
                    }
                }
            }else{
                $finalresponse = array(
                    'status' => 'error',
                    'message' => 'Please upload valid face match image'
                );
                echo json_encode($finalresponse);
            }
        }else{
            $finalresponse = array(
                'status' => 'error',
                'message' => 'Please upload valid face match image'
            );
            echo json_encode($finalresponse);
        }
    }

    function saveMahakumbhPayment()
    {
        $getIfAlready = $this->db->query('select * from mahakumbhTransactions where isKyc=0 and userId='.$_SESSION['user_id'].' and familyId="'.$_POST['Id'].'" and expiryDate >= "'.date('Y-m-d').'" order by Id desc')->result_array();
        $getPackageDetails = $this->db->query('select * from packages where Id='.$_POST['planId'])->result_array();
        if(count($getIfAlready) > 0)
        {
            $date=date_create(date('Y-m-d',strtotime($getIfAlready[0]['expiryDate'])));
            date_add($date,date_interval_create_from_date_string($getPackageDetails[0]['validity']." days"));
            $finaldate = date_format($date,"Y-m-d");
            $update = $this->db->query('update mahakumbhMember set paymentStatus="success", expiryDate="'.$finaldate.'" where parentId='.$_SESSION['user_id'].' and id="'.$_POST['Id'].'"');
            $insertdata = array(
                'userId' => $_SESSION['user_id'],
                'isKyc' => 0,            
                'familyId' => $_POST['Id'],
                'dateCreated' => date('Y-m-d H:i:s A'),
                'expiryDate' => $finaldate,
                'amount' => $_POST['amount'],
                'packageId' => $_POST['planId']
            );
        }else{
            $update = $this->db->query('update mahakumbhMember set paymentStatus="success", expiryDate="'.date('Y-m-d',strtotime('+'.($getPackageDetails[0]['validity']).' days')).'" where parentId='.$_SESSION['user_id'].' and id="'.$_POST['Id'].'"');
            $insertdata = array(
                'userId' => $_SESSION['user_id'],
                'isKyc' => 0,            
                'familyId' => $_POST['Id'],
                'expiryDate' => date('Y-m-d',strtotime('+'.($getPackageDetails[0]['validity']).' days')),
                'dateCreated' => date('Y-m-d H:i:s A'),
                'amount' => $_POST['amount'],
                'packageId' => $_POST['planId'],
            );
        }
        $this->db->insert('mahakumbhTransactions', $insertdata);
        $response['Id'] = $this->db->insert_id();
        echo json_encode($response);    
    }

    function saveFamilyPayment()
    {
        $getIfAlready = $this->db->query('select * from familyTransactions where isKyc=0 and userId='.$_SESSION['user_id'].' and familyId="'.$_POST['Id'].'" and expiryDate >= "'.date('Y-m-d').'" order by Id desc')->result_array();
        $getPackageDetails = $this->db->query('select * from packages where Id='.$_POST['planId'])->result_array();
        if(count($getIfAlready) > 0)
        {
            $date=date_create(date('Y-m-d',strtotime($getIfAlready[0]['expiryDate'])));
            date_add($date,date_interval_create_from_date_string($getPackageDetails[0]['validity']." days"));
            $finaldate = date_format($date,"Y-m-d");
            $update = $this->db->query('update familyMember set paymentStatus="success", expiryDate="'.$finaldate.'" where parentId='.$_SESSION['user_id'].' and id="'.$_POST['Id'].'"');
            $insertdata = array(
                'userId' => $_SESSION['user_id'],
                'isKyc' => 0,            
                'familyId' => $_POST['Id'],
                'dateCreated' => date('Y-m-d H:i:s A'),
                'expiryDate' => $finaldate,
                'amount' => $_POST['amount'],
                'packageId' => $_POST['planId']
            );
        }else{
            $update = $this->db->query('update familyMember set paymentStatus="success", expiryDate="'.date('Y-m-d',strtotime('+'.($getPackageDetails[0]['validity']).' days')).'" where parentId='.$_SESSION['user_id'].' and id="'.$_POST['Id'].'"');
            $insertdata = array(
                'userId' => $_SESSION['user_id'],
                'isKyc' => 0,            
                'familyId' => $_POST['Id'],
                'expiryDate' => date('Y-m-d',strtotime('+'.($getPackageDetails[0]['validity']).' days')),
                'dateCreated' => date('Y-m-d H:i:s A'),
                'amount' => $_POST['amount'],
                'packageId' => $_POST['planId'],
            );
        }
        $this->db->insert('familyTransactions', $insertdata);
        $response['Id'] = $this->db->insert_id();
        echo json_encode($response);    
    }

    function editSpecialMahakumbhDetails()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['page_name'] = 'editSpecialMahakumbhDetails';
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['data'] = $this->db->query('select * from mahakumbhSpecial where id="'.$_GET['id'].'"')->result_array();
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        }
    }

    function editMahakumbhDetails()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['page_name'] = 'editMahakumbhDetails';
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['data'] = $this->db->query('select * from mahakumbhMember where id="'.$_GET['id'].'"')->result_array();
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        }
    }

    function editFunnelFamilyDetails()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['page_name'] = 'editFunnelFamilyDetails';
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['data'] = $this->db->query('select * from funnelfamily where id="'.$_GET['id'].'"')->result_array();
            $page_data['gold'] = $this->db->query('select * from funnelfamilypersongold where goldHUID != "" and funnelId='.$page_data['data'][0]['id'])->result_array();
            // $page_data['data'] = array();
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        }
    }

    function editFamilyDetails()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['page_name'] = 'editFamilyDetails';
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['data'] = $this->db->query('select * from familyMember where id="'.$_GET['id'].'"')->result_array();
            $page_data['gold'] = $this->db->query('select * from familyPersonGold where goldHUID != "" and familyId='.$page_data['data'][0]['id'])->result_array();
            // $page_data['data'] = array();
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        }
    }

    function postMahakumbhMemberSpecial()
    {
        if(isset($_SESSION['landingMob']))
        {
            $algoSentTime = date('Y-m-d H:i:s A');
            if(isset($_POST['id']) && $_POST['id'] != '')
            {
                if($_FILES['Photo']['name'] != '')
                {
                    $getOldDetail = $this->db->query('select * from unknown_person where id='.$_POST['id'])->result_array();
                    $mainphoto1 = '';
                    $mainphoto2 = '';
                    $imageId1 = '';
                    $imageId2 = '';
                    if($_FILES['Photo1']['name'] != '')
                    {
                        $data = $_POST["facematch1"];
                        $image_array_1 = explode(";", $data);
                        $split1 = explode('data:image/',$image_array_1[0]);
                        $image_array_2 = explode(",", $image_array_1[1]);
                        $data = base64_decode($image_array_2[1]);
                        $imageId1 = 'SPE_'.time().''.rand(0,10000);
                        $mainphoto1 = 'upload/mahakumbhSpecial/'.$imageId1.'.'.$split1[1];
                        file_put_contents($mainphoto1, $data);
                        $curl = curl_init();
                        $postdata = json_encode(array(
                            "collection_id" => "shivaguptabcakhoji4",
                            "image_id" => $imageId1,
                            "image_url" => base_url().''.$mainphoto1
                        ));
                        curl_setopt_array($curl, array(
                            CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                            CURLOPT_RETURNTRANSFER => true,
                            CURLOPT_ENCODING => '',
                            CURLOPT_MAXREDIRS => 10,
                            CURLOPT_TIMEOUT => 0,
                            CURLOPT_FOLLOWLOCATION => true,
                            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                            CURLOPT_CUSTOMREQUEST => 'POST',
                            CURLOPT_POSTFIELDS => $postdata,
                            CURLOPT_HTTPHEADER => array(
                                'Content-Type: application/json',
                                'Authorization: '.$this->getSettings('facematchtoken')
                            ),
                        ));
                        
                        $response = json_decode(curl_exec($curl),true);
                        if(count($response) > 0)
                        {
                            if($response['status'] == 200)
                            {
                                if($response['face_count'] != 1)
                                {
                                    if($response['face_count'] > 1)
                                    {
                                        $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                        return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$_POST['id']);
                                    }else{
                                        $this->session->set_flashdata('error', 'No face found in the image');   
                                        return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$_POST['id']);
                                    }
                                }
                            }
                        }
                    }else{
                        $imageId1 = ($getOldDetail[0]['imageId1'] == NULL ? ($getOldDetail[0]['imageId2'] != NULL ? $getOldDetail[0]['imageId2'] : '') : $getOldDetail[0]['imageId1']);
                        $mainphoto1 = ($getOldDetail[0]['Photo1'] == NULL ? ($getOldDetail[0]['Photo2'] != NULL ? $getOldDetail[0]['Photo2'] : '') : $getOldDetail[0]['Photo1']);
                    }
                    if($_FILES['Photo2']['name'] != '')
                    {
                        $data = $_POST["facematch2"];
                        $image_array_1 = explode(";", $data);
                        $split1 = explode('data:image/',$image_array_1[0]);
                        $image_array_2 = explode(",", $image_array_1[1]);
                        $data = base64_decode($image_array_2[1]);
                        if($imageId1 == '')
                        {
                            $imageId1 = 'SPE_'.time().''.rand(0,10000);
                            $mainphoto1 = 'upload/mahakumbhSpecial/'.$imageId1.'.'.$split1[1];
                            file_put_contents($mainphoto1, $data);
                            $curl = curl_init();
                            $postdata = json_encode(array(
                                "collection_id" => "shivaguptabcakhoji4",
                                "image_id" => $imageId1,
                                "image_url" => base_url().''.$mainphoto1
                            ));
                        }else{
                            $imageId2 = 'SPE_'.time().''.rand(0,10000);
                            $mainphoto2 = 'upload/mahakumbhSpecial/'.$imageId2.'.'.$split1[1];
                            file_put_contents($mainphoto2, $data);
                            $curl = curl_init();
                            $postdata = json_encode(array(
                                "collection_id" => "shivaguptabcakhoji4",
                                "image_id" => $imageId2,
                                "image_url" => base_url().''.$mainphoto2
                            ));
                        }
                        curl_setopt_array($curl, array(
                            CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                            CURLOPT_RETURNTRANSFER => true,
                            CURLOPT_ENCODING => '',
                            CURLOPT_MAXREDIRS => 10,
                            CURLOPT_TIMEOUT => 0,
                            CURLOPT_FOLLOWLOCATION => true,
                            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                            CURLOPT_CUSTOMREQUEST => 'POST',
                            CURLOPT_POSTFIELDS => $postdata,
                            CURLOPT_HTTPHEADER => array(
                                'Content-Type: application/json',
                                'Authorization: '.$this->getSettings('facematchtoken')
                            ),
                        ));
                        
                        $response = json_decode(curl_exec($curl),true);   
                        if(count($response) > 0)
                        {
                            if($response['status'] == 200)
                            {
                                if($response['face_count'] != 1)
                                {
                                    if($response['face_count'] > 1)
                                    {
                                        $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                        return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$_POST['id']);
                                    }else{
                                        $this->session->set_flashdata('error', 'No face found in the image');   
                                        return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$_POST['id']);
                                    }
                                }
                            }
                        }
                    }else{
                        $imageId2 = ($imageId1 == '' ? ($getOldDetail[0]['imageId2'] != NULL ? $getOldDetail[0]['imageId2'] : NULL) : $getOldDetail[0]['imageId2']);
                        $mainphoto2 = ($mainphoto1 == '' ? ($getOldDetail[0]['Photo2'] != NULL ? $getOldDetail[0]['Photo2'] : NULL) : $getOldDetail[0]['Photo2']);
                    }
                    $data = $_POST["facematch"];
                    $image_array_1 = explode(";", $data);
                    $split1 = explode('data:image/',$image_array_1[0]);
                    $image_array_2 = explode(",", $image_array_1[1]);
                    $data = base64_decode($image_array_2[1]);
                    $imageId = 'SPE_'.time().''.rand(0,10000);
                    $mainphoto = 'upload/mahakumbhSpecial/'.$imageId.'.'.$split1[1];
                    file_put_contents($mainphoto, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId,
                        "image_url" => base_url().''.$mainphoto
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    
                    $response = json_decode(curl_exec($curl),true);
                    curl_close($curl);
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] == 1)
                            {
                                $dateCreated = date('Y-m-d H:i:s A');
                                $insertdata = array(
                                    'imageId' => $imageId,
                                    'imageId1' => $imageId1,
                                    'imageId2' => $imageId2,
                                    'aadharNumber' => $_POST['aadhar_id'],
                                    'state' => $_POST['state'],
                                    'district' => $_POST['district'],
                                    'Gender' => $_POST['Gender'],
                                    'PAN' => $_POST['PAN'],
                                    'well2' => $_POST['otherMob2'],
                                    'well3' => $_POST['otherMob3'],
                                    'Photo' =>  $mainphoto,
                                    'missingDate' => $_POST['dateCreated'] ?? NULL,
                                    'Photo1' => $mainphoto1,
                                    'Photo2' => $mainphoto2,
                                    'DL_no' => $_POST['DL_no'],
                                    'voter_id' => $_POST['voter_id'],
                                    'person_name' => $_POST['person_name'] ?? NULL,
                                    'vehicle_no' => $_POST['vehicle_no'],
                                    'AgeBand' => $_POST['AgeBand'],
                                    'Message' => $_POST['Message'],
                                    'vehicle_no' => $_POST['vehicle_no'],
                                );
                                $this->db->where('id',$_POST['id']);
                                $in=$this->db->update('mahakumbhSpecial',$insertdata);
                                if($in)
                                {
                                    if(!isset($response))
                                    {
                                        $response = array();
                                    }
                                    $vectorizerData = array(
                                        'unknownId' => $_POST['id'],
                                        'imageStatus' => 'Pending',
                                        'uploadTime' => $dateCreated,
                                        'isUpload' => 0
                                    );
                                    $this->db->insert('indexer',$vectorizerData);
                                    $this->session->set_flashdata('success', 'Record Updated Successfully');
                                    return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$_POST['id'].'&pn=2');
                                }
                                else
                                {
                                    $this->session->set_flashdata('error', 'No Update Try Again.');
                                    return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$_POST['id']);
                                }
                            }else{
                                if($response['face_count'] > 1)
                                {
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$_POST['id']);
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$_POST['id']);
                                }
                            }
                        }else{
                            $this->session->set_flashdata('error', 'Please upload valid face match image');
                            return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$_POST['id']);
                        }   
                    }else{
                        $this->session->set_flashdata('error', 'Please upload valid face match image');
                        return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$_POST['id']);
                    }
                }else{
                    $getOldDetail = $this->db->query('select * from mahakumbhSpecial where id='.$_POST['id'])->result_array();
                    $mainphoto1 = '';
                    $mainphoto2 = '';
                    $imageId1 = '';
                    $imageId2 = '';
                    if($_FILES['Photo1']['name'] != '')
                    {
                        $data = $_POST["facematch1"];
                        $image_array_1 = explode(";", $data);
                        $split1 = explode('data:image/',$image_array_1[0]);
                        $image_array_2 = explode(",", $image_array_1[1]);
                        $data = base64_decode($image_array_2[1]);
                        $imageId1 = 'SPE_'.time().''.rand(0,10000);
                        $mainphoto1 = 'upload/mahakumbhSpecial/'.$imageId1.'.'.$split1[1];
                        file_put_contents($mainphoto1, $data);
                        $curl = curl_init();
                        $postdata = json_encode(array(
                            "collection_id" => "shivaguptabcakhoji4",
                            "image_id" => $imageId1,
                            "image_url" => base_url().''.$mainphoto1
                        ));
                        curl_setopt_array($curl, array(
                            CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                            CURLOPT_RETURNTRANSFER => true,
                            CURLOPT_ENCODING => '',
                            CURLOPT_MAXREDIRS => 10,
                            CURLOPT_TIMEOUT => 0,
                            CURLOPT_FOLLOWLOCATION => true,
                            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                            CURLOPT_CUSTOMREQUEST => 'POST',
                            CURLOPT_POSTFIELDS => $postdata,
                            CURLOPT_HTTPHEADER => array(
                                'Content-Type: application/json',
                                'Authorization: '.$this->getSettings('facematchtoken')
                            ),
                        ));
                        
                        $response = json_decode(curl_exec($curl),true);
                        if(count($response) > 0)
                        {
                            if($response['status'] == 200)
                            {
                                if($response['face_count'] != 1)
                                {
                                    if($response['face_count'] > 1)
                                    {
                                        $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                        return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$_POST['id']);
                                    }else{
                                        $this->session->set_flashdata('error', 'No face found in the image');   
                                        return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$_POST['id']);
                                    }
                                }
                            }
                        }
                    }else{
                        $imageId1 = $getOldDetail[0]['imageId1'];
                        $mainphoto1 = $getOldDetail[0]['Photo1'];
                    }
                    if($_FILES['Photo2']['name'] != '')
                    {
                        $data = $_POST["facematch2"];
                        $image_array_1 = explode(";", $data);
                        $split1 = explode('data:image/',$image_array_1[0]);
                        $image_array_2 = explode(",", $image_array_1[1]);
                        $data = base64_decode($image_array_2[1]);
                        if($imageId1 == '')
                        {
                            $imageId1 = 'SPE_'.time().''.rand(0,10000);
                            $mainphoto1 = 'upload/mahakumbhSpecial/'.$imageId1.'.'.$split1[1];
                            file_put_contents($mainphoto1, $data);
                            $curl = curl_init();
                            $postdata = json_encode(array(
                                "collection_id" => "shivaguptabcakhoji4",
                                "image_id" => $imageId1,
                                "image_url" => base_url().''.$mainphoto1
                            ));
                        }else{
                            $imageId2 = 'SPE_'.time().''.rand(0,10000);
                            $mainphoto2 = 'upload/mahakumbhSpecial/'.$imageId2.'.'.$split1[1];
                            file_put_contents($mainphoto2, $data);
                            $curl = curl_init();
                            $postdata = json_encode(array(
                                "collection_id" => "shivaguptabcakhoji4",
                                "image_id" => $imageId2,
                                "image_url" => base_url().''.$mainphoto2
                            ));
                        }
                        curl_setopt_array($curl, array(
                            CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                            CURLOPT_RETURNTRANSFER => true,
                            CURLOPT_ENCODING => '',
                            CURLOPT_MAXREDIRS => 10,
                            CURLOPT_TIMEOUT => 0,
                            CURLOPT_FOLLOWLOCATION => true,
                            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                            CURLOPT_CUSTOMREQUEST => 'POST',
                            CURLOPT_POSTFIELDS => $postdata,
                            CURLOPT_HTTPHEADER => array(
                                'Content-Type: application/json',
                                'Authorization: '.$this->getSettings('facematchtoken')
                            ),
                        ));
                        
                        $response = json_decode(curl_exec($curl),true);   
                        if(count($response) > 0)
                        {
                            if($response['status'] == 200)
                            {
                                if($response['face_count'] != 1)
                                {
                                    if($response['face_count'] > 1)
                                    {
                                        $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                        return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$_POST['id']);
                                    }else{
                                        $this->session->set_flashdata('error', 'No face found in the image');   
                                        return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$_POST['id']);
                                    }
                                }
                            }
                        }
                    }else{
                        $imageId2 = $getOldDetail[0]['imageId2'];
                        $mainphoto2 = $getOldDetail[0]['Photo2'];
                    }
                    $dateCreated = date('Y-m-d H:i:s A');
                    $insertdata = array(
                        'imageId1' => $imageId1,
                        'imageId2' => $imageId2,
                        'well2' => $_POST['otherMob2'],
                        'well3' => $_POST['otherMob3'],
                        'aadharNumber' => $_POST['aadhar_id'],
                        'state' => $_POST['state'],
                        'district' => $_POST['district'],
                        'Gender' => $_POST['Gender'],
                        'PAN' => $_POST['PAN'],
                        'missingDate' => $_POST['dateCreated'],
                        'Photo1' => $mainphoto1,
                        'Photo2' => $mainphoto2,
                        'DL_no' => $_POST['DL_no'],
                        'voter_id' => $_POST['voter_id'],
                        'person_name' => $_POST['person_name'],
                        'AgeBand' => $_POST['AgeBand'],
                        'Message' => $_POST['Message'],
                        'vehicle_no' => $_POST['vehicle_no'],
                    );
                    $this->db->where('id',$_POST['id']);
                    $in=$this->db->update('mahakumbhSpecial',$insertdata);
                }
                if($in)
                {
                    if(!isset($response))
                    {
                        $response = array();
                    }
                    $vectorizerData = array(
                        'unknownId' => $_POST['id'],
                        'imageStatus' => 'Pending',
                        'uploadTime' => $dateCreated,
                        'isUpload' => 0
                    );
                    $this->db->insert('indexer',$vectorizerData);
                    $this->session->set_flashdata('success', 'Record Updated Successfully');
                    return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$_POST['id'].'&pn=2');
                    
        
                }
                else
                {
                    $this->session->set_flashdata('error', 'No Update Try Again.');
                    return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$_POST['id']);
                }
            }else{
                $mainphoto = '';
                $imageId = '';
                $mainphoto1 = '';
                $mainphoto2 = '';
                $imageId1 = '';
                $imageId2 = '';
                if($_POST['facematch1'] != '')
                {
                    $data = $_POST["facematch1"];
                    $image_array_1 = explode(";", $data);
                    $split1 = explode('data:image/',$image_array_1[0]);
                    $image_array_2 = explode(",", $image_array_1[1]);
                    $data = base64_decode($image_array_2[1]);
                    $imageId1 = 'SPE_'.time().''.rand(0,10000);
                    $mainphoto1 = 'upload/mahakumbhSpecial/'.$imageId1.'.'.$split1[1];
                    file_put_contents($mainphoto1, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId1,
                        "image_url" => base_url().''.$mainphoto1
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    
                    $response = json_decode(curl_exec($curl),true);
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] != 1)
                            {
                                if($response['face_count'] > 1)
                                {
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/add_mahakumbh_member_special');
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/add_mahakumbh_member_special');
                                }
                            }
                        }
                    }
                }
                if($_POST['facematch2'] != '')
                {
                    $data = $_POST["facematch2"];
                    $image_array_1 = explode(";", $data);
                    $split1 = explode('data:image/',$image_array_1[0]);
                    $image_array_2 = explode(",", $image_array_1[1]);
                    $data = base64_decode($image_array_2[1]);
                    if($_FILES['Photo1']['name'] == '')
                    {
                        $imageId1 = 'SPE_'.time().''.rand(0,10000);
                        $mainphoto1 = 'upload/mahakumbhSpecial/'.$imageId1.'.'.$split1[1];
                        file_put_contents($mainphoto1, $data);
                        $curl = curl_init();
                        $postdata = json_encode(array(
                            "collection_id" => "shivaguptabcakhoji4",
                            "image_id" => $imageId1,
                            "image_url" => base_url().''.$mainphoto1
                        ));
                        curl_setopt_array($curl, array(
                            CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                            CURLOPT_RETURNTRANSFER => true,
                            CURLOPT_ENCODING => '',
                            CURLOPT_MAXREDIRS => 10,
                            CURLOPT_TIMEOUT => 0,
                            CURLOPT_FOLLOWLOCATION => true,
                            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                            CURLOPT_CUSTOMREQUEST => 'POST',
                            CURLOPT_POSTFIELDS => $postdata,
                            CURLOPT_HTTPHEADER => array(
                                'Content-Type: application/json',
                                'Authorization: '.$this->getSettings('facematchtoken')
                            ),
                        ));
                        
                        $response = json_decode(curl_exec($curl),true);   
                        if(count($response) > 0)
                        {
                            if($response['status'] == 200)
                            {
                                if($response['face_count'] != 1)
                                {
                                    if($response['face_count'] > 1)
                                    {
                                        $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                        return redirect( base_url().'NonKyc/add_mahakumbh_member_special');
                                    }else{
                                        $this->session->set_flashdata('error', 'No face found in the image');   
                                        return redirect( base_url().'NonKyc/add_mahakumbh_member_special');
                                    }
                                }
                            }
                        }
                    }else{
                        if($imageId1 == '')
                        {
                            $imageId1 = 'SPE_'.time().''.rand(0,10000);
                            $mainphoto1 = 'upload/mahakumbhSpecial/'.$imageId1.'.'.$split1[1];
                            file_put_contents($mainphoto1, $data);
                            $curl = curl_init();
                            $postdata = json_encode(array(
                                "collection_id" => "shivaguptabcakhoji4",
                                "image_id" => $imageId1,
                                "image_url" => base_url().''.$mainphoto1
                            ));
                        }else{
                            $imageId2 = 'SPE_'.time().''.rand(0,10000);
                            $mainphoto2 = 'upload/mahakumbhSpecial/'.$imageId2.'.'.$split1[1];
                            file_put_contents($mainphoto2, $data);
                            $curl = curl_init();
                            $postdata = json_encode(array(
                                "collection_id" => "shivaguptabcakhoji4",
                                "image_id" => $imageId2,
                                "image_url" => base_url().''.$mainphoto2
                            ));
                        }
                        curl_setopt_array($curl, array(
                            CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                            CURLOPT_RETURNTRANSFER => true,
                            CURLOPT_ENCODING => '',
                            CURLOPT_MAXREDIRS => 10,
                            CURLOPT_TIMEOUT => 0,
                            CURLOPT_FOLLOWLOCATION => true,
                            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                            CURLOPT_CUSTOMREQUEST => 'POST',
                            CURLOPT_POSTFIELDS => $postdata,
                            CURLOPT_HTTPHEADER => array(
                                'Content-Type: application/json',
                                'Authorization: '.$this->getSettings('facematchtoken')
                            ),
                        ));
                        
                        $response = json_decode(curl_exec($curl),true);   
                        if(count($response) > 0)
                        {
                            if($response['status'] == 200)
                            {
                                if($response['face_count'] != 1)
                                {
                                    if($response['face_count'] > 1)
                                    {
                                        $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                        return redirect( base_url().'NonKyc/add_mahakumbh_member_special');
                                    }else{
                                        $this->session->set_flashdata('error', 'No face found in the image');   
                                        return redirect( base_url().'NonKyc/add_mahakumbh_member_special');
                                    }
                                }
                            }
                        }
                    }
                }
                if($_POST['facematch'] != '')
                {
                    $data = $_POST["facematch"];
                    $image_array_1 = explode(";", $data);
                    $split1 = explode('data:image/',$image_array_1[0]);
                    $image_array_2 = explode(",", $image_array_1[1]);
                    $data = base64_decode($image_array_2[1]);
                    $imageId = 'SPE_'.time().''.rand(0,10000);
                    $mainphoto = 'upload/mahakumbhSpecial/'.$imageId.'.'.$split1[1];
                    file_put_contents($mainphoto, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId,
                        "image_url" => base_url().''.$mainphoto
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    $response = json_decode(curl_exec($curl),true);
                    curl_close($curl);
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] == 1)
                            {
                            }else{
                                if($response['face_count'] > 1){
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/add_mahakumbh_member_special');
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/add_mahakumbh_member_special');
                                }
                            }
                        }else{
                            $this->session->set_flashdata('error', 'Please upload valid face match image');
                            return redirect( base_url().'NonKyc/add_mahakumbh_member_special');
                        }
                    }
                }
                $Appli_no= $this->generateMahaApplicationNumber();
                $insertdata = array(
                    'Application_no' => $Appli_no,
                    'well1' => $_POST['otherMob1'],
                    'well2' => $_POST['otherMob2'] ?? NULL,
                    'well3' => $_POST['otherMob3'] ?? NULL,
                    'imageId' => ($imageId != '' ? $imageId : NULL),
                    'imageId1' => ($imageId1 != '' ? $imageId1 : NULL),
                    'imageId2' => ($imageId2 != '' ? $imageId2 : NULL),
                    'state' => $_POST['state'],
                    'district' => $_POST['district'],
                    'aadharNumber' => isset($_POST['aadhar_id']) ? $_POST['aadhar_id'] : NULL,
                    'PAN' => $_POST['PAN'],
                    'DL_no' => $_POST['DL_no'],
                    'uploadType' => $_POST['uploadType'],
                    'voter_id' => $_POST['voter_id'],
                    'person_name' => $_POST['person_name'] ?? NULL,
                    'vehicle_no' => $_POST['vehicle_no'],
                    'missingDate' => $_POST['dateCreated'] ?? NULL,
                    'AgeBand' => $_POST['AgeBand'],
                    'userId' => $_SESSION['user_id'],
                    'dateCreated' => date('Y-m-d H:i:s A'),
                    'Message' => $_POST['Message'],
                    'Photo' => ($mainphoto != '' ? $mainphoto : NULL),
                    'Photo1' => ($mainphoto1 != '' ? $mainphoto1 : NULL),
                    'Photo2' => ($mainphoto2 != '' ? $mainphoto2 : NULL),
                    'Gender' => ($_POST['Gender'] == 'Male' ? 'Male' : 'Female'),
                );
                $in=$this->db->insert('mahakumbhSpecial',$insertdata);
                if($in)
                {
                    $_SESSION['specialId'] = $unkwownId = $this->db->insert_id();
                    $vectorizerData = array(
                        'unknownId' => $unkwownId,
                        'imageStatus' => 'Pending',
                        'uploadTime' => $insertdata['dateCreated'],
                        'isUpload' => 1
                    );
                    $this->db->insert('indexer',$vectorizerData);
                    return redirect( base_url().'NonKyc/editSpecialMahakumbhDetails?id='.$unkwownId.'&pn=2');
                }
                else
                {
                    $this->session->set_flashdata('error', 'No Insert Try Again.');
                    return redirect( base_url().'NonKyc/add_mahakumbh_member_special');
                }
            }
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function postMahakumbhMember()
    {
        if(isset($_SESSION['landingMob']))
        {
            if(isset($_POST['id']) && $_POST['id'] != '')
            {
                $insertdata = array(
                    'relation' => $_POST['otherrelation'],
                    'otherrelationname' => $_POST['otherrelationname'],
                    'dob' => $_POST['dob'],
                    'dateCreated' => date('Y-m-d H:i:s A'),
                    'aadharNumber' => $_POST['aadhar_id'],
                    'PAN' => $_POST['PAN'],
                    'DL_no' => $_POST['DL_no'],
                    'voter_id' => $_POST['voter_id'],
                    'person_name' => $_POST['person_name'],
                    'vehicle_no' => $_POST['vehicle_no'],
                    'state' => $_POST['state'],
                    'district' => $_POST['district'],
                    'Age' => $this->calculateAge($_POST['dob']),
                    'Gender' => ($_POST['Gender'] == 'Male' ? 'boy' : 'girl')
                );
                $this->db->where('id',$_POST['id']);
                $in=$this->db->update('mahakumbhMember',$insertdata);
                if($in)
                {
                    $this->session->set_flashdata('success', 'Record Updated Successfully');
                    return redirect( base_url().'NonKyc/editMahakumbhDetails?id='.$_POST['id'].'&pn=2');
                }
            }else{
                $well1 = NULL;
                $well2 = NULL;
                $well3 = NULL;
                $profileDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                if($_SESSION['loginmob'] == $profileDetail[0]['registration_mobile'])
                {
                    $well1 = $_SESSION['loginmob'];
                    if($profileDetail[0]['alternate_mobile1'] != NULL)
                    {
                        $well2 = $profileDetail[0]['alternate_mobile1'];
                    }else{
                        if($profileDetail[0]['alternate_mobile2'] != NULL)
                        {
                            $well2 = $profileDetail[0]['alternate_mobile2'];
                        }else{
                            if($profileDetail[0]['alternate_mobile3'] != NULL)
                            {
                                $well2 = $profileDetail[0]['alternate_mobile3'];
                            }
                        }
                    }
                    if($well2 != NULL)
                    {
                        if($profileDetail[0]['alternate_mobile1'] != NULL)
                        {
                        }else{
                            if($profileDetail[0]['alternate_mobile2'] != NULL)
                            {
                                $well3 = $profileDetail[0]['alternate_mobile2'];
                            }else{
                                if($profileDetail[0]['alternate_mobile3'] != NULL)
                                {
                                    $well3 = $profileDetail[0]['alternate_mobile3'];
                                }
                            }
                        }
                    }
                }else{
                    if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile1'])
                    {
                        $well1 = $profileDetail[0]['alternate_mobile1'];
                        $well2 = $profileDetail[0]['registration_mobile'];
                        if($profileDetail[0]['alternate_mobile2'] != NULL)
                        {
                            $well3 = $profileDetail[0]['alternate_mobile2'];
                        }else{
                            if($profileDetail[0]['alternate_mobile3'] != NULL)
                            {
                                $well3 = $profileDetail[0]['alternate_mobile3'];
                            }
                        }
                    }else{
                        if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile2'])
                        {
                            $well1 = $profileDetail[0]['alternate_mobile2'];
                            $well2 = $profileDetail[0]['registration_mobile'];
                            if($profileDetail[0]['alternate_mobile1'] != NULL)
                            {
                                $well3 = $profileDetail[0]['alternate_mobile1'];
                            }else{
                                if($profileDetail[0]['alternate_mobile3'] != NULL)
                                {
                                    $well3 = $profileDetail[0]['alternate_mobile3'];
                                }
                            }
                        }else{
                            if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile3'])
                            {
                                $well1 = $profileDetail[0]['alternate_mobile3'];
                                $well2 = $profileDetail[0]['registration_mobile'];
                                if($profileDetail[0]['alternate_mobile1'] != NULL)
                                {
                                    $well3 = $profileDetail[0]['alternate_mobile1'];
                                }else{
                                    if($profileDetail[0]['alternate_mobile2'] != NULL)
                                    {
                                        $well3 = $profileDetail[0]['alternate_mobile2'];
                                    }
                                }
                            }
                        }
                    }
                }
                $insertdata = array(
                    'relation' => $_POST['otherrelation'],
                    'otherrelationname' => $_POST['otherrelationname'],
                    'dob' => $_POST['dob'],
                    'isKyc' => 0,
                    'well1' => $well1,
                    'well2' => NULL,
                    'well3' => NULL,
                    'dateCreated' => date('Y-m-d H:i:s A'),
                    'aadharNumber' => !empty($_POST['aadhar_id']) ? $_POST['aadhar_id'] : NULL,
                    'PAN' => $_POST['PAN'],
                    'DL_no' => $_POST['DL_no'],
                    'voter_id' => $_POST['voter_id'],
                    'person_name' => $_POST['person_name'],
                    'state' => $_POST['state'],
                    'district' => $_POST['district'],
                    'Age' => $this->calculateAge($_POST['dob']),
                    'parentId' => $_SESSION['user_id'],
                    'paymentStatus' => 'Pending',
                    'Gender' => ($_POST['Gender'] == 'Male' ? 'boy' : 'girl'),
                );
                $in=$this->db->insert('mahakumbhMember',$insertdata);
                if($in)
                {
                    $_SESSION['mahakumbhId'] = $familyId = $this->db->insert_id();
                    return redirect( base_url().'NonKyc/editMahakumbhDetails?id='.$familyId.'&pn=2');
                }
                else
                {
                    $this->session->set_flashdata('error', 'No Insert Try Again.');
                    return redirect( base_url().'NonKyc/add_mahakumbh_member');
                }
            }
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function postFamilyFunnelMember()
    {
        if(isset($_SESSION['landingMob']))
        {
            if(isset($_POST['id']) && $_POST['id'] != '')
            {
                $insertdata = array(
                    'relation' => $_POST['otherrelation'],
                    'otherrelationname' => $_POST['otherrelationname'],
                    'dob' => $_POST['dob'],
                    'dateCreated' => date('Y-m-d H:i:s A'),
                    'aadharNumber' => $_POST['aadhar_id'],
                    'PAN' => $_POST['PAN'],
                    'DL_no' => $_POST['DL_no'],
                    'voter_id' => $_POST['voter_id'],
                    'person_name' => $_POST['person_name'],
                    'vehicle_no' => $_POST['vehicle_no'],
                    'state' => $_POST['state'],
                    'district' => $_POST['district'],
                    'city' => $_POST['city'],
                    'Age' => $this->calculateAge($_POST['dob']),
                    'Gender' => ($_POST['Gender'] == 'Male' ? 'boy' : 'girl')
                );
                $this->db->where('id',$_POST['id']);
                $in=$this->db->update('funnelfamily',$insertdata);
                if($in)
                {
                    if($_POST['goldCount']  > 0)
                    {
                        for($i=1;$i<=$_POST['goldCount'];$i++)
                        {
                            if(isset($_POST['oldId'.$i]))
                            {
                                $goldData = array(
                                    'funnelId' => $_POST['id'],
                                    'goldType' => $_POST['goldType'.$i],
                                    'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                );
                                $this->db->where('Id',$_POST['oldId'.$i]);
                                $this->db->update('funnelfamilypersongold',$goldData);
                            }else{
                                $goldData = array(
                                    'funnelId' => $_POST['id'],
                                    'goldType' => $_POST['goldType'.$i],
                                    'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                );
                                $this->db->insert('funnelfamilypersongold',$goldData);   
                            }
                        }
                    }
                    $this->session->set_flashdata('success', 'Record Updated Successfully');
                    return redirect( base_url().'NonKyc/editFunnelFamilyDetails?id='.$_POST['id'].'&pn=2');
                }
            }else{
                $well1 = NULL;
                $well2 = NULL;
                $well3 = NULL;
                $profileDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                if($_SESSION['loginmob'] == $profileDetail[0]['registration_mobile'])
                {
                    $well1 = $_SESSION['loginmob'];
                    if($profileDetail[0]['alternate_mobile1'] != NULL)
                    {
                        $well2 = $profileDetail[0]['alternate_mobile1'];
                    }else{
                        if($profileDetail[0]['alternate_mobile2'] != NULL)
                        {
                            $well2 = $profileDetail[0]['alternate_mobile2'];
                        }else{
                            if($profileDetail[0]['alternate_mobile3'] != NULL)
                            {
                                $well2 = $profileDetail[0]['alternate_mobile3'];
                            }
                        }
                    }
                    if($well2 != NULL)
                    {
                        if($profileDetail[0]['alternate_mobile1'] != NULL)
                        {
                        }else{
                            if($profileDetail[0]['alternate_mobile2'] != NULL)
                            {
                                $well3 = $profileDetail[0]['alternate_mobile2'];
                            }else{
                                if($profileDetail[0]['alternate_mobile3'] != NULL)
                                {
                                    $well3 = $profileDetail[0]['alternate_mobile3'];
                                }
                            }
                        }
                    }
                }else{
                    if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile1'])
                    {
                        $well1 = $profileDetail[0]['alternate_mobile1'];
                        $well2 = $profileDetail[0]['registration_mobile'];
                        if($profileDetail[0]['alternate_mobile2'] != NULL)
                        {
                            $well3 = $profileDetail[0]['alternate_mobile2'];
                        }else{
                            if($profileDetail[0]['alternate_mobile3'] != NULL)
                            {
                                $well3 = $profileDetail[0]['alternate_mobile3'];
                            }
                        }
                    }else{
                        if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile2'])
                        {
                            $well1 = $profileDetail[0]['alternate_mobile2'];
                            $well2 = $profileDetail[0]['registration_mobile'];
                            if($profileDetail[0]['alternate_mobile1'] != NULL)
                            {
                                $well3 = $profileDetail[0]['alternate_mobile1'];
                            }else{
                                if($profileDetail[0]['alternate_mobile3'] != NULL)
                                {
                                    $well3 = $profileDetail[0]['alternate_mobile3'];
                                }
                            }
                        }else{
                            if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile3'])
                            {
                                $well1 = $profileDetail[0]['alternate_mobile3'];
                                $well2 = $profileDetail[0]['registration_mobile'];
                                if($profileDetail[0]['alternate_mobile1'] != NULL)
                                {
                                    $well3 = $profileDetail[0]['alternate_mobile1'];
                                }else{
                                    if($profileDetail[0]['alternate_mobile2'] != NULL)
                                    {
                                        $well3 = $profileDetail[0]['alternate_mobile2'];
                                    }
                                }
                            }
                        }
                    }
                }
                $getIfAlready = $this->db->query('select * from funneltransactions where paymentType="family" and userId='.$_SESSION['user_id'].' and expiryDate >="'.date('Y-m-d').'" order by Id desc')->result_array();            
                $insertdata = array(
                    'relation' => $_POST['otherrelation'],
                    'otherrelationname' => $_POST['otherrelationname'],
                    'dob' => $_POST['dob'],
                    'well1' => $well1,
                    'well2' => NULL,
                    'well3' => NULL,
                    'dateCreated' => date('Y-m-d H:i:s A'),
                    'expiryDate' => (($getIfAlready) > 0 ? $getIfAlready[0]['expiryDate'] : NULL),
                    'aadharNumber' => !empty($_POST['aadhar_id']) ? $_POST['aadhar_id'] : NULL,
                    'PAN' => $_POST['PAN'],
                    'DL_no' => $_POST['DL_no'],
                    'voter_id' => $_POST['voter_id'],
                    'person_name' => $_POST['person_name'],
                    'state' => $_POST['state'],
                    'district' => $_POST['district'],
                    'city' => $_POST['city'],
                    'Age' => $this->calculateAge($_POST['dob']),
                    'parentId' => $_SESSION['user_id'],
                    'Gender' => ($_POST['Gender'] == 'Male' ? 'boy' : 'girl'),
                    'vehicleNumber1' => !empty($_POST['vehicleNumber1']) ? $_POST['vehicleNumber1'] : NULL,
                    'vehicleNumber2' => (isset($_POST['vehicleNumber2']) && !empty($_POST['vehicleNumber2'])) ? $_POST['vehicleNumber2'] : NULL,
                    'vehicleNumber3' => (isset($_POST['vehicleNumber2']) && !empty($_POST['vehicleNumber3'])) ? $_POST['vehicleNumber3'] : NULL,
                );
                $in=$this->db->insert('funnelfamily',$insertdata);
                if($in)
                {
                    $_SESSION['funnelFamId'] = $familyId = $this->db->insert_id();
                    $getLastRecord = $this->db->query('select * from funneltransactions where userId='.$_SESSION['user_id'].' and paymentType="family" order by Id desc')->result_array();
                    $this->db->query('update funneltransactions set isFinalSubmitted=1 where userId='.$_SESSION['user_id'].' and paymentType="family" and Id='.$getLastRecord[0]['Id']);
                    if($_POST['goldCount']  > 0)
                    {
                        for($i=1;$i<=$_POST['goldCount'];$i++)
                        {
                            $goldData = array(
                                'funnelId' => $_SESSION['funnelFamId'],
                                'goldType' => $_POST['goldType'.$i],
                                'goldHUID' => $_POST['goldHUIDNumber'.$i]
                            );
                            $this->db->insert('funnelfamilypersongold',$goldData);
                        }
                    }
                    return redirect( base_url().'upload-family-member-funnel?pn=2');
                }
                else
                {
                    $this->session->set_flashdata('error', 'No Insert Try Again.');
                    return redirect( base_url().'upload-family-member-funnel');
                }
            }
        }else{
            redirect(base_url().'mobile-login','refresh');
        }
    }

    function postFamilyMember()
    {
        if(isset($_SESSION['landingMob']))
        {
            if(isset($_POST['id']) && $_POST['id'] != '')
            {
                $insertdata = array(
                    'relation' => $_POST['otherrelation'],
                    'otherrelationname' => $_POST['otherrelationname'],
                    'dob' => $_POST['dob'],
                    'dateCreated' => date('Y-m-d H:i:s A'),
                    'aadharNumber' => $_POST['aadhar_id'],
                    'PAN' => $_POST['PAN'],
                    'DL_no' => $_POST['DL_no'],
                    'voter_id' => $_POST['voter_id'],
                    'person_name' => $_POST['person_name'],
                    'vehicle_no' => $_POST['vehicle_no'],
                    'state' => $_POST['state'],
                    'district' => $_POST['district'],
                    'city' => $_POST['city'],
                    'Age' => $this->calculateAge($_POST['dob']),
                    'Gender' => ($_POST['Gender'] == 'Male' ? 'boy' : 'girl')
                );
                $this->db->where('id',$_POST['id']);
                $in=$this->db->update('familyMember',$insertdata);
                if($in)
                {
                    if($_POST['goldCount']  > 0)
                    {
                        for($i=1;$i<=$_POST['goldCount'];$i++)
                        {
                            if(isset($_POST['oldId'.$i]))
                            {
                                $goldData = array(
                                    'familyId' => $_POST['id'],
                                    'goldType' => $_POST['goldType'.$i],
                                    'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                );
                                $this->db->where('Id',$_POST['oldId'.$i]);
                                $this->db->update('familyPersonGold',$goldData);
                            }else{
                                $goldData = array(
                                    'familyId' => $_POST['id'],
                                    'goldType' => $_POST['goldType'.$i],
                                    'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                );
                                $this->db->insert('familyPersonGold',$goldData);   
                            }
                        }
                    }
                    $this->session->set_flashdata('success', 'Record Updated Successfully');
                    return redirect( base_url().'NonKyc/editFamilyDetails?id='.$_POST['id'].'&pn=2');
                }
            }else{
                $well1 = NULL;
                $well2 = NULL;
                $well3 = NULL;
                $profileDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                if($_SESSION['loginmob'] == $profileDetail[0]['registration_mobile'])
                {
                    $well1 = $_SESSION['loginmob'];
                    if($profileDetail[0]['alternate_mobile1'] != NULL)
                    {
                        $well2 = $profileDetail[0]['alternate_mobile1'];
                    }else{
                        if($profileDetail[0]['alternate_mobile2'] != NULL)
                        {
                            $well2 = $profileDetail[0]['alternate_mobile2'];
                        }else{
                            if($profileDetail[0]['alternate_mobile3'] != NULL)
                            {
                                $well2 = $profileDetail[0]['alternate_mobile3'];
                            }
                        }
                    }
                    if($well2 != NULL)
                    {
                        if($profileDetail[0]['alternate_mobile1'] != NULL)
                        {
                        }else{
                            if($profileDetail[0]['alternate_mobile2'] != NULL)
                            {
                                $well3 = $profileDetail[0]['alternate_mobile2'];
                            }else{
                                if($profileDetail[0]['alternate_mobile3'] != NULL)
                                {
                                    $well3 = $profileDetail[0]['alternate_mobile3'];
                                }
                            }
                        }
                    }
                }else{
                    if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile1'])
                    {
                        $well1 = $profileDetail[0]['alternate_mobile1'];
                        $well2 = $profileDetail[0]['registration_mobile'];
                        if($profileDetail[0]['alternate_mobile2'] != NULL)
                        {
                            $well3 = $profileDetail[0]['alternate_mobile2'];
                        }else{
                            if($profileDetail[0]['alternate_mobile3'] != NULL)
                            {
                                $well3 = $profileDetail[0]['alternate_mobile3'];
                            }
                        }
                    }else{
                        if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile2'])
                        {
                            $well1 = $profileDetail[0]['alternate_mobile2'];
                            $well2 = $profileDetail[0]['registration_mobile'];
                            if($profileDetail[0]['alternate_mobile1'] != NULL)
                            {
                                $well3 = $profileDetail[0]['alternate_mobile1'];
                            }else{
                                if($profileDetail[0]['alternate_mobile3'] != NULL)
                                {
                                    $well3 = $profileDetail[0]['alternate_mobile3'];
                                }
                            }
                        }else{
                            if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile3'])
                            {
                                $well1 = $profileDetail[0]['alternate_mobile3'];
                                $well2 = $profileDetail[0]['registration_mobile'];
                                if($profileDetail[0]['alternate_mobile1'] != NULL)
                                {
                                    $well3 = $profileDetail[0]['alternate_mobile1'];
                                }else{
                                    if($profileDetail[0]['alternate_mobile2'] != NULL)
                                    {
                                        $well3 = $profileDetail[0]['alternate_mobile2'];
                                    }
                                }
                            }
                        }
                    }
                }
                $insertdata = array(
                    'relation' => $_POST['otherrelation'],
                    'otherrelationname' => $_POST['otherrelationname'],
                    'dob' => $_POST['dob'],
                    'isKyc' => 0,
                    'well1' => $well1,
                    'well2' => NULL,
                    'well3' => NULL,
                    'dateCreated' => date('Y-m-d H:i:s A'),
                    'aadharNumber' => !empty($_POST['aadhar_id']) ? $_POST['aadhar_id'] : NULL,
                    'PAN' => $_POST['PAN'],
                    'DL_no' => $_POST['DL_no'],
                    'voter_id' => $_POST['voter_id'],
                    'person_name' => $_POST['person_name'],
                    'state' => $_POST['state'],
                    'district' => $_POST['district'],
                    'city' => $_POST['city'],
                    'Age' => $this->calculateAge($_POST['dob']),
                    'parentId' => $_SESSION['user_id'],
                    'paymentStatus' => 'Pending',
                    'Gender' => ($_POST['Gender'] == 'Male' ? 'boy' : 'girl'),
                    'vehicleNumber1' => !empty($_POST['vehicleNumber1']) ? $_POST['vehicleNumber1'] : NULL,
                    'vehicleNumber2' => (isset($_POST['vehicleNumber2']) && !empty($_POST['vehicleNumber2'])) ? $_POST['vehicleNumber2'] : NULL,
                    'vehicleNumber3' => (isset($_POST['vehicleNumber2']) && !empty($_POST['vehicleNumber3'])) ? $_POST['vehicleNumber3'] : NULL,
                );
                $in=$this->db->insert('familyMember',$insertdata);
                if($in)
                {
                    $_SESSION['familyId'] = $familyId = $this->db->insert_id();
                    if($_POST['goldCount']  > 0)
                    {
                        for($i=1;$i<=$_POST['goldCount'];$i++)
                        {
                            $goldData = array(
                                'familyId' => $_SESSION['familyId'],
                                'goldType' => $_POST['goldType'.$i],
                                'goldHUID' => $_POST['goldHUIDNumber'.$i]
                            );
                            $this->db->insert('familyPersonGold',$goldData);
                        }
                    }
                    return redirect( base_url().'NonKyc/editFamilyDetails?id='.$familyId.'&pn=2');
                }
                else
                {
                    $this->session->set_flashdata('error', 'No Insert Try Again.');
                    return redirect( base_url().'NonKyc/add_family_member');
                }
            }
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function add_mahakumbh_member_special()
    {
        if(isset($_SESSION['landingMob']))
        {
            unset($_SESSION['previous_url']);
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page_name'] = 'add_mahakumbh_member_special';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'mobile-landing-login?type=special','refresh');
        }
    }

    function add_mahakumbh_member()
    {
        if(isset($_SESSION['landingMob']))
        {
            unset($_SESSION['previous_url']);
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page_name'] = 'add_mahakumbh_member';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'mobile-landing-login?type=mahakumbh','refresh');
        }
    }

    function add_family_member()
    {
        if(isset($_SESSION['landingMob']))
        {
            unset($_SESSION['previous_url']);
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page_name'] = 'add_family_member';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function newSearchPerson()
    {
        if(isset($_SESSION['landingMob']))
        {
            unset($_SESSION['searchFaceIdAfterLogin']);
            $page_data['page_name'] = 'newSearchPerson';
            $this->load->view('nonkyc/index', $page_data);
        }else 
        {
            redirect('login','refresh');
        }
    }

    function highFaceMatch()
    {
        if(isset($_SESSION['landingMob']))
        {
            unset($_SESSION['searchFaceIdAfterLogin']);
            $page_data['page_name'] = 'highFaceMatch';
            $this->load->view('nonkyc/index', $page_data);
        }else 
        {
            redirect('login','refresh');
        }
    }

    function funnelFaceMatch()
    {
        if(isset($_SESSION['landingMob']))
        {
            unset($_SESSION['searchFaceIdAfterLogin']);
            $page_data['page_name'] = 'funnelFaceMatch';
            $this->load->view('nonkyc/index', $page_data);
        }else 
        {
            redirect('login','refresh');
        }
    }

    function newUnknownFaceMatchResults()
    {
        if(isset($_SESSION['landingMob']))
        {
            if(isset($_SESSION['searchFaceIdAfterLogin']))
            {
                $page_data['control'] = 'user';
                $page_data['title'] = 'Face Match Results';
                $page_data['page_name'] = 'newUnknownFaceMatchResults';
                $this->load->view('nonkyc/index', $page_data); 
            }else{
                redirect('NonKyc/newSearchPerson','refresh');
            }
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function newFunnelFaceMatchResults()
    {
        if(isset($_SESSION['landingMob']))
        {
            if(isset($_SESSION['searchFaceIdAfterLogin']))
            {
                $page_data['control'] = 'user';
                $page_data['title'] = 'Face Match Results';
                $page_data['page_name'] = 'newFunnelFaceMatchResults';
                $this->load->view('nonkyc/index', $page_data); 
            }else{
                redirect('non-kyc-funnel-facematch','refresh');
            }
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function newHighFaceMatchResults()
    {
        if(isset($_SESSION['landingMob']))
        {
            if(isset($_SESSION['searchFaceIdAfterLogin']))
            {
                $page_data['control'] = 'user';
                $page_data['title'] = 'Face Match Results';
                $page_data['page_name'] = 'newHighFaceMatchResults';
                $this->load->view('nonkyc/index', $page_data); 
            }else{
                redirect('non-kyc-high-facematch','refresh');
            }
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function searchPersonFunnelUnknownFace()
    {
        if($_POST['type'] == '')
        {
            $data = $_POST["mainPhotoSelectedFacematch"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = time().''.rand(0,10000);
            $newImagePath = 'upload/searchFacePerson/'.$imageId.'.'.$split1[1];
            file_put_contents($newImagePath, $data);
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcakhoji4",
                "image_url" => base_url().''.$newImagePath,
                "threshold" => (float)$this->getSettings('afterLoginThreshold')
            ));
            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => $postdata,
              CURLOPT_HTTPHEADER => array(
                'Content-Type: application/json',
                'Authorization: '.$this->getSettings('facematchtoken'),
              ),
            ));
            $faceresponse = json_decode(curl_exec($curl),true);
            $personName = '';
            $gender = '';
            $aadhar = '';
            $gender = '';
            $isVerified = 'No';
            $isVisible = 0;
            $age = '';
            $isWanted = 0;
            $isCriminal = 0;
            $wantedId = array();
            $criminalId = array();
            $address = '';
            $userphoto = '';
            $personId = 0;
            $isLapata = 0;
            $missingId = 0;
            $isUserFound = 0;
            $isMissing = 0;
            $isAadharCorrect = 0;
            $isGenderCorrect = 1;
            $isDobCorrect = 1;
            $userId = array();
            $specialId = array();
            $missingId = array();
            $familyId = array();
            $mahakumbhId = array();
            $lapataId = array();
            $unknownId = array();
            $funnelFamilyId = array();
            $funnelMissingId = array();
            $wantedId = array();
            $criminalId = array();
            $finalcount = 0;
            curl_close($curl);
            if(is_array($faceresponse) && count($faceresponse) > 0)
            {
                if(isset($faceresponse['confidence']) && count($faceresponse['confidence']) > 0)
                {
                    if((isset($faceresponse['confidence']['High']) && count($faceresponse['confidence']['High']) > 0) || (isset($faceresponse['confidence']['Medium']) && count($faceresponse['confidence']['Medium']) > 0) || (isset($faceresponse['confidence']['Low']) && count($faceresponse['confidence']['Low']) > 0))
                    {
                        $faceresponse['confidence']['High'] = array_unique(array_merge($faceresponse['confidence']['High'],$faceresponse['confidence']['Medium']));
                        $faceresponse['confidence']['High'] = array_unique(array_merge($faceresponse['confidence']['High'],$faceresponse['confidence']['Low']));
                        foreach($faceresponse['confidence']['High'] as $k=>$v)
                        {
                            $split = explode('_',$v);
                            if($split[0] == 'GEN')
                            {
                                $this->db->or_where('imageId',$v);
                                $this->db->or_where('imageId1',$v);
                                $this->db->or_where('imageId2',$v);
                                $user = $this->db->get('user')->result_array();
                                if(count($user) > 0)
                                {
                                    foreach($user as $k1=>$v1)
                                    {
                                        if(strtolower($_POST['gender']) == strtolower($v1['gender']))
                                        {
                                            array_push($userId,$v1['uid']);
                                            $finalcount++;   
                                        }
                                    }
                                }else{
                                    $getAadharImageId = $this->db->query('select * from user where aadharImageId="'.$v.'"')->result_array();
                                    if(count($getAadharImageId) > 0)
                                    {
                                        foreach($getAadharImageId as $k1=>$v1)
                                        {
                                            if(strtolower($_POST['gender']) == strtolower($v1['gender']))
                                            {
                                                if(strtotime($v1['aadharExpiryDate']) >= strtotime(date('Y-m-d')))
                                                {
                                                    array_push($userId,$v1['uid']);
                                                    $finalcount++;   
                                                }
                                            }
                                        }   
                                    }
                                }       
                            }
                            if($split[0] == 'Missing')
                            {
                                $this->db->where('imageId',$v);
                                $this->db->where('isFinalSubmitted',1);
                                $this->db->where('isFound',0);
                                $missingperson = $this->db->get('missingperson')->result_array();
                                if(count($missingperson) > 0)
                                {
                                    foreach($missingperson as $k1=>$v1)
                                    {
                                        array_push($missingId,$v1['Id']);
                                        $finalcount++;
                                    }
                                }
                            }
                            if($split[0] == 'LAP')
                            {
                                $this->db->or_where('imageId',$v);
                                $this->db->or_where('imageId1',$v);
                                $this->db->or_where('imageId2',$v);
                                $lapata = $this->db->get('unknown_person')->result_array();
                                if(count($lapata) > 0)
                                {
                                    foreach($lapata as $k1=>$v1)
                                    {
                                        if(strtotime($v1['expiryDate']) >= strtotime(date('Y-m-d')))
                                        {
                                            if($v1['isFound'] == '0')
                                            {
                                                if($v1['awsEventName'] == 'All')
                                                {
                                                    $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                                    if($gender == strtolower($v1['Gender']))
                                                    {
                                                        if($v1['isFinalSubmitted'] == 1)
                                                        {
                                                            array_push($lapataId,$v1['id']);
                                                            $finalcount++;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            if($split[0] == 'Wanted')
                            {
                                $this->db->where('imageId',$v);
                                $this->db->where('isFinalSubmitted',1);
                                $this->db->where('status','Active');
                                $wanted = $this->db->get('criminals')->result_array();
                                if(count($wanted) > 0)
                                {
                                    foreach($wanted as $k1=>$v1)
                                    {
                                        array_push($wantedId,$v1['Id']);
                                        $finalcount++;
                                    }
                                }
                            }
                            if($split[0] == 'Criminal')
                            {
                                $this->db->where('imageId',$v);
                                $this->db->where('isFinalSubmitted',1);
                                $this->db->where('status','Active');
                                $criminal = $this->db->get('criminals')->result_array();
                                if(count($criminal) > 0)
                                {
                                    foreach($criminal as $k1=>$v1)
                                    {
                                        array_push($criminalId,$v1['Id']);
                                        $finalcount++;
                                    }
                                }
                            }
                            if($split[0] == 'FAM')
                            {
                                $this->db->or_where('imageId',$v);
                                $this->db->or_where('imageId1',$v);
                                $this->db->or_where('imageId2',$v);
                                $familyMember = $this->db->get('familyMember')->result_array();
                                if(count($familyMember) > 0)
                                {
                                    foreach($familyMember as $k1=>$v1)
                                    {
                                        if(strtotime($v1['expiryDate']) >= strtotime(date('Y-m-d')))
                                        {
                                            if($v1['activeStatus'] == 1)
                                            {
                                                $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                                if($gender == strtolower($v1['Gender']))
                                                {
                                                    if($v1['isFinalSubmitted'] == 1)
                                                    {
                                                        array_push($familyId,$v1['id']);
                                                        $finalcount++;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            if($this->getSettings('mahakumbhFamily') == 'yes')
                            {
                                if($split[0] == 'MAH')
                                {
                                    $this->db->or_where('imageId',$v);
                                    $this->db->or_where('imageId1',$v);
                                    $this->db->or_where('imageId2',$v);
                                    $familyMember = $this->db->get('mahakumbhMember')->result_array();
                                    if(count($familyMember) > 0)
                                    {
                                        foreach($familyMember as $k1=>$v1)
                                        {
                                            if(strtotime($v1['expiryDate']) >= strtotime(date('Y-m-d')))
                                            {
                                                if($v1['activeStatus'] == 1)
                                                {
                                                    $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                                    if($gender == strtolower($v1['Gender']))
                                                    {
                                                        if($v1['isFinalSubmitted'] == 1)
                                                        {
                                                            array_push($mahakumbhId,$v1['id']);
                                                            $finalcount++;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            if($this->getSettings('mahakumbhSpecial') == 'yes')
                            {
                                if($split[0] == 'SPE')
                                {
                                    $this->db->or_where('imageId',$v);
                                    $this->db->or_where('imageId1',$v);
                                    $this->db->or_where('imageId2',$v);
                                    $familyMember = $this->db->get('mahakumbhSpecial')->result_array();
                                    if(count($familyMember) > 0)
                                    {
                                        foreach($familyMember as $k1=>$v1)
                                        {
                                            if($v1['isFound'] == 0)
                                            {
                                                if(strtolower($_POST['gender']) == strtolower($v1['Gender']))
                                                {
                                                    array_push($specialId,$v1['id']);
                                                    $finalcount++;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            if($split[0] == 'FFU')
                            {
                                $this->db->or_where('imageId',$v);
                                $this->db->or_where('imageId1',$v);
                                $this->db->or_where('imageId2',$v);
                                $familyMember = $this->db->get('funnelfamily')->result_array();
                                if(count($familyMember) > 0)
                                {
                                    foreach($familyMember as $k1=>$v1)
                                    {
                                        if(strtotime($v1['expiryDate']) >= strtotime(date('Y-m-d')))
                                        {
                                            if($v1['activeStatus'] == 1)
                                            {
                                                $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                                if($gender == strtolower($v1['Gender']))
                                                {
                                                    if($v1['isFinalSubmitted'] == 1)
                                                    {
                                                        array_push($funnelFamilyId,$v1['id']);
                                                        $finalcount++;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            if($split[0] == 'FUM')
                            {
                                $this->db->or_where('imageId',$v);
                                $this->db->or_where('imageId1',$v);
                                $this->db->or_where('imageId2',$v);
                                $lapata = $this->db->get('funnel_missing')->result_array();
                                if(count($lapata) > 0)
                                {
                                    foreach($lapata as $k1=>$v1)
                                    {
                                        if(strtotime($v1['expiryDate']) >= strtotime(date('Y-m-d')))
                                        {
                                            if($v1['isFound'] == '0')
                                            {
                                                $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                                if($gender == strtolower($v1['Gender']))
                                                {
                                                    if($v1['isFinalSubmitted'] == 1)
                                                    {
                                                        array_push($funnelMissingId,$v1['id']);
                                                        $finalcount++;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            $this->db->or_where('imageId',$v);
                            $this->db->or_where('imageId1',$v);
                            $this->db->or_where('imageId2',$v);
                            $getUnknownDetail = $this->db->get('unknown_person')->result_array();
                            if(count($getUnknownDetail) > 0)
                            {
                                foreach($getUnknownDetail as $k1=>$v1)
                                {
                                    if(strtotime($v1['expiryDate']) >= strtotime(date('Y-m-d')))
                                    {
                                        if($v1['isFound'] == '0' && $v1['awsEventName'] != 'All')
                                        {
                                            $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                            if($gender == strtolower($v1['Gender']))
                                            {
                                                if($v1['isFinalSubmitted'] == 1)
                                                {
                                                    array_push($unknownId,$v1['id']);
                                                    $finalcount++;
                                                }
                                            }
                                        }
                                    }
                                }
                            }   
                        }
                    }
                }
            }
            if($finalcount > 0)
            {
                if(count($lapataId) > 0)
                {
                    foreach($lapataId as $k=>$v)
                    {
                        if($k == 0)
                        {
                            $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                            if($getApplicationNumber[0]['isKyc'] == 0)
                            {
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['loginmob'],
                                    'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                    'searchType' => 'Lapata',
                                    'searchPhoto' => $newImagePath,
                                    'complainantUserType' => 'NonKyc',
                                    'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else{
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }
                            }else{
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['loginmob'],
                                    'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                    'searchType' => 'Lapata',
                                    'searchPhoto' => $newImagePath,
                                    'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                    'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else{
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }
                            }
                        }
                    }
                }else{
                    if(count($specialId) > 0)
                    {
                        foreach($specialId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from mahakumbhSpecial where id='.$v)->result_array();
                                $getDetails = $this->db->query('select * from searchfacehistoryafterlogin where Id='.$_SESSION['searchFaceIdAfterLogin'])->result_array();
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['loginmob'],
                                    'searchedAppNumber' => $v,
                                    'searchType' => 'Special',
                                    'complainantUserType' => 'NonKyc',
                                    'complainantUserId' => ($getApplicationNumber[0]['userId']),
                                    'searchPhoto' => $newImagePath,
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                if($getApplicationNumber[0]['well1'] != NULL)
                                {
                                    $sendStatus = $this->sendMessage91CustomMsg($getApplicationNumber[0]['Application_no'],$getApplicationNumber[0]['well1'],$this->config->item('active_template_id'));
                                    if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                                        echo json_encode([
                                            'status' => 'error',
                                            'msg'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                                        ]);
                                        die();
                                    }
                                }
                                if($getApplicationNumber[0]['well2'] != NULL)
                                {
                                    $sendStatus = $this->sendMessage91CustomMsg($getApplicationNumber[0]['Application_no'],$getApplicationNumber[0]['well2'],$this->config->item('active_template_id'));
                                    if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                                        echo json_encode([
                                            'status' => 'error',
                                            'msg'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                                        ]);
                                        die();
                                    }
                                }
                                if($getApplicationNumber[0]['well3'] != NULL)
                                {
                                    $sendStatus = $this->sendMessage91CustomMsg($getApplicationNumber[0]['Application_no'],$getApplicationNumber[0]['well3'],$this->config->item('active_template_id'));
                                    if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                                        echo json_encode([
                                            'status' => 'error',
                                            'msg'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                                        ]);
                                        die();
                                    }
                                }
                            }
                        }
                    }else{
                        if(count($unknownId) > 0)
                        {
                            foreach($unknownId as $k=>$v)
                            {
                                if($k == 0)
                                {
                                    $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                    if($getApplicationNumber[0]['isKyc'] == 0)
                                    {
                                        $notifyData = array(
                                            'isLogin' => 1,
                                            'loggedInUserId' => $_SESSION['user_id'],
                                            'loginUserType' => $_SESSION['login_type'],
                                            'dateCreated' => date('Y-m-d H:i:s'),
                                            'mobileNumber' => $_SESSION['loginmob'],
                                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                            'searchType' => 'Unknown',
                                            'searchPhoto' => $newImagePath,
                                            'complainantUserType' => 'NonKyc',
                                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                        );
                                        $insert = $this->db->insert('searchnotification',$notifyData);
                                        $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                        {
                                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                            $query_res = $query->result_array();
                                            
                                            if(count($query_res) > 0)
                                            {
                                                foreach ($query_res as $query_res_data) {
                                                    $registrationIds[] =$query_res_data['token'];
                                                }
                                                
                                                $url ="https://fcm.googleapis.com/fcm/send";
                                                $fields=array(
                                                    "registration_ids"=>$registrationIds,
                                                    'data' => array("msg"=>"Khoji"),
                                                    'priority' => 'high',
                                                    "click_action"=>base_url(),
                                                    "notification"=>array(
                                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                        "title"=>"Khoji",
                                                    )   
                                                );
                                                $headers=array(
                                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                    'Content-Type:application/json'
                                                );
                                                $ch=curl_init();
                                                curl_setopt($ch,CURLOPT_URL,$url);
                                                curl_setopt($ch,CURLOPT_POST,true);
                                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                                curl_exec($ch);
                                            }
                                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                        {
                                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                            $query_res = $query->result_array();
                                            
                                            if(count($query_res) > 0)
                                            {
                                                foreach ($query_res as $query_res_data) {
                                                    $registrationIds[] =$query_res_data['token'];
                                                }
                                                
                                                $url ="https://fcm.googleapis.com/fcm/send";
                                                $fields=array(
                                                    "registration_ids"=>$registrationIds,
                                                    'data' => array("msg"=>"Khoji"),
                                                    'priority' => 'high',
                                                    "click_action"=>base_url(),
                                                    "notification"=>array(
                                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                        "title"=>"Khoji",
                                                    )   
                                                );
                                                $headers=array(
                                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                    'Content-Type:application/json'
                                                );
                                                $ch=curl_init();
                                                curl_setopt($ch,CURLOPT_URL,$url);
                                                curl_setopt($ch,CURLOPT_POST,true);
                                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                                curl_exec($ch);
                                            }
                                        }else{
                                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                            $query_res = $query->result_array();
                                            
                                            if(count($query_res) > 0)
                                            {
                                                foreach ($query_res as $query_res_data) {
                                                    $registrationIds[] =$query_res_data['token'];
                                                }
                                                
                                                $url ="https://fcm.googleapis.com/fcm/send";
                                                $fields=array(
                                                    "registration_ids"=>$registrationIds,
                                                    'data' => array("msg"=>"Khoji"),
                                                    'priority' => 'high',
                                                    "click_action"=>base_url(),
                                                    "notification"=>array(
                                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                        "title"=>"Khoji",
                                                    )   
                                                );
                                                $headers=array(
                                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                    'Content-Type:application/json'
                                                );
                                                $ch=curl_init();
                                                curl_setopt($ch,CURLOPT_URL,$url);
                                                curl_setopt($ch,CURLOPT_POST,true);
                                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                                curl_exec($ch);
                                            }
                                        }
                                    }else{
                                        $notifyData = array(
                                            'isLogin' => 1,
                                            'loggedInUserId' => $_SESSION['user_id'],
                                            'loginUserType' => $_SESSION['login_type'],
                                            'dateCreated' => date('Y-m-d H:i:s'),
                                            'mobileNumber' => $_SESSION['loginmob'],
                                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                            'searchType' => 'Unknown',
                                            'searchPhoto' => $newImagePath,
                                            'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                        );
                                        $insert = $this->db->insert('searchnotification',$notifyData);
                                        $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                        {
                                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                            $query_res = $query->result_array();
                                            
                                            if(count($query_res) > 0)
                                            {
                                                foreach ($query_res as $query_res_data) {
                                                    $registrationIds[] =$query_res_data['token'];
                                                }
                                                
                                                $url ="https://fcm.googleapis.com/fcm/send";
                                                $fields=array(
                                                    "registration_ids"=>$registrationIds,
                                                    'data' => array("msg"=>"Khoji"),
                                                    'priority' => 'high',
                                                    "click_action"=>base_url(),
                                                    "notification"=>array(
                                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                        "title"=>"Khoji",
                                                    )   
                                                );
                                                $headers=array(
                                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                    'Content-Type:application/json'
                                                );
                                                $ch=curl_init();
                                                curl_setopt($ch,CURLOPT_URL,$url);
                                                curl_setopt($ch,CURLOPT_POST,true);
                                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                                curl_exec($ch);
                                            }
                                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                        {
                                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                            $query_res = $query->result_array();
                                            
                                            if(count($query_res) > 0)
                                            {
                                                foreach ($query_res as $query_res_data) {
                                                    $registrationIds[] =$query_res_data['token'];
                                                }
                                                
                                                $url ="https://fcm.googleapis.com/fcm/send";
                                                $fields=array(
                                                    "registration_ids"=>$registrationIds,
                                                    'data' => array("msg"=>"Khoji"),
                                                    'priority' => 'high',
                                                    "click_action"=>base_url(),
                                                    "notification"=>array(
                                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                        "title"=>"Khoji",
                                                    )   
                                                );
                                                $headers=array(
                                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                    'Content-Type:application/json'
                                                );
                                                $ch=curl_init();
                                                curl_setopt($ch,CURLOPT_URL,$url);
                                                curl_setopt($ch,CURLOPT_POST,true);
                                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                                curl_exec($ch);
                                            }
                                        }else{
                                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                            $query_res = $query->result_array();
                                            
                                            if(count($query_res) > 0)
                                            {
                                                foreach ($query_res as $query_res_data) {
                                                    $registrationIds[] =$query_res_data['token'];
                                                }
                                                
                                                $url ="https://fcm.googleapis.com/fcm/send";
                                                $fields=array(
                                                    "registration_ids"=>$registrationIds,
                                                    'data' => array("msg"=>"Khoji"),
                                                    'priority' => 'high',
                                                    "click_action"=>base_url(),
                                                    "notification"=>array(
                                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                        "title"=>"Khoji",
                                                    )   
                                                );
                                                $headers=array(
                                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                    'Content-Type:application/json'
                                                );
                                                $ch=curl_init();
                                                curl_setopt($ch,CURLOPT_URL,$url);
                                                curl_setopt($ch,CURLOPT_POST,true);
                                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                                curl_exec($ch);
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
                $insertdata = array(
                    'matchedLapataIds' => implode(',',$lapataId),
                    'matchedSpecialIds' => implode(',',$specialId),
                    'matchedWantedIds' => implode(',',$wantedId),
                    'matchedCriminalIds' => implode(',',$criminalId),
                    'matchedMissingIds' => implode(',',$missingId),
                    'matchedUserIds' => implode(',',$userId),
                    'matchedUnknownIds' => implode(',',$unknownId),
                    'matchedFamilyIds' => implode(',',$familyId),
                    'matchedFunnelFamilyIds' => implode(',',$funnelFamilyId),
                    'matchedFunnelMissingIds' => implode(',',$funnelMissingId),
                    'totalResponse' => json_encode($faceresponse),
                    'matchedMahakumbhIds' => implode(',',$mahakumbhId),
                    'mainPhoto' => $newImagePath,
                    'gender' => $_POST['gender']
                );
                $this->db->where('Id',$_SESSION['searchFaceIdAfterLogin']);
                $update = $this->db->update('searchfacehistoryafterlogin',$insertdata);
                $response = array(
                    'status' => 'success',
                    'personName' => $personName,
                    'isWanted' => $isWanted,
                    'isCriminal' => $isCriminal,
                    'isLapata' => $isLapata,
                    'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                    'gender' => strtolower($gender),
                    'age' => $age,
                    'address' => $address,
                    'isAadharCorrect' => $isAadharCorrect,
                    'isDobCorrect' => $isDobCorrect,
                    'isGenderCorrect' => $isGenderCorrect,
                    'message' => 'Person Found',
                    'isMissing' => $isMissing,
                    'isRegistered' => $isUserFound,
                    'image' => $userphoto,
                    'finalCount' => $finalcount
                );
                echo json_encode($response);     
            }else{
                $response = array(
                    'status' => 'success',
                    'finalCount' => $finalcount
                );
                echo json_encode($response);     
            }
        }else{
            if($_POST['type'] == 'missing')
            {
                $data = $_POST["mainPhotoSelectedFacematch"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                $imageId = time().''.rand(0,10000);
                $newImagePath = 'upload/searchFacePerson/'.$imageId.'.'.$split1[1];
                file_put_contents($newImagePath, $data);
                $personName = '';
                $gender = '';
                $aadhar = '';
                $gender = '';
                $isVerified = 'No';
                $isVisible = 0;
                $age = '';
                $isWanted = 0;
                $isCriminal = 0;
                $wantedId = array();
                $criminalId = array();
                $address = '';
                $userphoto = '';
                $personId = 0;
                $isLapata = 0;
                $missingId = 0;
                $isUserFound = 0;
                $isMissing = 0;
                $isAadharCorrect = 0;
                $isGenderCorrect = 1;
                $isDobCorrect = 1;
                $userId = array();
                $missingId = array();
                $lapataId = array();
                $wantedId = array();
                $criminalId = array();
                $finalcount = 0;
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                $unknownId = array();
                if(isset($faceresponse['output']) && count($faceresponse['output']) > 0)
                {
                    foreach($faceresponse['output'] as $k1=>$v1)
                    {
                        $this->db->or_where('imageId',$v1);
                        $this->db->or_where('imageId1',$v1);
                        $this->db->or_where('imageId2',$v1);
                        $getUnknownDetail = $this->db->get('unknown_person')->result_array();
                        if(count($getUnknownDetail) > 0)
                        {
                            foreach($getUnknownDetail as $k=>$v)
                            {
                                if(strtotime($v['expiryDate']) >= strtotime(date('Y-m-d')))
                                {
                                    if($v['isFound'] == 0 && $v['awsEventName'] == 'All')
                                    {
                                        $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                        if($gender == strtolower($v['Gender']))
                                        {
                                            if($v['isFinalSubmitted'] == 1)
                                            {
                                                array_push($lapataId,$v['id']);
                                                $finalcount++;
                                            }
                                        }
                                    }
                                }
                            }
                        }   
                    }
                }
                if($finalcount > 0)
                {
                    if(count($lapataId) > 0)
                    {
                        foreach($lapataId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if(count($unknownId) > 0)
                    {
                        foreach($unknownId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'matchedLapataIds' => implode(',',$lapataId),
                        'matchedWantedIds' => implode(',',$wantedId),
                        'matchedCriminalIds' => implode(',',$criminalId),
                        'matchedMissingIds' => implode(',',$missingId),
                        'matchedUserIds' => implode(',',$userId),
                        'matchedUnknownIds' => implode(',',$unknownId),
                        'mainPhoto' => $newImagePath
                    );
                    $this->db->where('Id',$_SESSION['searchFaceIdAfterLogin']);
                    $update = $this->db->update('searchfacehistoryafterlogin',$insertdata);
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'isWanted' => $isWanted,
                        'isCriminal' => $isCriminal,
                        'isLapata' => $isLapata,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                        'message' => 'Person Found',
                        'isMissing' => $isMissing,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto,
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }else{
                    $response = array(
                        'status' => 'success',
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }
            }else{
                $data = $_POST["mainPhotoSelectedFacematch"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                $imageId = time().''.rand(0,10000);
                $newImagePath = 'upload/searchFacePerson/'.$imageId.'.'.$split1[1];
                file_put_contents($newImagePath, $data);
                $personName = '';
                $gender = '';
                $aadhar = '';
                $gender = '';
                $isVerified = 'No';
                $isVisible = 0;
                $age = '';
                $isWanted = 0;
                $isCriminal = 0;
                $wantedId = array();
                $criminalId = array();
                $address = '';
                $userphoto = '';
                $personId = 0;
                $isLapata = 0;
                $missingId = 0;
                $isUserFound = 0;
                $isMissing = 0;
                $isAadharCorrect = 0;
                $isGenderCorrect = 1;
                $isDobCorrect = 1;
                $userId = array();
                $missingId = array();
                $lapataId = array();
                $wantedId = array();
                $criminalId = array();
                $finalcount = 0;
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                $unknownId = array();
                /*if(isset($faceresponse['output']) && count($faceresponse['output']) > 0)
                {
                    foreach($faceresponse['output'] as $k1=>$v1)
                    {
                        $this->db->or_where('imageId',$v1);
                        $this->db->or_where('imageId1',$v1);
                        $this->db->or_where('imageId2',$v1);
                        $getUnknownDetail = $this->db->get('unknown_person')->result_array();
                        if(count($getUnknownDetail) > 0)
                        {
                            foreach($getUnknownDetail as $k=>$v)
                            {
                                if($v['isFound'] == 0 && $v['awsEventName'] != 'All')
                                {
                                    $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                    if($gender == strtolower($v['Gender']))
                                    {
                                        if($v['isFinalSubmitted'] == 1)
                                        {
                                            array_push($unknownId,$v['id']);
                                            $finalcount++;
                                        }
                                    }
                                }
                            }
                        }   
                    }
                }*/
                if($finalcount > 0)
                {
                    if(count($lapataId) > 0)
                    {
                        foreach($lapataId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if(count($unknownId) > 0)
                    {
                        foreach($unknownId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'matchedLapataIds' => implode(',',$lapataId),
                        'matchedWantedIds' => implode(',',$wantedId),
                        'matchedCriminalIds' => implode(',',$criminalId),
                        'matchedMissingIds' => implode(',',$missingId),
                        'matchedUserIds' => implode(',',$userId),
                        'matchedUnknownIds' => implode(',',$unknownId),
                        'mainPhoto' => $newImagePath
                    );
                    $this->db->where('Id',$_SESSION['searchFaceIdAfterLogin']);
                    $update = $this->db->update('searchfacehistoryafterlogin',$insertdata);
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'isWanted' => $isWanted,
                        'isCriminal' => $isCriminal,
                        'isLapata' => $isLapata,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                        'message' => 'Person Found',
                        'isMissing' => $isMissing,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto,
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }else{
                    $response = array(
                        'status' => 'success',
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }
            }
        }
    }

    function searchPersonHighUnknownFace()
    {
        if($_POST['type'] == '')
        {
            $data = $_POST["mainPhotoSelectedFacematch"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = time().''.rand(0,10000);
            $newImagePath = 'upload/searchFacePerson/'.$imageId.'.'.$split1[1];
            file_put_contents($newImagePath, $data);
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcakhoji4",
                "image_url" => base_url().''.$newImagePath,
                "threshold" => (float)$this->getSettings('afterLoginThreshold')
            ));
            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => $postdata,
              CURLOPT_HTTPHEADER => array(
                'Content-Type: application/json',
                'Authorization: '.$this->getSettings('facematchtoken'),
              ),
            ));
            $faceresponse = json_decode(curl_exec($curl),true);
            $personName = '';
            $gender = '';
            $aadhar = '';
            $gender = '';
            $isVerified = 'No';
            $isVisible = 0;
            $age = '';
            $isWanted = 0;
            $isCriminal = 0;
            $wantedId = array();
            $criminalId = array();
            $address = '';
            $userphoto = '';
            $personId = 0;
            $isLapata = 0;
            $missingId = 0;
            $isUserFound = 0;
            $isMissing = 0;
            $isAadharCorrect = 0;
            $isGenderCorrect = 1;
            $isDobCorrect = 1;
            $userId = array();
            $specialId = array();
            $missingId = array();
            $familyId = array();
            $mahakumbhId = array();
            $lapataId = array();
            $unknownId = array();
            $wantedId = array();
            $criminalId = array();
            $finalcount = 0;
            curl_close($curl);
            if(is_array($faceresponse) && count($faceresponse) > 0)
            {
                if(isset($faceresponse['confidence']) && count($faceresponse['confidence']) > 0)
                {
                    if((isset($faceresponse['confidence']['High']) && count($faceresponse['confidence']['High']) > 0) || (isset($faceresponse['confidence']['Medium']) && count($faceresponse['confidence']['Medium']) > 0) || (isset($faceresponse['confidence']['Low']) && count($faceresponse['confidence']['Low']) > 0))
                    {
                        $faceresponse['confidence']['High'] = array_unique(array_merge($faceresponse['confidence']['High'],$faceresponse['confidence']['Medium']));
                        $faceresponse['confidence']['High'] = array_unique(array_merge($faceresponse['confidence']['High'],$faceresponse['confidence']['Low']));
                        foreach($faceresponse['confidence']['High'] as $k=>$v)
                        {
                            $split = explode('_',$v);
                            if($split[0] == 'GEN')
                            {
                                $this->db->or_where('imageId',$v);
                                $this->db->or_where('imageId1',$v);
                                $this->db->or_where('imageId2',$v);
                                $user = $this->db->get('user')->result_array();
                                if(count($user) > 0)
                                {
                                    foreach($user as $k1=>$v1)
                                    {
                                        if(strtolower($_POST['gender']) == strtolower($v1['gender']))
                                        {
                                            array_push($userId,$v1['uid']);
                                            $finalcount++;   
                                        }
                                    }
                                }else{
                                    $getAadharImageId = $this->db->query('select * from user where aadharImageId="'.$v.'"')->result_array();
                                    if(count($getAadharImageId) > 0)
                                    {
                                        foreach($getAadharImageId as $k1=>$v1)
                                        {
                                            if(strtolower($_POST['gender']) == strtolower($v1['gender']))
                                            {
                                                if(strtotime($v1['aadharExpiryDate']) >= strtotime(date('Y-m-d')))
                                                {
                                                    array_push($userId,$v1['uid']);
                                                    $finalcount++;   
                                                }
                                            }
                                        }   
                                    }
                                }       
                            }
                            if($split[0] == 'Missing')
                            {
                                $this->db->where('imageId',$v);
                                $this->db->where('isFinalSubmitted',1);
                                $this->db->where('isFound',0);
                                $missingperson = $this->db->get('missingperson')->result_array();
                                if(count($missingperson) > 0)
                                {
                                    foreach($missingperson as $k1=>$v1)
                                    {
                                        array_push($missingId,$v1['Id']);
                                        $finalcount++;
                                    }
                                }
                            }
                            if($split[0] == 'LAP')
                            {
                                $this->db->or_where('imageId',$v);
                                $this->db->or_where('imageId1',$v);
                                $this->db->or_where('imageId2',$v);
                                $lapata = $this->db->get('unknown_person')->result_array();
                                if(count($lapata) > 0)
                                {
                                    foreach($lapata as $k1=>$v1)
                                    {
                                        if(strtotime($v1['expiryDate']) >= strtotime(date('Y-m-d')))
                                        {
                                            if($v1['isFound'] == '0')
                                            {
                                                if($v1['awsEventName'] == 'All')
                                                {
                                                    $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                                    if($gender == strtolower($v1['Gender']))
                                                    {
                                                        if($v1['isFinalSubmitted'] == 1)
                                                        {
                                                            array_push($lapataId,$v1['id']);
                                                            $finalcount++;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            if($split[0] == 'Wanted')
                            {
                                $this->db->where('imageId',$v);
                                $this->db->where('isFinalSubmitted',1);
                                $this->db->where('status','Active');
                                $wanted = $this->db->get('criminals')->result_array();
                                if(count($wanted) > 0)
                                {
                                    foreach($wanted as $k1=>$v1)
                                    {
                                        array_push($wantedId,$v1['Id']);
                                        $finalcount++;
                                    }
                                }
                            }
                            if($split[0] == 'Criminal')
                            {
                                $this->db->where('imageId',$v);
                                $this->db->where('isFinalSubmitted',1);
                                $this->db->where('status','Active');
                                $criminal = $this->db->get('criminals')->result_array();
                                if(count($criminal) > 0)
                                {
                                    foreach($criminal as $k1=>$v1)
                                    {
                                        array_push($criminalId,$v1['Id']);
                                        $finalcount++;
                                    }
                                }
                            }
                            if($split[0] == 'FAM')
                            {
                                $this->db->or_where('imageId',$v);
                                $this->db->or_where('imageId1',$v);
                                $this->db->or_where('imageId2',$v);
                                $familyMember = $this->db->get('familyMember')->result_array();
                                if(count($familyMember) > 0)
                                {
                                    foreach($familyMember as $k1=>$v1)
                                    {
                                        if(strtotime($v1['expiryDate']) >= strtotime(date('Y-m-d')))
                                        {
                                            if($v1['activeStatus'] == 1)
                                            {
                                                $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                                if($gender == strtolower($v1['Gender']))
                                                {
                                                    if($v1['isFinalSubmitted'] == 1)
                                                    {
                                                        array_push($familyId,$v1['id']);
                                                        $finalcount++;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            if($this->getSettings('mahakumbhFamily') == 'yes')
                            {
                                if($split[0] == 'MAH')
                                {
                                    $this->db->or_where('imageId',$v);
                                    $this->db->or_where('imageId1',$v);
                                    $this->db->or_where('imageId2',$v);
                                    $familyMember = $this->db->get('mahakumbhMember')->result_array();
                                    if(count($familyMember) > 0)
                                    {
                                        foreach($familyMember as $k1=>$v1)
                                        {
                                            if(strtotime($v1['expiryDate']) >= strtotime(date('Y-m-d')))
                                            {
                                                if($v1['activeStatus'] == 1)
                                                {
                                                    $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                                    if($gender == strtolower($v1['Gender']))
                                                    {
                                                        if($v1['isFinalSubmitted'] == 1)
                                                        {
                                                            array_push($mahakumbhId,$v1['id']);
                                                            $finalcount++;
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            if($this->getSettings('mahakumbhSpecial') == 'yes')
                            {
                                if($split[0] == 'SPE')
                                {
                                    $this->db->or_where('imageId',$v);
                                    $this->db->or_where('imageId1',$v);
                                    $this->db->or_where('imageId2',$v);
                                    $familyMember = $this->db->get('mahakumbhSpecial')->result_array();
                                    if(count($familyMember) > 0)
                                    {
                                        foreach($familyMember as $k1=>$v1)
                                        {
                                            if($v1['isFound'] == 0)
                                            {
                                                if(strtolower($_POST['gender']) == strtolower($v1['Gender']))
                                                {
                                                    array_push($specialId,$v1['id']);
                                                    $finalcount++;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            $this->db->or_where('imageId',$v);
                            $this->db->or_where('imageId1',$v);
                            $this->db->or_where('imageId2',$v);
                            $getUnknownDetail = $this->db->get('unknown_person')->result_array();
                            if(count($getUnknownDetail) > 0)
                            {
                                foreach($getUnknownDetail as $k1=>$v1)
                                {
                                    if(strtotime($v1['expiryDate']) >= strtotime(date('Y-m-d')))
                                    {
                                        if($v1['isFound'] == '0' && $v1['awsEventName'] != 'All')
                                        {
                                            $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                            if($gender == strtolower($v1['Gender']))
                                            {
                                                if($v1['isFinalSubmitted'] == 1)
                                                {
                                                    array_push($unknownId,$v1['id']);
                                                    $finalcount++;
                                                }
                                            }
                                        }
                                    }
                                }
                            }   
                        }
                    }
                }
            }
            if($finalcount > 0)
            {
                if(count($lapataId) > 0)
                {
                    foreach($lapataId as $k=>$v)
                    {
                        if($k == 0)
                        {
                            $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                            if($getApplicationNumber[0]['isKyc'] == 0)
                            {
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['loginmob'],
                                    'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                    'searchType' => 'Lapata',
                                    'searchPhoto' => $newImagePath,
                                    'complainantUserType' => 'NonKyc',
                                    'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else{
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }
                            }else{
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['loginmob'],
                                    'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                    'searchType' => 'Lapata',
                                    'searchPhoto' => $newImagePath,
                                    'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                    'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else{
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }
                            }
                        }
                    }
                }else{
                    if(count($specialId) > 0)
                    {
                        foreach($specialId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from mahakumbhSpecial where id='.$v)->result_array();
                                $getDetails = $this->db->query('select * from searchfacehistoryafterlogin where Id='.$_SESSION['searchFaceIdAfterLogin'])->result_array();
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['loginmob'],
                                    'searchedAppNumber' => $v,
                                    'searchType' => 'Special',
                                    'complainantUserType' => 'NonKyc',
                                    'complainantUserId' => ($getApplicationNumber[0]['userId']),
                                    'searchPhoto' => $newImagePath,
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                if($getApplicationNumber[0]['well1'] != NULL)
                                {
                                    $sendStatus = $this->sendMessage91CustomMsg($getApplicationNumber[0]['Application_no'],$getApplicationNumber[0]['well1'],$this->config->item('active_template_id'));
                                    if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                                        echo json_encode([
                                            'status' => 'error',
                                            'msg'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                                        ]);
                                        die();
                                    }
                                }
                                if($getApplicationNumber[0]['well2'] != NULL)
                                {
                                    $sendStatus = $this->sendMessage91CustomMsg($getApplicationNumber[0]['Application_no'],$getApplicationNumber[0]['well2'],$this->config->item('active_template_id'));
                                    if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                                        echo json_encode([
                                            'status' => 'error',
                                            'msg'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                                        ]);
                                        die();
                                    }
                                }
                                if($getApplicationNumber[0]['well3'] != NULL)
                                {
                                    $sendStatus = $this->sendMessage91CustomMsg($getApplicationNumber[0]['Application_no'],$getApplicationNumber[0]['well3'],$this->config->item('active_template_id'));
                                    if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                                        echo json_encode([
                                            'status' => 'error',
                                            'msg'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                                        ]);
                                        die();
                                    }
                                }
                            }
                        }
                    }
                }
                $insertdata = array(
                    'matchedLapataIds' => implode(',',$lapataId),
                    'matchedSpecialIds' => implode(',',$specialId),
                    'matchedWantedIds' => implode(',',$wantedId),
                    'matchedCriminalIds' => implode(',',$criminalId),
                    'matchedMissingIds' => implode(',',$missingId),
                    'matchedUserIds' => implode(',',$userId),
                    'matchedUnknownIds' => implode(',',$unknownId),
                    'matchedFamilyIds' => implode(',',$familyId),
                    'totalResponse' => json_encode($faceresponse),
                    'matchedMahakumbhIds' => implode(',',$mahakumbhId),
                    'mainPhoto' => $newImagePath,
                    'gender' => $_POST['gender']
                );
                $this->db->where('Id',$_SESSION['searchFaceIdAfterLogin']);
                $update = $this->db->update('searchfacehistoryafterlogin',$insertdata);
                $response = array(
                    'status' => 'success',
                    'personName' => $personName,
                    'isWanted' => $isWanted,
                    'isCriminal' => $isCriminal,
                    'isLapata' => $isLapata,
                    'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                    'gender' => strtolower($gender),
                    'age' => $age,
                    'address' => $address,
                    'isAadharCorrect' => $isAadharCorrect,
                    'isDobCorrect' => $isDobCorrect,
                    'isGenderCorrect' => $isGenderCorrect,
                    'message' => 'Person Found',
                    'isMissing' => $isMissing,
                    'isRegistered' => $isUserFound,
                    'image' => $userphoto,
                    'finalCount' => $finalcount
                );
                echo json_encode($response);     
            }else{
                $response = array(
                    'status' => 'success',
                    'finalCount' => $finalcount
                );
                echo json_encode($response);     
            }
        }else{
            if($_POST['type'] == 'missing')
            {
                $data = $_POST["mainPhotoSelectedFacematch"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                $imageId = time().''.rand(0,10000);
                $newImagePath = 'upload/searchFacePerson/'.$imageId.'.'.$split1[1];
                file_put_contents($newImagePath, $data);
                $personName = '';
                $gender = '';
                $aadhar = '';
                $gender = '';
                $isVerified = 'No';
                $isVisible = 0;
                $age = '';
                $isWanted = 0;
                $isCriminal = 0;
                $wantedId = array();
                $criminalId = array();
                $address = '';
                $userphoto = '';
                $personId = 0;
                $isLapata = 0;
                $missingId = 0;
                $isUserFound = 0;
                $isMissing = 0;
                $isAadharCorrect = 0;
                $isGenderCorrect = 1;
                $isDobCorrect = 1;
                $userId = array();
                $missingId = array();
                $lapataId = array();
                $wantedId = array();
                $criminalId = array();
                $finalcount = 0;
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                $unknownId = array();
                if(isset($faceresponse['output']) && count($faceresponse['output']) > 0)
                {
                    foreach($faceresponse['output'] as $k1=>$v1)
                    {
                        $this->db->or_where('imageId',$v1);
                        $this->db->or_where('imageId1',$v1);
                        $this->db->or_where('imageId2',$v1);
                        $getUnknownDetail = $this->db->get('unknown_person')->result_array();
                        if(count($getUnknownDetail) > 0)
                        {
                            foreach($getUnknownDetail as $k=>$v)
                            {
                                if(strtotime($v['expiryDate']) >= strtotime(date('Y-m-d')))
                                {
                                    if($v['isFound'] == 0 && $v['awsEventName'] == 'All')
                                    {
                                        $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                        if($gender == strtolower($v['Gender']))
                                        {
                                            if($v['isFinalSubmitted'] == 1)
                                            {
                                                array_push($lapataId,$v['id']);
                                                $finalcount++;
                                            }
                                        }
                                    }
                                }
                            }
                        }   
                    }
                }
                if($finalcount > 0)
                {
                    if(count($lapataId) > 0)
                    {
                        foreach($lapataId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if(count($unknownId) > 0)
                    {
                        foreach($unknownId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'matchedLapataIds' => implode(',',$lapataId),
                        'matchedWantedIds' => implode(',',$wantedId),
                        'matchedCriminalIds' => implode(',',$criminalId),
                        'matchedMissingIds' => implode(',',$missingId),
                        'matchedUserIds' => implode(',',$userId),
                        'matchedUnknownIds' => implode(',',$unknownId),
                        'mainPhoto' => $newImagePath
                    );
                    $this->db->where('Id',$_SESSION['searchFaceIdAfterLogin']);
                    $update = $this->db->update('searchfacehistoryafterlogin',$insertdata);
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'isWanted' => $isWanted,
                        'isCriminal' => $isCriminal,
                        'isLapata' => $isLapata,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                        'message' => 'Person Found',
                        'isMissing' => $isMissing,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto,
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }else{
                    $response = array(
                        'status' => 'success',
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }
            }else{
                $data = $_POST["mainPhotoSelectedFacematch"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                $imageId = time().''.rand(0,10000);
                $newImagePath = 'upload/searchFacePerson/'.$imageId.'.'.$split1[1];
                file_put_contents($newImagePath, $data);
                $personName = '';
                $gender = '';
                $aadhar = '';
                $gender = '';
                $isVerified = 'No';
                $isVisible = 0;
                $age = '';
                $isWanted = 0;
                $isCriminal = 0;
                $wantedId = array();
                $criminalId = array();
                $address = '';
                $userphoto = '';
                $personId = 0;
                $isLapata = 0;
                $missingId = 0;
                $isUserFound = 0;
                $isMissing = 0;
                $isAadharCorrect = 0;
                $isGenderCorrect = 1;
                $isDobCorrect = 1;
                $userId = array();
                $missingId = array();
                $lapataId = array();
                $wantedId = array();
                $criminalId = array();
                $finalcount = 0;
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                $unknownId = array();
                /*if(isset($faceresponse['output']) && count($faceresponse['output']) > 0)
                {
                    foreach($faceresponse['output'] as $k1=>$v1)
                    {
                        $this->db->or_where('imageId',$v1);
                        $this->db->or_where('imageId1',$v1);
                        $this->db->or_where('imageId2',$v1);
                        $getUnknownDetail = $this->db->get('unknown_person')->result_array();
                        if(count($getUnknownDetail) > 0)
                        {
                            foreach($getUnknownDetail as $k=>$v)
                            {
                                if($v['isFound'] == 0 && $v['awsEventName'] != 'All')
                                {
                                    $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                    if($gender == strtolower($v['Gender']))
                                    {
                                        if($v['isFinalSubmitted'] == 1)
                                        {
                                            array_push($unknownId,$v['id']);
                                            $finalcount++;
                                        }
                                    }
                                }
                            }
                        }   
                    }
                }*/
                if($finalcount > 0)
                {
                    if(count($lapataId) > 0)
                    {
                        foreach($lapataId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if(count($unknownId) > 0)
                    {
                        foreach($unknownId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'matchedLapataIds' => implode(',',$lapataId),
                        'matchedWantedIds' => implode(',',$wantedId),
                        'matchedCriminalIds' => implode(',',$criminalId),
                        'matchedMissingIds' => implode(',',$missingId),
                        'matchedUserIds' => implode(',',$userId),
                        'matchedUnknownIds' => implode(',',$unknownId),
                        'mainPhoto' => $newImagePath
                    );
                    $this->db->where('Id',$_SESSION['searchFaceIdAfterLogin']);
                    $update = $this->db->update('searchfacehistoryafterlogin',$insertdata);
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'isWanted' => $isWanted,
                        'isCriminal' => $isCriminal,
                        'isLapata' => $isLapata,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                        'message' => 'Person Found',
                        'isMissing' => $isMissing,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto,
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }else{
                    $response = array(
                        'status' => 'success',
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }
            }
        }
    }

    function searchPersonNewUnknownFace()
    {
        if($_POST['type'] == '')
        {
            $data = $_POST["mainPhotoSelectedFacematch"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = time().''.rand(0,10000);
            $newImagePath = 'upload/searchFacePerson/'.$imageId.'.'.$split1[1];
            file_put_contents($newImagePath, $data);
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcakhoji4",
                "image_url" => base_url().''.$newImagePath,
                "threshold" => (float)$this->getSettings('afterLoginThreshold')
            ));
            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => $postdata,
              CURLOPT_HTTPHEADER => array(
                'Content-Type: application/json',
                'Authorization: '.$this->getSettings('facematchtoken'),
              ),
            ));
            $faceresponse = json_decode(curl_exec($curl),true);
            $personName = '';
            $gender = '';
            $aadhar = '';
            $gender = '';
            $isVerified = 'No';
            $isVisible = 0;
            $age = '';
            $isWanted = 0;
            $isCriminal = 0;
            $wantedId = array();
            $criminalId = array();
            $address = '';
            $userphoto = '';
            $personId = 0;
            $isLapata = 0;
            $missingId = 0;
            $isUserFound = 0;
            $isMissing = 0;
            $isAadharCorrect = 0;
            $isGenderCorrect = 1;
            $isDobCorrect = 1;
            $userId = array();
            $specialId = array();
            $missingId = array();
            $familyId = array();
            $mahakumbhId = array();
            $lapataId = array();
            $wantedId = array();
            $criminalId = array();
            $finalcount = 0;
            curl_close($curl);
            if(is_array($faceresponse) && count($faceresponse) > 0)
            {
                if(isset($faceresponse['output']) && count($faceresponse['output']) > 0)
                {
                    foreach($faceresponse['output'] as $k=>$v)
                    {
                        $split = explode('_',$v);
                        if($split[0] == 'GEN')
                        {
                            $this->db->or_where('imageId',$v);
                            $this->db->or_where('imageId1',$v);
                            $this->db->or_where('imageId2',$v);
                            $user = $this->db->get('user')->result_array();
                            if(count($user) > 0)
                            {
                                foreach($user as $k1=>$v1)
                                {
                                    if(strtolower($_POST['gender']) == strtolower($v1['gender']))
                                    {
                                        array_push($userId,$v1['uid']);
                                        $finalcount++;   
                                    }
                                }
                            }else{
                                $getAadharImageId = $this->db->query('select * from user where aadharImageId="'.$v.'"')->result_array();
                                if(count($getAadharImageId) > 0)
                                {
                                    foreach($getAadharImageId as $k1=>$v1)
                                    {
                                        if(strtolower($_POST['gender']) == strtolower($v1['gender']))
                                        {
                                            if(strtotime($v1['aadharExpiryDate']) >= strtotime(date('Y-m-d')))
                                            {
                                                array_push($userId,$v1['uid']);
                                                $finalcount++;   
                                            }
                                        }
                                    }   
                                }
                            }
                        }
                        if($split[0] == 'Missing')
                        {
                            $this->db->where('imageId',$v);
                            $this->db->where('isFinalSubmitted',1);
                            $this->db->where('isFound',0);
                            $missingperson = $this->db->get('missingperson')->result_array();
                            if(count($missingperson) > 0)
                            {
                                foreach($missingperson as $k1=>$v1)
                                {
                                    array_push($missingId,$v1['Id']);
                                    $finalcount++;
                                }
                            }
                        }
                        if($split[0] == 'LAP')
                        {
                            $this->db->or_where('imageId',$v);
                            $this->db->or_where('imageId1',$v);
                            $this->db->or_where('imageId2',$v);
                            $lapata = $this->db->get('unknown_person')->result_array();
                            if(count($lapata) > 0)
                            {
                                foreach($lapata as $k1=>$v1)
                                {
                                    if(strtotime($v1['expiryDate']) >= strtotime(date('Y-m-d')))
                                    {
                                        if($v1['isFound'] == '0')
                                        {
                                            if($v1['awsEventName'] == 'All')
                                            {
                                                $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                                if($gender == strtolower($v1['Gender']))
                                                {
                                                    if($v1['isFinalSubmitted'] == 1)
                                                    {
                                                        array_push($lapataId,$v1['id']);
                                                        $finalcount++;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        if($split[0] == 'Wanted')
                        {
                            $this->db->where('imageId',$v);
                            $this->db->where('isFinalSubmitted',1);
                            $this->db->where('status','Active');
                            $wanted = $this->db->get('criminals')->result_array();
                            if(count($wanted) > 0)
                            {
                                foreach($wanted as $k1=>$v1)
                                {
                                    array_push($wantedId,$v1['Id']);
                                    $finalcount++;
                                }
                            }
                        }
                        if($split[0] == 'Criminal')
                        {
                            $this->db->where('imageId',$v);
                            $this->db->where('isFinalSubmitted',1);
                            $this->db->where('status','Active');
                            $criminal = $this->db->get('criminals')->result_array();
                            if(count($criminal) > 0)
                            {
                                foreach($criminal as $k1=>$v1)
                                {
                                    array_push($criminalId,$v1['Id']);
                                    $finalcount++;
                                }
                            }
                        }
                        if($split[0] == 'FAM')
                        {
                            $this->db->or_where('imageId',$v);
                            $this->db->or_where('imageId1',$v);
                            $this->db->or_where('imageId2',$v);
                            $familyMember = $this->db->get('familyMember')->result_array();
                            if(count($familyMember) > 0)
                            {
                                foreach($familyMember as $k1=>$v1)
                                {
                                    if(strtotime($v1['expiryDate']) >= strtotime(date('Y-m-d')))
                                    {
                                        if($v1['activeStatus'] == 1)
                                        {
                                            $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                            if($gender == strtolower($v1['Gender']))
                                            {
                                                if($v1['isFinalSubmitted'] == 1)
                                                {
                                                    array_push($familyId,$v1['id']);
                                                    $finalcount++;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        if($split[0] == 'MAH')
                        {
                            $this->db->or_where('imageId',$v);
                            $this->db->or_where('imageId1',$v);
                            $this->db->or_where('imageId2',$v);
                            $familyMember = $this->db->get('mahakumbhMember')->result_array();
                            if(count($familyMember) > 0)
                            {
                                foreach($familyMember as $k1=>$v1)
                                {
                                    if(strtotime($v1['expiryDate']) >= strtotime(date('Y-m-d')))
                                    {
                                        if($v1['activeStatus'] == 1)
                                        {
                                            $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                            if($gender == strtolower($v1['Gender']))
                                            {
                                                if($v1['isFinalSubmitted'] == 1)
                                                {
                                                    array_push($mahakumbhId,$v1['id']);
                                                    $finalcount++;
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        if($this->getSettings('mahakumbhSpecial') == 'yes')
                        {
                            if($split[0] == 'SPE')
                            {
                                $this->db->or_where('imageId',$v);
                                $this->db->or_where('imageId1',$v);
                                $this->db->or_where('imageId2',$v);
                                $familyMember = $this->db->get('mahakumbhSpecial')->result_array();
                                if(count($familyMember) > 0)
                                {
                                    foreach($familyMember as $k1=>$v1)
                                    {
                                        if($v1['isFound'] == 0)
                                        {
                                            if(strtolower($_POST['gender']) == strtolower($v1['Gender']))
                                            {
                                                array_push($specialId,$v1['id']);
                                                $finalcount++;
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcakhoji4",
                "image_url" => base_url().''.$newImagePath,
                "threshold" => (float)$this->getSettings('afterLoginThreshold')
            ));
            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => $postdata,
              CURLOPT_HTTPHEADER => array(
                'Content-Type: application/json',
                'Accept: application/json',
                'Authorization: '.$this->getSettings('facematchtoken'),
              ),
            ));
            
            $faceresponse = json_decode(curl_exec($curl),true);
            $unknownId = array();
            if(isset($faceresponse['output']) && count($faceresponse['output']) > 0)
            {
                foreach($faceresponse['output'] as $k1=>$v1)
                {
                    $this->db->or_where('imageId',$v1);
                    $this->db->or_where('imageId1',$v1);
                    $this->db->or_where('imageId2',$v1);
                    $getUnknownDetail = $this->db->get('unknown_person')->result_array();
                    if(count($getUnknownDetail) > 0)
                    {
                        foreach($getUnknownDetail as $k=>$v)
                        {
                            if($v['isFound'] == 0 && $v['awsEventName'] != 'All')
                            {
                                $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                if($gender == strtolower($v['Gender']))
                                {
                                    if($v['isFinalSubmitted'] == 1)
                                    {
                                        array_push($unknownId,$v['id']);
                                        $finalcount++;
                                    }
                                }
                            }
                        }
                    }   
                }
            }
            if($finalcount > 0)
            {
                if(count($lapataId) > 0)
                {
                    foreach($lapataId as $k=>$v)
                    {
                        if($k == 0)
                        {
                            $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                            if($getApplicationNumber[0]['isKyc'] == 0)
                            {
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['loginmob'],
                                    'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                    'searchType' => 'Lapata',
                                    'searchPhoto' => $newImagePath,
                                    'complainantUserType' => 'NonKyc',
                                    'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else{
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }
                            }else{
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['loginmob'],
                                    'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                    'searchType' => 'Lapata',
                                    'searchPhoto' => $newImagePath,
                                    'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                    'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else{
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }
                            }
                        }
                    }
                }else{
                    if(count($specialId) > 0)
                    {
                        foreach($specialId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from mahakumbhSpecial where id='.$v)->result_array();
                                $getDetails = $this->db->query('select * from searchfacehistoryafterlogin where Id='.$_SESSION['searchFaceIdAfterLogin'])->result_array();
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['loginmob'],
                                    'searchedAppNumber' => $v,
                                    'searchType' => 'Special',
                                    'complainantUserType' => 'NonKyc',
                                    'complainantUserId' => ($getApplicationNumber[0]['userId']),
                                    'searchPhoto' => $newImagePath,
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                if($getApplicationNumber[0]['well1'] != NULL)
                                {
                                    $msg = "ALERT!!!%nDear User, Your Missing person with Application no - ".$getApplicationNumber[0]['Application_no']." is found active. %nPlease check your notification at khoji.in%nKHOJI INFOTECH";
                                    $this->sendTextLocalCustomMsg($msg,$getApplicationNumber[0]['well1']);
                                }
                                if($getApplicationNumber[0]['well2'] != NULL)
                                {
                                    $msg = "ALERT!!!%nDear User, Your Missing person with Application no - ".$getApplicationNumber[0]['Application_no']." is found active. %nPlease check your notification at khoji.in%nKHOJI INFOTECH";
                                    $this->sendTextLocalCustomMsg($msg,$getApplicationNumber[0]['well2']);
                                }
                                if($getApplicationNumber[0]['well3'] != NULL)
                                {
                                    $msg = "ALERT!!!%nDear User, Your Missing person with Application no - ".$getApplicationNumber[0]['Application_no']." is found active. %nPlease check your notification at khoji.in%nKHOJI INFOTECH";
                                    $this->sendTextLocalCustomMsg($msg,$getApplicationNumber[0]['well3']);
                                }
                            }
                        }
                    }
                }
                $insertdata = array(
                    'matchedLapataIds' => implode(',',$lapataId),
                    'matchedSpecialIds' => implode(',',$specialId),
                    'matchedWantedIds' => implode(',',$wantedId),
                    'matchedCriminalIds' => implode(',',$criminalId),
                    'matchedMissingIds' => implode(',',$missingId),
                    'matchedUserIds' => implode(',',$userId),
                    'matchedUnknownIds' => implode(',',$unknownId),
                    'matchedFamilyIds' => implode(',',$familyId),
                    'matchedMahakumbhIds' => implode(',',$mahakumbhId),
                    'mainPhoto' => $newImagePath,
                );
                $this->db->where('Id',$_SESSION['searchFaceIdAfterLogin']);
                $update = $this->db->update('searchfacehistoryafterlogin',$insertdata);
                $response = array(
                    'status' => 'success',
                    'personName' => $personName,
                    'isWanted' => $isWanted,
                    'isCriminal' => $isCriminal,
                    'isLapata' => $isLapata,
                    'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                    'gender' => strtolower($gender),
                    'age' => $age,
                    'address' => $address,
                    'isAadharCorrect' => $isAadharCorrect,
                    'isDobCorrect' => $isDobCorrect,
                    'isGenderCorrect' => $isGenderCorrect,
                    'message' => 'Person Found',
                    'isMissing' => $isMissing,
                    'isRegistered' => $isUserFound,
                    'image' => $userphoto,
                    'finalCount' => $finalcount
                );
                echo json_encode($response);     
            }else{
                $response = array(
                    'status' => 'success',
                    'finalCount' => $finalcount
                );
                echo json_encode($response);     
            }
        }else{
            if($_POST['type'] == 'missing')
            {
                $data = $_POST["mainPhotoSelectedFacematch"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                $imageId = time().''.rand(0,10000);
                $newImagePath = 'upload/searchFacePerson/'.$imageId.'.'.$split1[1];
                file_put_contents($newImagePath, $data);
                $personName = '';
                $gender = '';
                $aadhar = '';
                $gender = '';
                $isVerified = 'No';
                $isVisible = 0;
                $age = '';
                $isWanted = 0;
                $isCriminal = 0;
                $wantedId = array();
                $criminalId = array();
                $address = '';
                $userphoto = '';
                $personId = 0;
                $isLapata = 0;
                $missingId = 0;
                $isUserFound = 0;
                $isMissing = 0;
                $isAadharCorrect = 0;
                $isGenderCorrect = 1;
                $isDobCorrect = 1;
                $userId = array();
                $missingId = array();
                $lapataId = array();
                $wantedId = array();
                $criminalId = array();
                $finalcount = 0;
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                $unknownId = array();
                if(isset($faceresponse['output']) && count($faceresponse['output']) > 0)
                {
                    foreach($faceresponse['output'] as $k1=>$v1)
                    {
                        $this->db->or_where('imageId',$v1);
                        $this->db->or_where('imageId1',$v1);
                        $this->db->or_where('imageId2',$v1);
                        $getUnknownDetail = $this->db->get('unknown_person')->result_array();
                        if(count($getUnknownDetail) > 0)
                        {
                            foreach($getUnknownDetail as $k=>$v)
                            {
                                if(strtotime($v['expiryDate']) >= strtotime(date('Y-m-d')))
                                {
                                    if($v['isFound'] == 0 && $v['awsEventName'] == 'All')
                                    {
                                        $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                        if($gender == strtolower($v['Gender']))
                                        {
                                            if($v['isFinalSubmitted'] == 1)
                                            {
                                                array_push($lapataId,$v['id']);
                                                $finalcount++;
                                            }
                                        }
                                    }
                                }
                            }
                        }   
                    }
                }
                if($finalcount > 0)
                {
                    if(count($lapataId) > 0)
                    {
                        foreach($lapataId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if(count($unknownId) > 0)
                    {
                        foreach($unknownId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'matchedLapataIds' => implode(',',$lapataId),
                        'matchedWantedIds' => implode(',',$wantedId),
                        'matchedCriminalIds' => implode(',',$criminalId),
                        'matchedMissingIds' => implode(',',$missingId),
                        'matchedUserIds' => implode(',',$userId),
                        'matchedUnknownIds' => implode(',',$unknownId),
                        'mainPhoto' => $newImagePath
                    );
                    $this->db->where('Id',$_SESSION['searchFaceIdAfterLogin']);
                    $update = $this->db->update('searchfacehistoryafterlogin',$insertdata);
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'isWanted' => $isWanted,
                        'isCriminal' => $isCriminal,
                        'isLapata' => $isLapata,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                        'message' => 'Person Found',
                        'isMissing' => $isMissing,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto,
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }else{
                    $response = array(
                        'status' => 'success',
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }
            }else{
                $data = $_POST["mainPhotoSelectedFacematch"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                $imageId = time().''.rand(0,10000);
                $newImagePath = 'upload/searchFacePerson/'.$imageId.'.'.$split1[1];
                file_put_contents($newImagePath, $data);
                $personName = '';
                $gender = '';
                $aadhar = '';
                $gender = '';
                $isVerified = 'No';
                $isVisible = 0;
                $age = '';
                $isWanted = 0;
                $isCriminal = 0;
                $wantedId = array();
                $criminalId = array();
                $address = '';
                $userphoto = '';
                $personId = 0;
                $isLapata = 0;
                $missingId = 0;
                $isUserFound = 0;
                $isMissing = 0;
                $isAadharCorrect = 0;
                $isGenderCorrect = 1;
                $isDobCorrect = 1;
                $userId = array();
                $missingId = array();
                $lapataId = array();
                $wantedId = array();
                $criminalId = array();
                $finalcount = 0;
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                $unknownId = array();
                /*if(isset($faceresponse['output']) && count($faceresponse['output']) > 0)
                {
                    foreach($faceresponse['output'] as $k1=>$v1)
                    {
                        $this->db->or_where('imageId',$v1);
                        $this->db->or_where('imageId1',$v1);
                        $this->db->or_where('imageId2',$v1);
                        $getUnknownDetail = $this->db->get('unknown_person')->result_array();
                        if(count($getUnknownDetail) > 0)
                        {
                            foreach($getUnknownDetail as $k=>$v)
                            {
                                if($v['isFound'] == 0 && $v['awsEventName'] != 'All')
                                {
                                    $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                    if($gender == strtolower($v['Gender']))
                                    {
                                        if($v['isFinalSubmitted'] == 1)
                                        {
                                            array_push($unknownId,$v['id']);
                                            $finalcount++;
                                        }
                                    }
                                }
                            }
                        }   
                    }
                }*/
                if($finalcount > 0)
                {
                    if(count($lapataId) > 0)
                    {
                        foreach($lapataId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if(count($unknownId) > 0)
                    {
                        foreach($unknownId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['loginmob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'matchedLapataIds' => implode(',',$lapataId),
                        'matchedWantedIds' => implode(',',$wantedId),
                        'matchedCriminalIds' => implode(',',$criminalId),
                        'matchedMissingIds' => implode(',',$missingId),
                        'matchedUserIds' => implode(',',$userId),
                        'matchedUnknownIds' => implode(',',$unknownId),
                        'mainPhoto' => $newImagePath
                    );
                    $this->db->where('Id',$_SESSION['searchFaceIdAfterLogin']);
                    $update = $this->db->update('searchfacehistoryafterlogin',$insertdata);
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'isWanted' => $isWanted,
                        'isCriminal' => $isCriminal,
                        'isLapata' => $isLapata,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                        'message' => 'Person Found',
                        'isMissing' => $isMissing,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto,
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }else{
                    $response = array(
                        'status' => 'success',
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }
            }
        }
    }

    function showPaymentGateway()
    {
        if(isset($_SESSION['landingMob']))
        {
            if(isset($_SESSION['searchFaceIdAfterLogin']))
            {
                $page_data['control'] = 'user';
                $page_data['title'] = 'Payment Gateway';
                $page_data['page_name'] = 'showPaymentGateway';
                $this->load->view('nonkyc/index', $page_data); 
            }else{
                redirect('NonKyc/search_person_details?pn=7&type=unknown','refresh');
            }
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function saveUniqueAadhar()
    {
        $checkIfAlready = $this->db->query('select * from uniqueAadhar where aadharNumber="'.$_POST['uniqueAadhar'].'"')->result_array();
        if(count($checkIfAlready) > 0)
        {
            $getUnknownDetails = $this->db->query('select * from unknown_person where id='.$checkIfAlready[0]['unknownId'])->result_array();
            if(count($getUnknownDetails) > 0)
            {
                if($getUnknownDetails[0]['isFinalSubmitted'] == 1)
                {
                    $updateAsPaid = $this->db->query('update unknown_person set isFree = 0 where id='.$_POST['Id']);
                    $this->db->query('update nonKycUser set freeCreditUsed = NULL where uid='.$_SESSION['user_id']);
                    $getAllotedPackages = $this->db->query('select * from allotedPackages where userType="NonKyc" and userId='.$_SESSION['user_id'].' and complaintType="Missing"')->result_array();
                    if(count($getAllotedPackages) > 0)
                    {
                        $response = array(
                            'status' => 'applicable'
                        );
                    }else{
                        $response = array(
                            'status' => 'notapplicable'
                        );
                    }
                }else{
                    $updateAsPaid = $this->db->query('update unknown_person set isFree = 0 where id='.$checkIfAlready[0]['unknownId']);
                    $updateAsPaid = $this->db->query('update unknown_person set isFree = 1 where id='.$_POST['Id']);
                    $this->db->query('update nonKycUser set freeCreditUsed = 1 where uid='.$_SESSION['user_id']);
                    if($getUnknownDetails[0]['isKyc'] == 0)
                    {
                        $this->db->query('update nonKycUser set freeCreditUsed = NULL where uid='.$getUnknownDetails[0]['userId']);
                    }else{
                        $this->db->query('update user set freeCreditUsed = NULL where uid='.$getUnknownDetails[0]['userId']);
                    }
                    $response = array(
                        'status' => 'applicable'
                    );
                }
            }else{
                $updateAsPaid = $this->db->query('update unknown_person set isFree = 0 where id='.$_POST['Id']);
                $this->db->query('update nonKycUser set freeCreditUsed = NULL where uid='.$_SESSION['user_id']);
                $response = array(
                    'status' => 'notapplicable'
                );
            }
        }else{
            $insertData = array(
                'aadharNumber' => $_POST['uniqueAadhar'],
                'unknownId' => $_POST['Id'],
                'userId' => $_SESSION['user_id'],
                'isKyc' => 0,
                'dateCreated' => date('Y-m-d H:i:s A'),
            );
            $this->db->insert('uniqueAadhar',$insertData);
            $updateAsFree = $this->db->query('update unknown_person set isFree = 1 where id='.$_POST['Id']);
            $this->db->query('update nonKycUser set freeCreditUsed = 1 where uid='.$_SESSION['user_id']);
            $response = array(
                'status' => 'applicable'
            );
        }
        echo json_encode($response);
    }

    function bulkUploadUnknown()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['page_name'] = 'bulkUploadUnknown';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'login','refresh');
        }   
    }

    function view_expiry_unknown()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['page_name'] = 'view_expiry_unknown';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            if($this->session->userdata('user_login') == 'yes')
            {
                $page_data['page_name'] = 'view_expiry_unknown';
                $this->load->view('user/index', $page_data);
            }else{
                redirect(base_url().'login','refresh');
            }
        }
    }

    function view_expiry_lapata()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['page_name'] = 'view_expiry_lapata';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            if($this->session->userdata('user_login') == 'yes')
            {
                $page_data['page_name'] = 'view_expiry_lapata';
                $this->load->view('user/index', $page_data);
            }else{
                redirect(base_url().'login','refresh');
            }
        }
    }

    function viewFaceMatchResults()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['page_name'] = 'viewFaceMatchResults';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            if($this->session->userdata('user_login') == 'yes')
            {
                $page_data['page_name'] = 'viewFaceMatchResults';
                $this->load->view('user/index', $page_data);
            }else{
                redirect(base_url().'login','refresh');
            }
        }
    }

    function searchMissingFace()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['page_name'] = 'searchMissingFace';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function searchFaceResults()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['page_name'] = 'searchFaceResults';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function savePaymentStatus()
    {
        $updateData = array(
            'paymentStatus' => $_POST['status']
        );
        $this->db->where('id',$_POST['id']);
        $this->db->update('unknown_person',$updateData);
    }

    function manageGallery()
    {
        if(isset($_SESSION['landingMob'])){
            if($_SESSION['landingMob'] != '1')
            {
                $page_data['page_name'] = 'manageGallery_all';
                if(!isset($_GET['appNo']))
                {
                    $page_data['data'] = $this->db->query('select * from unknown_person where userId='.$_SESSION['user_id'].' and isKyc=0 and isFound=0 and isFinalSubmitted=1 order by Id desc')->result_array();
                }else{
                    $page_data['data'] = $this->db->query('select * from unknown_person where Application_no="'.$_GET['appNo'].'" and userId='.$_SESSION['user_id'].' and isFinalSubmitted=1 and isFound=0')->result_array();
                }
                $ids = array();
                if(count($page_data['data']) > 0)
                {
                    foreach($page_data['data'] as $k=>$v)
                    {
                        if($v['awsEventName'] == 'All')
                        {
                            if(strtotime($v['expiryDate']) >= strtotime(date('Y-m-d')))
                            {
                                array_push($ids,$v['id']);
                            }
                        }else{
                            array_push($ids,$v['id']);
                        }
                    }
                }
                if(count($ids) > 0)
                {
                    $this->db->where_in('id',$ids);
                }else{
                    $this->db->where('userId',$_SESSION['user_id']);
                    $this->db->where('isKyc',0);
                    $this->db->where('isFound',0);
                }
                $page_data['rows'] = count($ids);
                $page_rows = 15;
             
                $last = ceil($page_data['rows']/$page_rows);
             
                if($last < 1){
                    $last = 1;
                }
             
                $pagenum = 1;
             
                if(isset($_GET['pn'])){
                    $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
                }
             
                if ($pagenum < 1) { 
                    $pagenum = 1; 
                } 
                else if ($pagenum > $last) { 
                    $pagenum = $last; 
                }
                $this->db->order_by('dateCreated','desc');
                $this->db->limit($page_rows,($pagenum - 1) * $page_rows);
                $page_data['data'] = $this->db->get('unknown_person')->result_array();
                $page_data['paginationCtrls'] = '';     
                $type = $_GET['type'];
                if($last != 1){
                    if ($pagenum > 1) {
                        $previous = $pagenum - 1;
                        $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageGallery?pn='.$previous.'&type='.$type.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                 
                        for($i = $pagenum-4; $i < $pagenum; $i++){
                            if($i > 0){
                                $paginationCtrls .= '<a href="'.base_url().'NonKyc/manageGallery?pn='.$i.'&type='.$type.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                            }
                        }
                    }
                 
                    $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
                 
                    for($i = $pagenum+1; $i <= $last; $i++){
                        $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageGallery?pn='.$i.'&type='.$type.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                        if($i >= $pagenum+4){
                            break;
                        }
                    }
                 
                    if ($pagenum != $last) {
                        $next = $pagenum + 1;
                        $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manageGallery?pn='.$next.'&type='.$type.'" class="btn btn-default">Next</a> ';
                    }
                }
                $this->load->view('nonkyc/index', $page_data);
            }else{
                $page_data['page_name'] = 'manageGallery';
                if($_GET['type'] == 'unknown')
                {
                    if(!isset($_GET['appNo']))
                    {
                        $page_data['data'] = $this->db->query('select * from unknown_person where awsEventName="Unknown" and userId='.$_SESSION['user_id'].' and isKyc=0 order by Id desc')->result_array();
                    }else{
                        $page_data['data'] = $this->db->query('select * from unknown_person where Application_no="'.$_GET['appNo'].'" and awsEventName="Unknown" and userId='.$_SESSION['user_id'])->result_array();
                    }
                    $page_data['rows'] = count($page_data['data']);
                    $page_rows = 15;
                 
                    $last = ceil($page_data['rows']/$page_rows);
                 
                    if($last < 1){
                        $last = 1;
                    }
                 
                    $pagenum = 1;
                 
                    if(isset($_GET['pn'])){
                        $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
                    }
                 
                    if ($pagenum < 1) { 
                        $pagenum = 1; 
                    } 
                    else if ($pagenum > $last) { 
                        $pagenum = $last; 
                    }
                 
                    $limit = 'LIMIT ' .($pagenum - 1) * $page_rows .',' .$page_rows;
                    if(!isset($_GET['appNo']))
                    {
                        $page_data['data']=$this->db->query('select * from unknown_person where awsEventName="Unknown" and userId='.$_SESSION['user_id'].' and isKyc=0 order by Id desc '.$limit)->result_array();
                    }else{
                        $page_data['data']=$this->db->query('select * from unknown_person where Application_no="'.$_GET['appNo'].'" and awsEventName="Unknown" and userId='.$_SESSION['user_id'].' and isKyc=0 order by dateCreated desc '.$limit)->result_array();
                    }
                    $page_data['paginationCtrls'] = '';     
                    if($last != 1){
                        if ($pagenum > 1) {
                            $previous = $pagenum - 1;
                            $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageGallery?type=unknown&pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                     
                            for($i = $pagenum-4; $i < $pagenum; $i++){
                                if($i > 0){
                                    $paginationCtrls .= '<a href="'.base_url().'NonKyc/manageGallery?type=unknown&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                }
                            }
                        }
                     
                        $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
                     
                        for($i = $pagenum+1; $i <= $last; $i++){
                            $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageGallery?type=unknown&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                            if($i >= $pagenum+4){
                                break;
                            }
                        }
                     
                        if ($pagenum != $last) {
                            $next = $pagenum + 1;
                            $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manageGallery?type=unknown&pn='.$next.'" class="btn btn-default">Next</a> ';
                        }
                    }
                    $this->load->view('nonkyc/index', $page_data);
                }else{
                    if(!isset($_GET['appNo']))
                    {
                        $page_data['data'] = $this->db->query('select * from unknown_person where awsEventName="All" and userId='.$_SESSION['user_id'].' and isKyc=0 order by Id desc')->result_array();
                    }else{
                        $page_data['data'] = $this->db->query('select * from unknown_person where Application_no="'.$_GET['appNo'].'" and awsEventName="All" and userId='.$_SESSION['user_id'])->result_array();
                    }
                    $page_data['rows'] = count($page_data['data']);
                    $page_rows = 15;
                 
                    $last = ceil($page_data['rows']/$page_rows);
                 
                    if($last < 1){
                        $last = 1;
                    }
                 
                    $pagenum = 1;
                 
                    if(isset($_GET['pn'])){
                        $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
                    }
                 
                    if ($pagenum < 1) { 
                        $pagenum = 1; 
                    } 
                    else if ($pagenum > $last) { 
                        $pagenum = $last; 
                    }
                 
                    $limit = 'LIMIT ' .($pagenum - 1) * $page_rows .',' .$page_rows;
                    if(!isset($_GET['appNo']))
                    {
                        $page_data['data'] = $this->db->query('select * from unknown_person where awsEventName="All" and userId='.$_SESSION['user_id'].' and isKyc=0 order by Id desc '.$limit)->result_array();
                    }else{
                        $page_data['data'] = $this->db->query('select * from unknown_person where Application_no="'.$_GET['appNo'].'" and awsEventName="All" and userId='.$_SESSION['user_id'].' '.$limit)->result_array();
                    }
                    $page_data['paginationCtrls'] = '';     
                    if($last != 1){
                        if ($pagenum > 1) {
                            $previous = $pagenum - 1;
                            $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageGallery?type=missing&pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                     
                            for($i = $pagenum-4; $i < $pagenum; $i++){
                                if($i > 0){
                                    $paginationCtrls .= '<a href="'.base_url().'NonKyc/manageGallery?type=missing&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                }
                            }
                        }
                     
                        $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
                     
                        for($i = $pagenum+1; $i <= $last; $i++){
                            $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageGallery?type=missing&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                            if($i >= $pagenum+4){
                                break;
                            }
                        }
                     
                        if ($pagenum != $last) {
                            $next = $pagenum + 1;
                            $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manageGallery?type=missing&pn='.$next.'" class="btn btn-default">Next</a> ';
                        }
                    }
                    $this->load->view('nonkyc/index', $page_data);
                }
            }
        } else {
            redirect(base_url(),'refresh');
        }
    }

    function manageDraft()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'manageDraft';
            if($_GET['type'] == 'unknown')
            {
                if(!isset($_GET['appNo']))
                {
                    $page_data['data'] = $this->db->query('select * from unknown_person where isFinalSubmitted=0 and isKyc=0 and awsEventName="Unknown" and userId='.$_SESSION['user_id'])->result_array();
                }else{
                    $page_data['data'] = $this->db->query('select * from unknown_person where Application_no="'.$_GET['appNo'].'" and isKyc=0 and awsEventName="Unknown" and userId='.$_SESSION['user_id'])->result_array();
                }
                $page_data['rows'] = count($page_data['data']);
                $page_rows = 100;
             
                $last = ceil($page_data['rows']/$page_rows);
             
                if($last < 1){
                    $last = 1;
                }
             
                $pagenum = 1;
             
                if(isset($_GET['pn'])){
                    $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
                }
             
                if ($pagenum < 1) { 
                    $pagenum = 1; 
                } 
                else if ($pagenum > $last) { 
                    $pagenum = $last; 
                }
             
                $limit = 'LIMIT ' .($pagenum - 1) * $page_rows .',' .$page_rows;
                if(!isset($_GET['appNo']))
                {
                    $page_data['data']=$this->db->query('select * from unknown_person where isFinalSubmitted=0 and isKyc=0 and awsEventName="Unknown" and userId='.$_SESSION['user_id'].' order by dateCreated desc '.$limit)->result_array();
                }else{
                    $page_data['data']=$this->db->query('select * from unknown_person where isFinalSubmitted=0 and isKyc=0 and Application_no="'.$_GET['appNo'].'" and awsEventName="Unknown" and userId='.$_SESSION['user_id'].' order by dateCreated desc '.$limit)->result_array();
                }
                $page_data['paginationCtrls'] = '';     
                if($last != 1){
                    if ($pagenum > 1) {
                        $previous = $pagenum - 1;
                        $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraft?type=unknown&pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                 
                        for($i = $pagenum-4; $i < $pagenum; $i++){
                            if($i > 0){
                                $paginationCtrls .= '<a href="'.base_url().'NonKyc/manageDraft?type=unknown&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                            }
                        }
                    }
                 
                    $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
                 
                    for($i = $pagenum+1; $i <= $last; $i++){
                        $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraft?type=unknown&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                        if($i >= $pagenum+4){
                            break;
                        }
                    }
                 
                    if ($pagenum != $last) {
                        $next = $pagenum + 1;
                        $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manageDraft?type=unknown&pn='.$next.'" class="btn btn-default">Next</a> ';
                    }
                }
                $this->load->view('nonkyc/index', $page_data);
            }else{
                if($_GET['type'] == 'missing')
                {
                    if(!isset($_GET['appNo']))
                    {
                        $page_data['data'] = $this->db->query('select * from unknown_person where isFinalSubmitted=0 and isKyc=0 and awsEventName="All" and userId='.$_SESSION['user_id'])->result_array();
                    }else{
                        $page_data['data'] = $this->db->query('select * from unknown_person where isFinalSubmitted=0 and isKyc=0 and Application_no="'.$_GET['appNo'].'" and awsEventName="All" and userId='.$_SESSION['user_id'])->result_array();
                    }
                    $page_data['rows'] = count($page_data['data']);
                    $page_rows = 100;
                 
                    $last = ceil($page_data['rows']/$page_rows);
                 
                    if($last < 1){
                        $last = 1;
                    }
                 
                    $pagenum = 1;
                 
                    if(isset($_GET['pn'])){
                        $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
                    }
                 
                    if ($pagenum < 1) { 
                        $pagenum = 1; 
                    } 
                    else if ($pagenum > $last) { 
                        $pagenum = $last; 
                    }
                 
                    $limit = 'LIMIT ' .($pagenum - 1) * $page_rows .',' .$page_rows;
                    if(!isset($_GET['appNo']))
                    {
                        $page_data['data'] = $this->db->query('select * from unknown_person where isFinalSubmitted=0 and isKyc=0 and awsEventName="All" and userId='.$_SESSION['user_id'].' order by dateCreated desc '.$limit)->result_array();
                    }else{
                        $page_data['data'] = $this->db->query('select * from unknown_person where isFinalSubmitted=0 and isKyc=0 and Application_no="'.$_GET['appNo'].'" and awsEventName="All" and userId='.$_SESSION['user_id'].' order by dateCreated desc '.$limit)->result_array();
                    }
                    $page_data['paginationCtrls'] = '';     
                    if($last != 1){
                        if ($pagenum > 1) {
                            $previous = $pagenum - 1;
                            $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraft?type=missing&pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                     
                            for($i = $pagenum-4; $i < $pagenum; $i++){
                                if($i > 0){
                                    $paginationCtrls .= '<a href="'.base_url().'NonKyc/manageDraft?type=missing&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                }
                            }
                        }
                     
                        $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
                     
                        for($i = $pagenum+1; $i <= $last; $i++){
                            $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraft?type=missing&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                            if($i >= $pagenum+4){
                                break;
                            }
                        }
                     
                        if ($pagenum != $last) {
                            $next = $pagenum + 1;
                            $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manageDraft?type=missing&pn='.$next.'" class="btn btn-default">Next</a> ';
                        }
                    }
                    $this->load->view('nonkyc/index', $page_data);
                }else{
                    if($_GET['type'] == 'mahakumbh')
                    {
                        $page_data['data'] = $this->db->query('select * from mahakumbhMember where isKyc=0 and isFinalSubmitted=0 and parentId='.$_SESSION['user_id'])->result_array();
                        $page_data['rows'] = count($page_data['data']);
                        $page_rows = 100;
                     
                        $last = ceil($page_data['rows']/$page_rows);
                     
                        if($last < 1){
                            $last = 1;
                        }
                     
                        $pagenum = 1;
                     
                        if(isset($_GET['pn'])){
                            $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
                        }
                     
                        if ($pagenum < 1) { 
                            $pagenum = 1; 
                        } 
                        else if ($pagenum > $last) { 
                            $pagenum = $last; 
                        }
                     
                        $limit = 'LIMIT ' .($pagenum - 1) * $page_rows .',' .$page_rows;
                        $page_data['data'] = $this->db->query('select * from mahakumbhMember where isKyc=0 and isFinalSubmitted=0 and parentId='.$_SESSION['user_id'].' order by dateCreated desc '.$limit)->result_array();
                        $page_data['paginationCtrls'] = '';     
                        if($last != 1){
                            if ($pagenum > 1) {
                                $previous = $pagenum - 1;
                                $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraft?type=mahakumbh&pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                         
                                for($i = $pagenum-4; $i < $pagenum; $i++){
                                    if($i > 0){
                                        $paginationCtrls .= '<a href="'.base_url().'NonKyc/manageDraft?type=mahakumbh&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                    }
                                }
                            }
                         
                            $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
                         
                            for($i = $pagenum+1; $i <= $last; $i++){
                                $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraft?type=mahakumbh&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                if($i >= $pagenum+4){
                                    break;
                                }
                            }
                         
                            if ($pagenum != $last) {
                                $next = $pagenum + 1;
                                $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manageDraft?type=mahakumbh&pn='.$next.'" class="btn btn-default">Next</a> ';
                            }
                        }
                        $this->load->view('nonkyc/index', $page_data);
                    }else{
                        if($_GET['type'] == 'funnelmissing')
                        {
                            if(!isset($_GET['appNo']))
                            {
                                $page_data['data'] = $this->db->query('select * from funnel_missing where isFinalSubmitted=0 and userId='.$_SESSION['user_id'])->result_array();
                            }else{
                                $page_data['data'] = $this->db->query('select * from funnel_missing where isFinalSubmitted=0 and Application_no="'.$_GET['appNo'].'" and userId='.$_SESSION['user_id'])->result_array();
                            }
                            $page_data['rows'] = count($page_data['data']);
                            $page_rows = 100;
                         
                            $last = ceil($page_data['rows']/$page_rows);
                         
                            if($last < 1){
                                $last = 1;
                            }
                         
                            $pagenum = 1;
                         
                            if(isset($_GET['pn'])){
                                $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
                            }
                         
                            if ($pagenum < 1) { 
                                $pagenum = 1; 
                            } 
                            else if ($pagenum > $last) { 
                                $pagenum = $last; 
                            }
                         
                            $limit = 'LIMIT ' .($pagenum - 1) * $page_rows .',' .$page_rows;
                            $page_data['data'] = $this->db->query('select * from funnel_missing where isFinalSubmitted=0 and userId='.$_SESSION['user_id'].' order by dateCreated desc '.$limit)->result_array();
                            $page_data['paginationCtrls'] = '';     
                            if($last != 1){
                                if ($pagenum > 1) {
                                    $previous = $pagenum - 1;
                                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraft?type=funnelmissing&pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                             
                                    for($i = $pagenum-4; $i < $pagenum; $i++){
                                        if($i > 0){
                                            $paginationCtrls .= '<a href="'.base_url().'NonKyc/manageDraft?type=funnelmissing&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                        }
                                    }
                                }
                             
                                $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
                             
                                for($i = $pagenum+1; $i <= $last; $i++){
                                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraft?type=funnelmissing&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                    if($i >= $pagenum+4){
                                        break;
                                    }
                                }
                             
                                if ($pagenum != $last) {
                                    $next = $pagenum + 1;
                                    $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manageDraft?type=funnelmissing&pn='.$next.'" class="btn btn-default">Next</a> ';
                                }
                            }
                            $page_data['page_name'] = 'manageFunnelDraft';
                            $this->load->view('nonkyc/index', $page_data);
                        }else{
                            if($_GET['type'] == 'funnelfamily')
                            {
                                $page_data['data'] = $this->db->query('select * from funnelfamily where isFinalSubmitted=0 and parentId='.$_SESSION['user_id'])->result_array();
                                $page_data['rows'] = count($page_data['data']);
                                $page_rows = 100;
                             
                                $last = ceil($page_data['rows']/$page_rows);
                             
                                if($last < 1){
                                    $last = 1;
                                }
                             
                                $pagenum = 1;
                             
                                if(isset($_GET['pn'])){
                                    $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
                                }
                             
                                if ($pagenum < 1) { 
                                    $pagenum = 1; 
                                } 
                                else if ($pagenum > $last) { 
                                    $pagenum = $last; 
                                }
                             
                                $limit = 'LIMIT ' .($pagenum - 1) * $page_rows .',' .$page_rows;
                                $page_data['data'] = $this->db->query('select * from funnelfamily where isFinalSubmitted=0 and parentId='.$_SESSION['user_id'].' order by dateCreated desc '.$limit)->result_array();
                                $page_data['paginationCtrls'] = '';     
                                if($last != 1){
                                    if ($pagenum > 1) {
                                        $previous = $pagenum - 1;
                                        $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraft?type=funnelfamily&pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                                 
                                        for($i = $pagenum-4; $i < $pagenum; $i++){
                                            if($i > 0){
                                                $paginationCtrls .= '<a href="'.base_url().'NonKyc/manageDraft?type=funnelfamily&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                            }
                                        }
                                    }
                                 
                                    $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
                                 
                                    for($i = $pagenum+1; $i <= $last; $i++){
                                        $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraft?type=funnelfamily&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                        if($i >= $pagenum+4){
                                            break;
                                        }
                                    }
                                 
                                    if ($pagenum != $last) {
                                        $next = $pagenum + 1;
                                        $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manageDraft?type=funnelfamily&pn='.$next.'" class="btn btn-default">Next</a> ';
                                    }
                                }
                                $page_data['page_name'] = 'manageFunnelDraft';
                                $this->load->view('nonkyc/index', $page_data);
                            }else{
                                if($_GET['type'] == 'bothfamily')
                                {
                                    $page_data['data'] = $this->db->query('SELECT * FROM ( (SELECT id, person_name, aadharNumber, Age, Gender, dob, isFinalSubmitted, Photo, dateCreated, parentId, activeStatus, expiryDate, "family" AS type, NULL AS paymentStatus, NULL AS isKyc FROM familyMember WHERE parentId = '.$_SESSION['user_id'].' and expiryDate is not null and Photo is not null ORDER BY dateCreated DESC LIMIT 1000000) UNION ALL (SELECT id, person_name, aadharNumber, Age, Gender, dob, isFinalSubmitted, Photo, dateCreated, parentId, activeStatus, expiryDate, "funnel_family" AS type, NULL AS paymentStatus, NULL AS isKyc FROM funnelfamily WHERE parentId = '.$_SESSION['user_id'].' ORDER BY dateCreated DESC LIMIT 1000000)) AS combined_data where isFinalSubmitted = 0 ORDER BY dateCreated DESC;')->result_array();
                                    $page_data['rows'] = count($page_data['data']);
                                    $page_rows = 15;
                                 
                                    $last = ceil($page_data['rows']/$page_rows);

                                    if($last < 1){
                                        $last = 1;
                                    }
                                 
                                    $pagenum = 1;
                                 
                                    if(isset($_GET['pn'])){
                                        $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
                                    }
                                 
                                    if ($pagenum < 1) { 
                                        $pagenum = 1; 
                                    } 
                                    else if ($pagenum > $last) { 
                                        $pagenum = $last; 
                                    }
                                    $page_data['data'] = $this->db->query('SELECT * FROM ( (SELECT id, person_name, aadharNumber, Age, Gender, dob, isFinalSubmitted, Photo, dateCreated, parentId, activeStatus, expiryDate, "family" AS type, NULL AS paymentStatus, NULL AS isKyc FROM familyMember WHERE parentId = '.$_SESSION['user_id'].' and expiryDate is not null and Photo is not null ORDER BY dateCreated DESC LIMIT 1000000) UNION ALL (SELECT id, person_name, aadharNumber, Age, Gender, dob, isFinalSubmitted, Photo, dateCreated, parentId, activeStatus, expiryDate, "funnel_family" AS type, NULL AS paymentStatus, NULL AS isKyc FROM funnelfamily WHERE parentId = '.$_SESSION['user_id'].' ORDER BY dateCreated DESC LIMIT 1000000)) AS combined_data where isFinalSubmitted = 0 ORDER BY dateCreated DESC LIMIT '.$page_rows.' offset '.(($pagenum - 1) * $page_rows).';')->result_array();
                                    $page_data['paginationCtrls'] = '';     
                                    if($last != 1){
                                        if ($pagenum > 1) {
                                            $previous = $pagenum - 1;
                                            $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraft?type=bothfamily&pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                                     
                                            for($i = $pagenum-4; $i < $pagenum; $i++){
                                                if($i > 0){
                                                    $paginationCtrls .= '<a href="'.base_url().'NonKyc/manageDraft?type=bothfamily&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                                }
                                            }
                                        }
                                     
                                        $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
                                     
                                        for($i = $pagenum+1; $i <= $last; $i++){
                                            $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraft?type=bothfamily&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                            if($i >= $pagenum+4){
                                                break;
                                            }
                                        }
                                     
                                        if ($pagenum != $last) {
                                            $next = $pagenum + 1;
                                            $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manageDraft?type=bothfamily&pn='.$next.'" class="btn btn-default">Next</a> ';
                                        }
                                    }
                                    $page_data['page_name'] = 'manageBothDraft';
                                    $this->load->view('nonkyc/index', $page_data);
                                }else{
                                    if($_GET['type'] == 'bothmissing')
                                    {
                                        if(isset($_GET['appNo']))
                                        {
                                            $page_data['data'] = $this->db->query('SELECT * FROM ( (SELECT id, Application_no, person_name, aadharNumber, Age, Gender, dob, missingDate, Message, isFinalSubmitted, Photo, dateCreated, userId, isFound, expiryDate, "funnel_missing" AS type, NULL AS isFree, NULL AS rescueDate, NULL AS isFromUpload, NULL AS awsEventName, NULL AS isKyc FROM funnel_missing WHERE userId = '.$_SESSION['user_id'].' ORDER BY dateCreated DESC LIMIT 1000000) UNION ALL (SELECT id, Application_no, person_name, aadharNumber, Age, Gender, dob, missingDate, Message, isFinalSubmitted, Photo, dateCreated, userId, isFound, expiryDate, "missing" AS type, NULL AS isFree, NULL AS rescueDate, NULL AS isFromUpload, NULL AS awsEventName, NULL AS isKyc FROM unknown_person WHERE Photo is not null and awsEventName = "All" AND userId = '.$_SESSION['user_id'].' AND isKyc = 0 ORDER BY dateCreated DESC LIMIT 1000000)) AS combined_data where isFinalSubmitted = 0 and Application_no="'.$_GET['appNo'].'" ORDER BY dateCreated DESC;')->result_array();
                                        }else{
                                            $page_data['data'] = $this->db->query('SELECT * FROM ( (SELECT id, Application_no, person_name, aadharNumber, Age, Gender, dob, missingDate, Message, isFinalSubmitted, Photo, dateCreated, userId, isFound, expiryDate, "funnel_missing" AS type, NULL AS isFree, NULL AS rescueDate, NULL AS isFromUpload, NULL AS awsEventName, NULL AS isKyc FROM funnel_missing WHERE userId = '.$_SESSION['user_id'].' ORDER BY dateCreated DESC LIMIT 1000000) UNION ALL (SELECT id, Application_no, person_name, aadharNumber, Age, Gender, dob, missingDate, Message, isFinalSubmitted, Photo, dateCreated, userId, isFound, expiryDate, "missing" AS type, NULL AS isFree, NULL AS rescueDate, NULL AS isFromUpload, NULL AS awsEventName, NULL AS isKyc FROM unknown_person WHERE Photo is not null and awsEventName = "All" AND userId = '.$_SESSION['user_id'].' AND isKyc = 0 ORDER BY dateCreated DESC LIMIT 1000000)) AS combined_data where isFinalSubmitted = 0 ORDER BY dateCreated DESC;')->result_array();
                                        }
                                        $page_data['rows'] = count($page_data['data']);
                                        $page_rows = 15;
                                     
                                        $last = ceil($page_data['rows']/$page_rows);

                                        if($last < 1){
                                            $last = 1;
                                        }
                                     
                                        $pagenum = 1;
                                     
                                        if(isset($_GET['pn'])){
                                            $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
                                        }
                                     
                                        if ($pagenum < 1) { 
                                            $pagenum = 1; 
                                        } 
                                        else if ($pagenum > $last) { 
                                            $pagenum = $last; 
                                        }
                                        if(isset($_GET['appNo']))
                                        {
                                            $page_data['data'] = $this->db->query('SELECT * FROM ( (SELECT id, Application_no, person_name, aadharNumber, Age, Gender, dob, missingDate, Message, isFinalSubmitted, Photo, dateCreated, userId, isFound, expiryDate, "funnel_missing" AS type, NULL AS isFree, NULL AS rescueDate, NULL AS isFromUpload, NULL AS awsEventName, NULL AS isKyc FROM funnel_missing WHERE userId = '.$_SESSION['user_id'].' ORDER BY dateCreated DESC LIMIT 1000000) UNION ALL (SELECT id, Application_no, person_name, aadharNumber, Age, Gender, dob, missingDate, Message, isFinalSubmitted, Photo, dateCreated, userId, isFound, expiryDate, "missing" AS type, NULL AS isFree, NULL AS rescueDate, NULL AS isFromUpload, NULL AS awsEventName, NULL AS isKyc FROM unknown_person WHERE Photo is not null and awsEventName = "All" AND userId = '.$_SESSION['user_id'].' AND isKyc = 0 ORDER BY dateCreated DESC LIMIT 1000000)) AS combined_data where Application_no="'.$_GET['appNo'].'" and isFinalSubmitted = 0 ORDER BY dateCreated DESC;')->result_array();
                                        }else{
                                            $page_data['data'] = $this->db->query('SELECT * FROM ( (SELECT id, Application_no, person_name, aadharNumber, Age, Gender, dob, missingDate, Message, isFinalSubmitted, Photo, dateCreated, userId, isFound, expiryDate, "funnel_missing" AS type, NULL AS isFree, NULL AS rescueDate, NULL AS isFromUpload, NULL AS awsEventName, NULL AS isKyc FROM funnel_missing WHERE userId = '.$_SESSION['user_id'].' ORDER BY dateCreated DESC LIMIT 1000000) UNION ALL (SELECT id, Application_no, person_name, aadharNumber, Age, Gender, dob, missingDate, Message, isFinalSubmitted, Photo, dateCreated, userId, isFound, expiryDate, "missing" AS type, NULL AS isFree, NULL AS rescueDate, NULL AS isFromUpload, NULL AS awsEventName, NULL AS isKyc FROM unknown_person WHERE Photo is not null and awsEventName = "All" AND userId = '.$_SESSION['user_id'].' AND isKyc = 0 ORDER BY dateCreated DESC LIMIT 1000000)) AS combined_data where isFinalSubmitted = 0 ORDER BY dateCreated DESC LIMIT '.$page_rows.' offset '.(($pagenum - 1) * $page_rows).';')->result_array();
                                        }
                                        $page_data['paginationCtrls'] = '';     
                                        if($last != 1){
                                            if ($pagenum > 1) {
                                                $previous = $pagenum - 1;
                                                $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraft?type=bothmissing&pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                                         
                                                for($i = $pagenum-4; $i < $pagenum; $i++){
                                                    if($i > 0){
                                                        $paginationCtrls .= '<a href="'.base_url().'NonKyc/manageDraft?type=bothmissing&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                                    }
                                                }
                                            }
                                         
                                            $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
                                         
                                            for($i = $pagenum+1; $i <= $last; $i++){
                                                $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraft?type=bothmissing&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                                if($i >= $pagenum+4){
                                                    break;
                                                }
                                            }
                                         
                                            if ($pagenum != $last) {
                                                $next = $pagenum + 1;
                                                $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manageDraft?type=bothmissing&pn='.$next.'" class="btn btn-default">Next</a> ';
                                            }
                                        }
                                        $page_data['page_name'] = 'manageBothDraft';
                                        $this->load->view('nonkyc/index', $page_data);
                                    }else{
                                        $page_data['data'] = $this->db->query('select * from familyMember where isKyc=0 and isFinalSubmitted=0 and parentId='.$_SESSION['user_id'])->result_array();
                                        $page_data['rows'] = count($page_data['data']);
                                        $page_rows = 100;
                                     
                                        $last = ceil($page_data['rows']/$page_rows);
                                     
                                        if($last < 1){
                                            $last = 1;
                                        }
                                     
                                        $pagenum = 1;
                                     
                                        if(isset($_GET['pn'])){
                                            $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
                                        }
                                     
                                        if ($pagenum < 1) { 
                                            $pagenum = 1; 
                                        } 
                                        else if ($pagenum > $last) { 
                                            $pagenum = $last; 
                                        }
                                     
                                        $limit = 'LIMIT ' .($pagenum - 1) * $page_rows .',' .$page_rows;
                                        $page_data['data'] = $this->db->query('select * from familyMember where isKyc=0 and isFinalSubmitted=0 and parentId='.$_SESSION['user_id'].' order by dateCreated desc '.$limit)->result_array();
                                        $page_data['paginationCtrls'] = '';     
                                        if($last != 1){
                                            if ($pagenum > 1) {
                                                $previous = $pagenum - 1;
                                                $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraft?type=family&pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                                         
                                                for($i = $pagenum-4; $i < $pagenum; $i++){
                                                    if($i > 0){
                                                        $paginationCtrls .= '<a href="'.base_url().'NonKyc/manageDraft?type=family&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                                    }
                                                }
                                            }
                                         
                                            $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
                                         
                                            for($i = $pagenum+1; $i <= $last; $i++){
                                                $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraft?type=family&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                                if($i >= $pagenum+4){
                                                    break;
                                                }
                                            }
                                         
                                            if ($pagenum != $last) {
                                                $next = $pagenum + 1;
                                                $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manageDraft?type=family&pn='.$next.'" class="btn btn-default">Next</a> ';
                                            }
                                        }
                                        $this->load->view('nonkyc/index', $page_data);
                                    }
                                }
                            }
                        }
                    }
                }
            }
        } else {
            redirect(base_url(),'refresh');
        }
    }

    function manageDraftNew()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'manageDraftNew';
            if($_GET['type'] == 'unknown')
            {
                if(!isset($_GET['appNo']))
                {
                    $page_data['data'] = $this->db->query('select * from unknown_person where isFinalSubmitted=0 and isKyc=0 and awsEventName="Unknown" and userId='.$_SESSION['user_id'])->result_array();
                }else{
                    $page_data['data'] = $this->db->query('select * from unknown_person where Application_no="'.$_GET['appNo'].'" and isKyc=0 and awsEventName="Unknown" and userId='.$_SESSION['user_id'])->result_array();
                }
                $page_data['rows'] = count($page_data['data']);
                $page_rows = 100;
             
                $last = ceil($page_data['rows']/$page_rows);
             
                if($last < 1){
                    $last = 1;
                }
             
                $pagenum = 1;
             
                if(isset($_GET['pn'])){
                    $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
                }
             
                if ($pagenum < 1) { 
                    $pagenum = 1; 
                } 
                else if ($pagenum > $last) { 
                    $pagenum = $last; 
                }
             
                $limit = 'LIMIT ' .($pagenum - 1) * $page_rows .',' .$page_rows;
                if(!isset($_GET['appNo']))
                {
                    $page_data['data']=$this->db->query('select * from unknown_person where isFinalSubmitted=0 and isKyc=0 and awsEventName="Unknown" and userId='.$_SESSION['user_id'].' order by dateCreated desc '.$limit)->result_array();
                }else{
                    $page_data['data']=$this->db->query('select * from unknown_person where isFinalSubmitted=0 and isKyc=0 and Application_no="'.$_GET['appNo'].'" and awsEventName="Unknown" and userId='.$_SESSION['user_id'].' order by dateCreated desc '.$limit)->result_array();
                }
                $page_data['paginationCtrls'] = '';     
                if($last != 1){
                    if ($pagenum > 1) {
                        $previous = $pagenum - 1;
                        $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraftNew?type=unknown&pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                 
                        for($i = $pagenum-4; $i < $pagenum; $i++){
                            if($i > 0){
                                $paginationCtrls .= '<a href="'.base_url().'NonKyc/manageDraftNew?type=unknown&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                            }
                        }
                    }
                 
                    $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
                 
                    for($i = $pagenum+1; $i <= $last; $i++){
                        $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraftNew?type=unknown&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                        if($i >= $pagenum+4){
                            break;
                        }
                    }
                 
                    if ($pagenum != $last) {
                        $next = $pagenum + 1;
                        $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manageDraftNew?type=unknown&pn='.$next.'" class="btn btn-default">Next</a> ';
                    }
                }
                $this->load->view('nonkyc/index', $page_data);
            }else{
                if($_GET['type'] == 'missing')
                {
                    if(!isset($_GET['appNo']))
                    {
                        $page_data['data'] = $this->db->query('select * from unknown_person where isFinalSubmitted=0 and isKyc=0 and awsEventName="All" and userId='.$_SESSION['user_id'])->result_array();
                    }else{
                        $page_data['data'] = $this->db->query('select * from unknown_person where isFinalSubmitted=0 and isKyc=0 and Application_no="'.$_GET['appNo'].'" and awsEventName="All" and userId='.$_SESSION['user_id'])->result_array();
                    }
                    $page_data['rows'] = count($page_data['data']);
                    $page_rows = 100;
                 
                    $last = ceil($page_data['rows']/$page_rows);
                 
                    if($last < 1){
                        $last = 1;
                    }
                 
                    $pagenum = 1;
                 
                    if(isset($_GET['pn'])){
                        $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
                    }
                 
                    if ($pagenum < 1) { 
                        $pagenum = 1; 
                    } 
                    else if ($pagenum > $last) { 
                        $pagenum = $last; 
                    }
                 
                    $limit = 'LIMIT ' .($pagenum - 1) * $page_rows .',' .$page_rows;
                    if(!isset($_GET['appNo']))
                    {
                        $page_data['data'] = $this->db->query('select * from unknown_person where isFinalSubmitted=0 and isKyc=0 and awsEventName="All" and userId='.$_SESSION['user_id'].' order by dateCreated desc '.$limit)->result_array();
                    }else{
                        $page_data['data'] = $this->db->query('select * from unknown_person where isFinalSubmitted=0 and isKyc=0 and Application_no="'.$_GET['appNo'].'" and awsEventName="All" and userId='.$_SESSION['user_id'].' order by dateCreated desc '.$limit)->result_array();
                    }
                    $page_data['paginationCtrls'] = '';     
                    if($last != 1){
                        if ($pagenum > 1) {
                            $previous = $pagenum - 1;
                            $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraftNew?type=unknown&pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                     
                            for($i = $pagenum-4; $i < $pagenum; $i++){
                                if($i > 0){
                                    $paginationCtrls .= '<a href="'.base_url().'NonKyc/manageDraftNew?type=unknown&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                }
                            }
                        }
                     
                        $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
                     
                        for($i = $pagenum+1; $i <= $last; $i++){
                            $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraftNew?type=unknown&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                            if($i >= $pagenum+4){
                                break;
                            }
                        }
                     
                        if ($pagenum != $last) {
                            $next = $pagenum + 1;
                            $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manageDraftNew?type=unknown&pn='.$next.'" class="btn btn-default">Next</a> ';
                        }
                    }
                    $this->load->view('nonkyc/index', $page_data);
                }else{
                    if($_GET['type'] == 'mahakumbh')
                    {
                        $page_data['data'] = $this->db->query('select * from mahakumbhMember where isKyc=0 and isFinalSubmitted=0 and parentId='.$_SESSION['user_id'])->result_array();
                        $page_data['rows'] = count($page_data['data']);
                        $page_rows = 100;
                     
                        $last = ceil($page_data['rows']/$page_rows);
                     
                        if($last < 1){
                            $last = 1;
                        }
                     
                        $pagenum = 1;
                     
                        if(isset($_GET['pn'])){
                            $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
                        }
                     
                        if ($pagenum < 1) { 
                            $pagenum = 1; 
                        } 
                        else if ($pagenum > $last) { 
                            $pagenum = $last; 
                        }
                     
                        $limit = 'LIMIT ' .($pagenum - 1) * $page_rows .',' .$page_rows;
                        $page_data['data'] = $this->db->query('select * from mahakumbhMember where isKyc=0 and isFinalSubmitted=0 and parentId='.$_SESSION['user_id'].' order by dateCreated desc '.$limit)->result_array();
                        $page_data['paginationCtrls'] = '';     
                        if($last != 1){
                            if ($pagenum > 1) {
                                $previous = $pagenum - 1;
                                $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraftNew?type=mahakumbh&pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                         
                                for($i = $pagenum-4; $i < $pagenum; $i++){
                                    if($i > 0){
                                        $paginationCtrls .= '<a href="'.base_url().'NonKyc/manageDraftNew?type=mahakumbh&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                    }
                                }
                            }
                         
                            $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
                         
                            for($i = $pagenum+1; $i <= $last; $i++){
                                $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraftNew?type=mahakumbh&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                if($i >= $pagenum+4){
                                    break;
                                }
                            }
                         
                            if ($pagenum != $last) {
                                $next = $pagenum + 1;
                                $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manageDraftNew?type=mahakumbh&pn='.$next.'" class="btn btn-default">Next</a> ';
                            }
                        }
                        $this->load->view('nonkyc/index', $page_data);
                    }else{
                        $page_data['data'] = $this->db->query('select * from familyMember where isKyc=0 and isFinalSubmitted=0 and parentId='.$_SESSION['user_id'])->result_array();
                        $page_data['rows'] = count($page_data['data']);
                        $page_rows = 100;
                     
                        $last = ceil($page_data['rows']/$page_rows);
                     
                        if($last < 1){
                            $last = 1;
                        }
                     
                        $pagenum = 1;
                     
                        if(isset($_GET['pn'])){
                            $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
                        }
                     
                        if ($pagenum < 1) { 
                            $pagenum = 1; 
                        } 
                        else if ($pagenum > $last) { 
                            $pagenum = $last; 
                        }
                     
                        $limit = 'LIMIT ' .($pagenum - 1) * $page_rows .',' .$page_rows;
                        $page_data['data'] = $this->db->query('select * from familyMember where isKyc=0 and isFinalSubmitted=0 and parentId='.$_SESSION['user_id'].' order by dateCreated desc '.$limit)->result_array();
                        $page_data['paginationCtrls'] = '';     
                        if($last != 1){
                            if ($pagenum > 1) {
                                $previous = $pagenum - 1;
                                $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraftNew?type=family&pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                         
                                for($i = $pagenum-4; $i < $pagenum; $i++){
                                    if($i > 0){
                                        $paginationCtrls .= '<a href="'.base_url().'NonKyc/manageDraftNew?type=family&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                    }
                                }
                            }
                         
                            $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
                         
                            for($i = $pagenum+1; $i <= $last; $i++){
                                $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manageDraftNew?type=family&pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                if($i >= $pagenum+4){
                                    break;
                                }
                            }
                         
                            if ($pagenum != $last) {
                                $next = $pagenum + 1;
                                $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manageDraftNew?type=family&pn='.$next.'" class="btn btn-default">Next</a> ';
                            }
                        }
                        $this->load->view('nonkyc/index', $page_data);
                    }
                }
            }
        } else {
            redirect(base_url(),'refresh');
        }
    }

    function handover()
    {
        if(isset($_SESSION['landingMob']))
        {
			if($_SESSION['user_id'] == 102)
			{
				$page_data['page_name'] = 'handover-new';
			}else{
				$page_data['page_name'] = 'handover';
			}
			$page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'login','refresh');
        }
    }
	
	function getApplicationDetails()
	{
		$getApplicationDetails = $this->db->query('select * from unknown_person where Application_no="'.$_POST['appNo'].'"')->result_array();
        if(count($getApplicationDetails) > 0)
        {
            $mobileNo = '';
            if($getApplicationDetails[0]['well1'] != NULL)
            {
                $mobileNo = $getApplicationDetails[0]['well1'];
            }else{
                if($getApplicationDetails[0]['well2'] != NULL)
                {
                    $mobileNo = $getApplicationDetails[0]['well2'];
                }else{
                    $mobileNo = $getApplicationDetails[0]['well3'];
                }
            }
            $aadharNumber = '';
            $thanaName = '';
            $thanaUsername = '';
            $username = '';
            if($getApplicationDetails[0]['userId'] != NULL)
            {
                $getUserDetail = $this->db->query('select * from user where uid='.$getApplicationDetails[0]['userId'])->result_array();
                $aadharNumber = $getUserDetail[0]['aadhar_id'];
                $username = $getUserDetail[0]['aadharname'];
            }else if($getApplicationDetails[0]['policeId'] != NULL)
            {
                $getUserDetail = $this->db->query('select * from police where police_id='.$getApplicationDetails[0]['policeId'])->result_array();
                $thanaName = $getUserDetail[0]['thanaName'];
                $thanaUsername = $getUserDetail[0]['username'];
            }else{
                $getUserDetail = $this->db->query('select * from ngo where Id='.$getApplicationDetails[0]['ngoId'])->result_array();
                $aadharNumber = $getUserDetail[0]['aadhar_id'];
                $username = $getUserDetail[0]['ngoName'];
            }
            $response = array(
                'status' => 'success',
                'appNo' => $_POST['appNo'],
                'username' => $username,
                'thanaName' => $thanaName,
                'thanaUsername' => $thanaUsername,
                'mobileNumber' => $mobileNo,
                'aadharNumber' => $aadharNumber,
                'closedmobileNumber' => substr_replace($mobileNo,'XXXXXXX',0,7),
                'closedAadharNumber' => ($aadharNumber != '' ? substr_replace($aadharNumber,'XXXX-XXXX-',0,8) : ''),
                'uploaded_by' => $getApplicationDetails[0]['uploaded_by']
            );
        }else{
            $response = array(
                'status' => 'error'
            );
        }
        echo json_encode($response);
	}

    function viewSearchDetail($id)
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['page_name'] = 'viewSearchDetail';
            $page_data['overallHistory'] = $this->db->query('select * from overallHistory where Id='.$id)->result_array();
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function searchHistory()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['page_name'] = 'searchHistory';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function uploadBulkUnknownData()
    {
        for($i=0;$i<51;$i++)
        {
            $data = $_POST["facematch"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = time().''.rand(0,10000);
            $mainphoto = 'upload/unknownperson/nonkyc/'.$imageId.'.'.$split1[1];
            file_put_contents($mainphoto, $data);
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcakhoji4",
                "image_id" => $imageId,
                "image_url" => base_url().''.$mainphoto
            ));
            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => $postdata,
              CURLOPT_HTTPHEADER => array(
                'Content-Type: application/json',
                'Authorization: '.$this->getSettings('facematchtoken')
              ),
            ));

            $response = json_decode(curl_exec($curl),true);
            curl_close($curl);
            if(count($response) > 0)
            {
                if($response['status'] == 200)
                {
                    if($response['face_count'] == 1)
                    {
                        $profileDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                        $Appli_no= $this->generateUnknownApplicationNumber();
                        $insertdata = array(
                            'dateCreated' => date('Y-m-d H:i:s A'),
                            'well1' => $profileDetail[0]['registration_mobile'],
                            'imageId' => $imageId,
                            'awsEventName' => 'Unknown',
                            'person_name' => $_POST['person_name'],
                            'Age' => $_POST['Age'],
                            'userId' => $_SESSION['user_id'],
                            'uploaded_by'=>'user',
                            'Photo' => $mainphoto,
                            'Application_no' =>  $Appli_no,
                            'Gender' => $_POST['Gender']
                        );
                        $in=$this->db->insert('unknown_person',$insertdata);
                        if($in)
                        {
                            $_SESSION['unknownId'] = $this->db->insert_id();
                            $getPreviousData = $this->db->query('select * from unknown_person where id='.$_SESSION['unknownId'])->result_array();
                            $profileDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
                            $updateData = array(
                                'well1' => ($profileDetail[0]['alternate_mobile1'] != NULL ? $profileDetail[0]['alternate_mobile1'] : NULL),
                                'isProfileContact1' =>($profileDetail[0]['alternate_mobile1'] != NULL ? 1 : 0)
                            );   
                            $this->db->where('id',$_SESSION['unknownId']);
                            $this->db->update('unknown_person',$updateData);
                            if($getPreviousData[0]['well2'] == NULL)
                            {
                                $updateData = array(
                                    'well2' => ($profileDetail[0]['alternate_mobile2'] != NULL ? $profileDetail[0]['alternate_mobile2'] : NULL),
                                    'isProfileContact2' =>($profileDetail[0]['alternate_mobile2'] != NULL ? 1 : 0)
                                );   
                                $this->db->where('id',$_SESSION['unknownId']);
                                $this->db->update('unknown_person',$updateData);
                            }
                            if($getPreviousData[0]['well3'] == NULL){
                                $updateData = array(
                                    'well3' => ($profileDetail[0]['alternate_mobile3'] != NULL ? $profileDetail[0]['alternate_mobile3'] : NULL),
                                    'isProfileContact3' =>($profileDetail[0]['alternate_mobile3'] != NULL ? 1 : 0)
                                );   
                                $this->db->where('id',$_SESSION['unknownId']);
                                $this->db->update('unknown_person',$updateData);
                            }
                            if($_POST['goldCount']  > 0)
                            {
                                for($i=1;$i<=$_POST['goldCount'];$i++)
                                {
                                    $goldData = array(
                                        'unknownId' => $_SESSION['unknownId'],
                                        'goldType' => $_POST['goldType'.$i],
                                        'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                    );
                                    $this->db->insert('unknownPersonGold',$goldData);
                                }
                            }
                            if($i == 50)
                            {
                                $response = array(
                                    'status' => 'success'
                                );
                                echo json_encode($response);
                            }
                        }
                    }else{
                        if($response['face_count'] > 1)
                        {
                            $finalresponse = array(
                                'status' => 'error',
                                'message' => 'Multiple faces detected in image'
                            );
                            echo json_encode($finalresponse);
                            die();
                        }else{
                            $finalresponse = array(
                                'status' => 'error',
                                'message' => 'No face found in the image'
                            );
                            echo json_encode($finalresponse);
                            die();
                        }
                    }
                }else{
                    $finalresponse = array(
                        'status' => 'error',
                        'message' => 'Please upload valid face match image'
                    );
                    echo json_encode($finalresponse);
                    die();
                }   
            }else{
                $finalresponse = array(
                    'status' => 'error',
                    'message' => 'Please upload valid face match image'
                );
                echo json_encode($finalresponse);
                die();
            }
        }
    }
    
    function markAsFound($id)
    {
        $update = $this->db->query('update missingperson set isFound=1 where Id='.$id);
    }
    
    function getSettings($name='gridlineKey')
    {
        $getSettings = $this->db->query('select * from settings where name="'.$name.'"')->result_array();
        return $getSettings[0]['value'];
    }

    function notification_history()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['notification'] = $this->db->query('select * from Notification where userId='.$_SESSION['user_id'].' order by Id desc')->result_array();
            $count = 100 - count($page_data['notification']);
            $page_data['searchnotification'] = $this->db->query('select * from searchnotification where status !="Active" and complainantUserType="NonKyc" and complainantUserId='.$_SESSION['user_id'].' order by Id desc limit '.$count)->result_array();
            $page_data['page_name'] = 'notification_history';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function view_all_notifications()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['notification'] = $this->db->query('select * from Notification where userId='.$_SESSION['user_id'].' order by Id desc')->result_array();
            $page_data['searchnotification'] = $this->db->query('select * from searchnotification where status="Active" and complainantUserType="NonKyc" and complainantUserId='.$_SESSION['user_id'].' order by Id desc')->result_array();
            $page_data['page_name'] = 'view_all_notifications';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'login','refresh');
        }   
    }

    function getAge()
    {
        $getAgeBands = $this->db->query('select * from ageBands where ageBand is not null')->result_array();
        $ageBand = '';
        if(count($getAgeBands) > 0)
        {
            foreach($getAgeBands as $k=>$v)
            {
                $explode = explode(',',$v['ages']);
                $age = $this->calculateAge($_POST['dob']);
                if(in_array($age,$explode))
                {
                    $ageBand = $v['ageBand'];
                    break;
                }
            }
        }
        $age = $this->calculateAge($_POST['dob']);
        $response = array(
            'status' => 'success',
            'ageBand' => $age,
            'age' => $ageBand
        );
        echo json_encode($response);
    }

    function getAgeBand()
    {
        $getAgeBands = $this->db->query('select * from ageBands where ageBand is not null')->result_array();
        $ageBand = '';
        if(count($getAgeBands) > 0)
        {
            foreach($getAgeBands as $k=>$v)
            {
                $explode = explode(',',$v['ages']);
                $age = $this->calculateAge($_POST['dob']);
                if(in_array($age,$explode))
                {
                    $ageBand = $v['ageBand'];
                    break;
                }
            }
        }
        if($ageBand == '')
        {
            $response = array(
                'status' => 'error'
            );
        }else{
            $response = array(
                'status' => 'success',
                'ageBand' => $ageBand
            );
        }
        echo json_encode($response);
    }

    function calculateAge($dob) {
        $dob = new DateTime($dob);
        $now = new DateTime();
        $age = $now->diff($dob);
        return $age->y; // Return years
    }
    
    function lapata_login()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['pn'] = 1;
            unset($_SESSION['previous_url']);
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page_name'] = 'upload_lapata';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function upload_unknown_details()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['pn'] = 1;
            unset($_SESSION['previous_url']);
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page_name'] = 'upload_unknown_details';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function upload_unknown_details_new()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['pn'] = 1;
            unset($_SESSION['previous_url']);
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page_name'] = 'upload_unknown_details_new';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function add_gold_details()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page_name'] = 'add_gold_details';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'login','refresh');
        }   
    }

    function addUserGold()
    {
        $this->db->where('goldHUIDNumber1', $_POST['goldId']);
        $this->db->or_where('goldHUIDNumber2', $_POST['goldId']);
        $this->db->or_where('goldHUIDNumber3', $_POST['goldId']);
        $getIfPersonAvailable = $this->db->get('user')->result_array();
        if(count($getIfPersonAvailable) > 0)
        {
            $isSameProfile = 0;
            foreach($getIfPersonAvailable as $k=>$v)
            {
                if($v['uid'] == $_SESSION['user_id'])
                {
                    $isSameProfile++;
                }
            }
            $response = array(
                'status' => 'already',
                'count' => count($getIfPersonAvailable),
                'inSameProfile' => $isSameProfile
            );
            echo json_encode($response);
        }
        else
        {
            if($_POST['count'] == 1)
            {
                $updateData = array(
                    'goldHUIDNumber1' => $_POST['goldId'],
                    'gold1Date' => date('Y-m-d H:i:s A')
                );
            }else if($_POST['count'] == 2)
            {
                $updateData = array(
                    'goldHUIDNumber2' => $_POST['goldId'],
                    'gold2Date' => date('Y-m-d H:i:s A')
                );
            }else{
                $updateData = array(
                    'goldHUIDNumber3' => $_POST['goldId'],
                    'gold3Date' => date('Y-m-d H:i:s A')
                );
            }
            $this->db->where('uid',$_SESSION['user_id']);
            $this->db->update('user',$updateData);
            $response = array(
                'status' => 'success',
            );
            echo json_encode($response);
        }
    }

    function deleteGold()
    {
        if($_POST['count'] == 1)
        {
            $updateData = array(
                'goldHUIDNumber1' => NULL,
                'gold1Date' => NULL
            );
        }else if($_POST['count'] == 2)
        {
            $updateData = array(
                'goldHUIDNumber2' => NULL,
                'gold2Date' => NULL
            );
        }else{
            $updateData = array(
                'goldHUIDNumber3' => NULL,
                'gold3Date' => NULL
            );
        }
        $this->db->where('uid',$_SESSION['user_id']);
        $this->db->update('user',$updateData);   
    }

    function deleteVehicle()
    {
        if($_POST['count'] == 1)
        {
            $updateData = array(
                'vehicleNumber1' => NULL,
                'vehicle1Date' => NULL
            );
        }else if($_POST['count'] == 2)
        {
            $updateData = array(
                'vehicleNumber2' => NULL,
                'vehicle2Date' => NULL
            );
        }else{
            $updateData = array(
                'vehicleNumber3' => NULL,
                'vehicle3Date' => NULL
            );
        }
        $this->db->where('uid',$_SESSION['user_id']);
        $this->db->update('user',$updateData);   
    }

    function addUserVehicle()
    {
        $this->db->where('vehicleNumber1', $_POST['vehicleId']);
        $this->db->or_where('vehicleNumber2', $_POST['vehicleId']);
        $this->db->or_where('vehicleNumber3', $_POST['vehicleId']);
        $getIfPersonAvailable = $this->db->get('user')->result_array();
        if(count($getIfPersonAvailable) > 0)
        {
            $isSameProfile = 0;
            foreach($getIfPersonAvailable as $k=>$v)
            {
                if($v['uid'] == $_SESSION['user_id'])
                {
                    $isSameProfile++;
                }
            }
            $response = array(
                'status' => 'already',
                'count' => count($getIfPersonAvailable),
                'inSameProfile' => $isSameProfile
            );
            echo json_encode($response);
        }else{
            if($_POST['count'] == 1)
            {
                $updateData = array(
                    'vehicleNumber1' => $_POST['vehicleId'],
                    'vehicle1Date' => date('Y-m-d H:i:s A')
                );
            }else if($_POST['count'] == 2)
            {
                $updateData = array(
                    'vehicleNumber2' => $_POST['vehicleId'],
                    'vehicle2Date' => date('Y-m-d H:i:s A')
                );
            }else{
                $updateData = array(
                    'vehicleNumber3' => $_POST['vehicleId'],
                    'vehicle3Date' => date('Y-m-d H:i:s A')
                );
            }
            $this->db->where('uid',$_SESSION['user_id']);
            $this->db->update('user',$updateData);
            $response = array(
                'status' => 'success',
            );
            echo json_encode($response);
        }
    }

    function add_vehicle_details()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page_name'] = 'add_vehicle_details';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function reactivateComplaint()
    {
        date_default_timezone_set("Asia/Kolkata");
        if($_POST['status'] == 1)
        {
            $this->db->query('update unknown_person set isFound=0 where id='.$_POST['id']);
        }else{
            $this->db->query('update unknown_person set isFound=1,closedDate="'.date('Y-m-d H:i:s').'" where id='.$_POST['id']);
        }
    }

    function reactivateFunnelComplaint()
    {
        date_default_timezone_set("Asia/Kolkata");
        if($_POST['status'] == 1)
        {
            $this->db->query('update funnel_missing set isFound=0 where id='.$_POST['id']);
        }else{
            $this->db->query('update funnel_missing set isFound=1 where id='.$_POST['id']);
        }
    }
    
    function uploadLapataPhoto()
    {
        if(isset($_POST['id']))
        {
            $data = $_POST["file"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = time().''.rand(0,10000);
            $mainphoto = 'upload/lapata/'.$imageId.'.'.$split1[1];
            file_put_contents($mainphoto, $data);
            if($_POST['isUploaded'] == 0)
            {
                $insertdata = array(
                    'photourl' => $mainphoto,
                    'unknownId' => $_POST['id']
                );
                $this->db->insert('unknownphotos',$insertdata);
            }else{
                $updatetdata = array(
                    'photourl' => $mainphoto,
                );
                $this->db->where('Id',$_POST['isUploaded']);
                $this->db->update('unknownphotos',$updatetdata);
            }
            $response = array(
                'status' => 'success',
                'message' => 'Photo Uploaded Successfully'
            );
            echo json_encode($response);     
        }else{
            $data = $_POST["file"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = time().''.rand(0,10000);
            $mainphoto = 'upload/lapata/'.$imageId.'.'.$split1[1];
            file_put_contents($mainphoto, $data);
            if($_POST['isUploaded'] == 0)
            {
                $insertdata = array(
                    'photourl' => $mainphoto,
                    'unknownId' => $_SESSION['unknownId']
                );
                $this->db->insert('unknownphotos',$insertdata);
            }else{
                $updatetdata = array(
                    'photourl' => $mainphoto,
                );
                $this->db->where('Id',$_POST['isUploaded']);
                $this->db->update('unknownphotos',$updatetdata);
            }
            $response = array(
                'status' => 'success',
                'message' => 'Photo Uploaded Successfully'
            );
            echo json_encode($response);  
        }
    }
    
    function finalUnknownSubmit()
    {
        $mainphoto1 = '';
        $mainphoto2 = '';
        $imageId1 = '';
        $imageId2 = '';
        $algoSentTime = date('Y-m-d H:i:s A');
        if($_POST['facematch1'] != '')
        {
            $data = $_POST["facematch1"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId1 = time().''.rand(0,10000);
            $mainphoto1 = 'upload/unknownperson/nonkyc/'.$imageId1.'.'.$split1[1];
            file_put_contents($mainphoto1, $data);
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcakhoji4",
                "image_id" => $imageId1,
                "image_url" => base_url().''.$mainphoto1
            ));
            curl_setopt_array($curl, array(
                CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                CURLOPT_RETURNTRANSFER => true,
                CURLOPT_ENCODING => '',
                CURLOPT_MAXREDIRS => 10,
                CURLOPT_TIMEOUT => 0,
                CURLOPT_FOLLOWLOCATION => true,
                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                CURLOPT_CUSTOMREQUEST => 'POST',
                CURLOPT_POSTFIELDS => $postdata,
                CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken')
                ),
            ));
            
            $response = json_decode(curl_exec($curl),true);
            
            if(count($response) > 0)
            {
                if($response['status'] == 200)
                {
                    if($response['face_count'] != 1)
                    {
                        if($response['face_count'] > 1)
                        {
                            $this->session->set_flashdata('error', 'Multiple faces detected in image');
                            return redirect( base_url().'NonKyc/upload_unknown_details');
                        }else{
                            $this->session->set_flashdata('error', 'No face found in the image');   
                            return redirect( base_url().'NonKyc/upload_unknown_details');
                        }
                    }
                }
            }
        }
        if($_POST['facematch2'] != '')
        {
            $data = $_POST["facematch2"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId2 = time().''.rand(0,10000);
            $mainphoto2 = 'upload/unknownperson/nonkyc/'.$imageId2.'.'.$split1[1];
            file_put_contents($mainphoto2, $data);
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcakhoji4",
                "image_id" => $imageId2,
                "image_url" => base_url().''.$mainphoto2
            ));
            curl_setopt_array($curl, array(
                CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                CURLOPT_RETURNTRANSFER => true,
                CURLOPT_ENCODING => '',
                CURLOPT_MAXREDIRS => 10,
                CURLOPT_TIMEOUT => 0,
                CURLOPT_FOLLOWLOCATION => true,
                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                CURLOPT_CUSTOMREQUEST => 'POST',
                CURLOPT_POSTFIELDS => $postdata,
                CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken')
                ),
            ));
            
            $response = json_decode(curl_exec($curl),true);   
            if(count($response) > 0)
            {
                if($response['status'] == 200)
                {
                    if($response['face_count'] != 1)
                    {
                        if($response['face_count'] > 1)
                        {
                            $this->session->set_flashdata('error', 'Multiple faces detected in image');
                            return redirect( base_url().'NonKyc/upload_unknown_details');
                        }else{
                            $this->session->set_flashdata('error', 'No face found in the image');   
                            return redirect( base_url().'NonKyc/upload_unknown_details');
                        }
                    }
                }
            }
        }
        $data = $_POST["facematch"];
        $image_array_1 = explode(";", $data);
        $split1 = explode('data:image/',$image_array_1[0]);
        $image_array_2 = explode(",", $image_array_1[1]);
        $data = base64_decode($image_array_2[1]);
        $imageId = time().''.rand(0,10000);
        $mainphoto = 'upload/unknownperson/nonkyc/'.$imageId.'.'.$split1[1];
        file_put_contents($mainphoto, $data);
        $curl = curl_init();
        $postdata = json_encode(array(
            "collection_id" => "shivaguptabcakhoji4",
            "image_id" => $imageId,
            "image_url" => base_url().''.$mainphoto
        ));
        curl_setopt_array($curl, array(
            CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => '',
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 0,
            CURLOPT_FOLLOWLOCATION => true,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => 'POST',
            CURLOPT_POSTFIELDS => $postdata,
            CURLOPT_HTTPHEADER => array(
                'Content-Type: application/json',
                'Authorization: '.$this->getSettings('facematchtoken')
            ),
        ));
        
        $response = json_decode(curl_exec($curl),true);
        curl_close($curl);
        if(count($response) > 0)
        {
            if($response['status'] == 200)
            {
                if($response['face_count'] == 1)
                {
                    $profileDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                    $Appli_no= $this->generateUnknownApplicationNumber();
                    $well1 = NULL;
                    $well2 = NULL;
                    $well3 = NULL;
                    $profileDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
					if($_SESSION['loginmob'] == $profileDetail[0]['registration_mobile'])
                    {
                        $well1 = $_SESSION['loginmob'];
                        if($profileDetail[0]['alternate_mobile1'] != NULL)
                        {
                            $well2 = $profileDetail[0]['alternate_mobile1'];
                        }else{
                            if($profileDetail[0]['alternate_mobile2'] != NULL)
                            {
                                $well2 = $profileDetail[0]['alternate_mobile2'];
                            }
                        }
                        if($well2 != NULL)
                        {
                            if($profileDetail[0]['alternate_mobile1'] != NULL)
                            {
                            }else{
                                if($profileDetail[0]['alternate_mobile2'] != NULL)
                                {
                                    $well3 = $profileDetail[0]['alternate_mobile2'];
                                }else{
                                    if($profileDetail[0]['alternate_mobile3'] != NULL)
                                    {
                                        $well3 = $profileDetail[0]['alternate_mobile3'];
                                    }
                                }
                            }
                        }
                    }else{
                        if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile1'])
                        {
                            $well1 = $profileDetail[0]['alternate_mobile1'];
                            $well2 = $profileDetail[0]['registration_mobile'];
                            if($profileDetail[0]['alternate_mobile2'] != NULL)
                            {
                                $well3 = $profileDetail[0]['alternate_mobile2'];
                            }else{
                                if($profileDetail[0]['alternate_mobile3'] != NULL)
                                {
                                    $well3 = $profileDetail[0]['alternate_mobile3'];
                                }
                            }
                        }else{
                            if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile2'])
                            {
                                $well1 = $profileDetail[0]['alternate_mobile2'];
                                $well2 = $profileDetail[0]['registration_mobile'];
                                if($profileDetail[0]['alternate_mobile1'] != NULL)
                                {
                                    $well3 = $profileDetail[0]['alternate_mobile1'];
                                }else{
                                    if($profileDetail[0]['alternate_mobile3'] != NULL)
                                    {
                                        $well3 = $profileDetail[0]['alternate_mobile3'];
                                    }
                                }
                            }else{
                                if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile3'])
                                {
                                    $well1 = $profileDetail[0]['alternate_mobile3'];
                                    $well2 = $profileDetail[0]['registration_mobile'];
                                    if($profileDetail[0]['alternate_mobile1'] != NULL)
                                    {
                                        $well3 = $profileDetail[0]['alternate_mobile1'];
                                    }else{
                                        if($profileDetail[0]['alternate_mobile2'] != NULL)
                                        {
                                            $well3 = $profileDetail[0]['alternate_mobile2'];
                                        }
                                    }
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'well1' => $well1,
                        'well2' => $well2,
                        'well3' => $well3,
                        'isFinalSubmitted' => 1,
                        'imageId' => $imageId,
                        'imageId1' => ($imageId1 != '' ? $imageId1 : NULL),
                        'imageId2' => ($imageId2 != '' ? $imageId2 : NULL),
                        'awsEventName' => 'Unknown',
                        'aadharNumber' => $_POST['aadharNumber'],
                        'dateCreated' => date('Y-m-d H:i:s A'),
                        'PAN' => $_POST['PAN'],
                        'DL_no' => $_POST['DL_no'],
                        'voter_id' => $_POST['voter_id'],
                        'person_name' => $_POST['person_name'],
                        'Religion' => $_POST['Religion'],
                        'vehicle_no' => $_POST['vehicle_no'],
                        'state' => $_POST['state'],
                        'district' => $_POST['district'],
                        'city' => $_POST['city'],
                        'Age' => $_POST['Age'],
                        'userId' => $_SESSION['user_id'],
                        'isKyc' => 0,
                        'finalSubmitTime' => date('Y-m-d H:i:s A'),
                        'uploaded_by'=>'user',
                        'Height' => $_POST['Height'],
                        'Mental_status' => $_POST['Mental'],
                        'Message' => $_POST['Message'],
                        'vehicle_no' => $_POST['vehicle_no'],
                        'Photo' => $mainphoto,
                        'Photo1' => ($mainphoto1 != '' ? $mainphoto1 : NULL),
                        'Photo2' => ($mainphoto2 != '' ? $mainphoto2 : NULL),
                        'Application_no' =>  $Appli_no,
                        'Gender' => $_POST['Gender']
                    );
                    $in=$this->db->insert('unknown_person',$insertdata);
                    if($in)
                    {
                        $_SESSION['unknownId'] = $unkwownId = $this->db->insert_id();
                        $vectorizerData = array(
                            'unknownId' => $unkwownId,
                            'imageStatus' => 'Pending',
                            'uploadTime' => $insertdata['dateCreated'],
                            'isUpload' => 1
                        );
                        $this->db->insert('indexer',$vectorizerData);
                        if($_POST['goldCount']  > 0)
                        {
                            for($i=1;$i<=$_POST['goldCount'];$i++)
                            {
                                $goldData = array(
                                    'unknownId' => $_SESSION['unknownId'],
                                    'goldType' => $_POST['goldType'.$i],
                                    'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                );
                                $this->db->insert('unknownPersonGold',$goldData);
                            }
                        }
                        $finalresponse = array(
                            'status' => 'success',
                            'applicationNumber' => $Appli_no
                        );
                        echo json_encode($finalresponse);
                    }
                    else
                    {
                        $finalresponse = array(
                            'status' => 'error',
                            'message' => 'No Insert Try Again.'
                        );
                        echo json_encode($finalresponse);
                    }
                }else{
                    if($response['face_count'] > 1)
                    {
                        $finalresponse = array(
                            'status' => 'error',
                            'message' => 'Multiple faces detected in image'
                        );
                        echo json_encode($finalresponse);
                    }else{
                        $finalresponse = array(
                            'status' => 'error',
                            'message' => 'No face found in the image'
                        );
                        echo json_encode($finalresponse);
                    }
                }
            }
            else
            {
                $finalresponse = array(
                    'status' => 'error',
                    'message' => 'Please upload valid face match image'
                );
                echo json_encode($finalresponse);
            }   
        }
        else
        {
            $finalresponse = array(
                'status' => 'error',
                'message' => 'Please upload valid face match image'
            );
            echo json_encode($finalresponse);
        }
    }
    
    function updateContact()
    {
        if(isset($_POST['id']))
        {
            $getPreviousData = $this->db->query('select * from unknown_person where id='.$_POST['id'])->result_array();
            $profileDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
            if($getPreviousData[0]['well1'] == NULL)
            {
                $updateData = array(
                    'rewardamount' => $_POST['rewardAmount'],
                    'isFinalSubmitted' => 1,
                    'finalSubmitTime' => date('Y-m-d h:i:s A')
                );   
                $this->db->where('id',$_POST['id']);
                $this->db->update('unknown_person',$updateData);
            }else{
                $updateData = array(
                    'rewardamount' => $_POST['rewardAmount'],
                    'isFinalSubmitted' => 1,
                    'finalSubmitTime' => date('Y-m-d h:i:s A')
                );   
                $this->db->where('id',$_POST['id']);
                $this->db->update('unknown_person',$updateData);
            }
            $vectorizerData = array(
                'unknownId' => $getPreviousData[0]['id'],
                'imageStatus' => 'Pending',
                'uploadTime' => date('Y-m-d H:i:s A'),
                'isUpload' => 0
            );
            $this->db->insert('indexer',$vectorizerData);
        }else{
            $getPreviousData = $this->db->query('select * from unknown_person where id='.$_SESSION['unknownId'])->result_array();
            $profileDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
            $updateData = array(
                'rewardamount' => $_POST['rewardAmount'],
                'isFinalSubmitted' => 1,
                'finalSubmitTime' => date('Y-m-d h:i:s A')
            );   
            $this->db->where('id',$_SESSION['unknownId']);
            $this->db->update('unknown_person',$updateData);
            $vectorizerData = array(
                'unknownId' => $getPreviousData[0]['id'],
                'imageStatus' => 'Pending',
                'uploadTime' => date('Y-m-d H:i:s A'),
                'isUpload' => 1
            );
            $this->db->insert('indexer',$vectorizerData);
        }
        echo "Details Updated Successfully - ".$getPreviousData[0]['Application_no'];
        die();
    }
	
	function getLapataDetails()
    {
        $personName = '';
        $panNumber = '';
        $voterId = '';
        $dlNumber = '';
        $gender = '';
        $photo = base_url().'assets/images/faceicon.png';
        $state = '';
        $dob = '';
        $ageBand = '';
        $height = '';
        $religion = '';
        $district = '';
        $city = '';
        $getIfAlready = $this->db->query('select * from unknown_person where awsEventName ="All" and isKyc=0 and userId='.$_SESSION['user_id'].' and aadharNumber="'.$_POST['aadhar'].'"')->result_array();
        if(count($getIfAlready) > 0)
        {
            $isExpired = 0;
            $isActive = '';
            $status = 'Inactive';
            $getLastTransaction = $this->db->query('select * from uploadtransactions where isKyc=0 and type="lapata" and userId='.$_SESSION['user_id'].' and idNumber="'.$_POST['aadhar'].'" order by Id desc')->result_array();
            if(count($getLastTransaction) > 0)
            {
                if(strtotime(date('d-m-Y')) <= strtotime(date('d-m-Y',strtotime($getLastTransaction[0]['expiryDate']))))
                {
                    $isExpired = 1;
                }
            }else{
                $this->db->query('delete from unknown_person where id='.$getIfAlready[0]['id']);
            }
            $getIfAlready = $this->db->query('select * from unknown_person where awsEventName!="unknown" and isKyc=0 and userId='.$_SESSION['user_id'].' and aadharNumber="'.$_POST['aadhar'].'"')->result_array();
            $isFromPending = '';
            if(count($getIfAlready) > 0)
            {
                if((!$getIfAlready[0]['isFound']))
                {
                    if($isExpired == 1)
                    {
                        $isActive = 'checked';   
                    }
                }
                if($getIfAlready[0]['isFinalSubmitted'] == 0)
                {
                    $isFromPending = 'yes';
                    $isActive = 'checked';
                }
            }
            if($isFromPending != '')
            {
                $finalresponse = array(
                    'status' => 'inactive',
                    'expiryDate' => '',
                    'isFound' => $getIfAlready[0]['isFound'],
                    'personName' => $getIfAlready[0]['person_name'],
                    'aadharNumber' => substr_replace($_POST['aadhar'],' xxxxxxxx ',0,8),
                    'appNo' => $getIfAlready[0]['Application_no'],
                    'image' => base_url().''.$getIfAlready[0]['Photo'],
                    'popupPhoto' => base_url().'assets/icons/addresscard.png',
                    'id' => $getIfAlready[0]['id']
                );   
                echo json_encode($finalresponse);           
                die();
            }
            if($isActive != '')
            {
                $finalresponse = array(
                    'status' => 'already',
                    'isFound' => $getIfAlready[0]['isFound'],
                    'personName' => $getIfAlready[0]['person_name'],
                    'aadharNumber' => substr_replace($_POST['aadhar'],' xxxxxxxx ',0,8),
                    'appNo' => $getIfAlready[0]['Application_no'],
                    'image' => base_url().''.$getIfAlready[0]['Photo'],
                    'popupPhoto' => base_url().'assets/icons/addresscard.png',
                    'id' => $getIfAlready[0]['id']
                );   
                echo json_encode($finalresponse);           
            }else{
                $getIfUnknown = $this->db->query('select * from unknown_person where awsEventName = "All" and aadharNumber="'.$_POST['aadhar'].'" order by id desc')->result_array();
                $getFromUser = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar'].'" and final_mobile_verification="success"')->result_array();
                if(count($getFromUser) > 0)
                {
                    $personName = $getFromUser[0]['aadharname'];
                    $getIfPanAvailable = $this->db->query('select * from panlist where userId='.$getFromUser[0]['uid'])->result_array();
                    if(count($getIfPanAvailable) > 0)
                    {
                        $panNumber = $getIfPanAvailable[0]['panNumber'];      
                    }
                    $getIfVoterAvailable = $this->db->query('select * from voterslist where userId='.$getFromUser[0]['uid'])->result_array();
                    if(count($getIfVoterAvailable) > 0)
                    {
                        $voterId = $getIfVoterAvailable[0]['voterNumber'];      
                    }
                    $getIfDlAvailable = $this->db->query('select * from dllist where userId='.$getFromUser[0]['uid'])->result_array();
                    if(count($getIfDlAvailable) > 0)
                    {
                        $dlNumber = $getIfDlAvailable[0]['dlNumber'];      
                    }
                    $gender = ucfirst(strtolower($getFromUser[0]['gender']));
                    $dob = $getFromUser[0]['dob'];
                    $getUserProperties = $this->db->query('select * from userOtherInfo where userId='.$getFromUser[0]['uid'])->result_array();
                    if(count($getUserProperties) > 0)
                    {
                        foreach($getUserProperties as $k=>$v)
                        {
                            // if($v['categoryId'] == 4)
                            // {
                            //     $getSubCategoryDetails = $this->db->query('select * from subcategories where Id='.$v['subCategoryId'])->result_array();
                            //     $ageBand = $getSubCategoryDetails[0]['hindiSubCategoryName'];
                            // }else if($v['categoryId'] == 2)
                            // {
                            //     $getSubCategoryDetails = $this->db->query('select * from subcategories where Id='.$v['subCategoryId'])->result_array();
                            //     $height = $getSubCategoryDetails[0]['hindiSubCategoryName'];
                            // }
                            if($v['categoryId'] == 2)
                            {
                                $getSubCategoryDetails = $this->db->query('select * from subcategories where Id='.$v['subCategoryId'])->result_array();
                                $height = $getSubCategoryDetails[0]['hindiSubCategoryName'];
                            }
                        }
                    }
                    $dob = $getFromUser[0]['dob'];
                    $age = $this->calculateAge($dob);
                    $getAgeBands = $this->db->query('select * from ageBands where ageBand is not null')->result_array();
                    if(count($getAgeBands) > 0)
                    {
                        foreach($getAgeBands as $k=>$v)
                        {
                            $explode = explode(',',$v['ages']);
                            if(in_array($age,$explode))
                            {
                                $ageBand = $v['ageBand'];
                                break;
                            }
                        }
                    }
                    $religion = $getFromUser[0]['religion'];
                    $state = strtoupper($getFromUser[0]['state']);
                    $district = strtoupper($getFromUser[0]['district']);
                    $city = strtoupper($getFromUser[0]['vtc']);
                    $photo = ($getFromUser[0]['facematchphoto'] != NULL ? ('data:image/jpeg;base64,'.base64_encode(file_get_contents($getFromUser[0]['facematchphoto']))) : '');
                    $activeDate = '';
                    $status = 'Inactive';
                    $getLastTransaction = $this->db->query('select * from uploadtransactions where type="lapata" and isKyc=0 and userId='.$_SESSION['user_id'].' and idNumber="'.$_POST['aadhar'].'" order by Id desc')->result_array();
                    if(count($getLastTransaction) > 0)
                    {
                        if(strtotime(date('d-m-Y')) <= strtotime(date('d-m-Y',strtotime($getLastTransaction[0]['expiryDate']))))
                        {
                            $activeDate = date('d-m-Y',strtotime($getLastTransaction[0]['expiryDate']));
                        }
                    }
                    $response = array(
                        'activeDate' => $activeDate,
                        'status' => (count($getIfUnknown) > 0) ? 'inactive': 'success',
                        'id' => (count($getIfUnknown) > 0) ? $getIfUnknown[0]['id']: '',
                        'appNo' => (count($getIfUnknown) > 0) ? $getIfUnknown[0]['Application_no']: '',
                        'isRegistered'=>1,
                        'aadharNumber' => substr_replace($_POST['aadhar'],'xxxxxxxx',0,8),
                        'aadhar' => substr_replace($_POST['aadhar'],'xxxxxxxx',0,8),
                        'personName' => strtoupper($personName),
                        'voterId' => $voterId,
                        'dlNumber' => $dlNumber,
                        'panNumber' => $panNumber,
                        'gender' => $gender,
                        'popupPhoto' => base_url().''.$getFromUser[0]['aadharphoto'],
                        'dob' => $dob,
                        'age' => $ageBand,
                        'ageBand' => $age,
                        'state' => $state,
                        'district' => $district,
                        'city' => $city,
                        'height' => $height,
                        'photo' => $photo,
                        'religion' => $religion
                    );
                    echo json_encode($response);
                }else{
                    $curl = curl_init();
                    curl_setopt_array($curl, [
                      CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/verify",
                      CURLOPT_RETURNTRANSFER => true,
                      CURLOPT_ENCODING => "",
                      CURLOPT_MAXREDIRS => 10,
                      CURLOPT_TIMEOUT => 30,
                      CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                      CURLOPT_CUSTOMREQUEST => "POST",
                      CURLOPT_POSTFIELDS => json_encode([
                        'aadhaar_number' => $_POST['aadhar'],
                        'consent' => 'Y'
                      ]),
                      CURLOPT_HTTPHEADER => [
                        "Accept: application/json",
                        "Content-Type: application/json",
                        "X-API-Key: ".$this->getSettings(),
                        "X-Auth-Type: API-Key"
                      ],
                    ]);
                    
                    $response = json_decode(curl_exec($curl),true);
                    curl_close($curl);
                    $activeDate = '';
                    $getLastTransaction = $this->db->query('select * from uploadtransactions where type="lapata" and isKyc=0 and userId='.$_SESSION['user_id'].' and idNumber="'.$_POST['aadhar'].'" order by Id desc')->result_array();
                    if(count($getLastTransaction) > 0)
                    {
                        if(strtotime(date('d-m-Y')) <= strtotime(date('d-m-Y',strtotime($getLastTransaction[0]['expiryDate']))))
                        {
                            $activeDate = date('d-m-Y',strtotime($getLastTransaction[0]['expiryDate']));
                        }
                    }
                    if(count($getIfUnknown) > 0)
                    {
                        if($activeDate != '')
                        {
                            $response = array(
                                'activeDate' => $activeDate,
                                'appNo' => $getIfUnknown[0]['Application_no'],
                                'id' => $getIfUnknown[0]['id'],
                                'status' => 'inactive',
                                'isRegistered'=>1,
                                'aadharNumber' => substr_replace($_POST['aadhar'],'xxxxxxxx',0,8),
                                'aadhar' => substr_replace($_POST['aadhar'],'xxxxxxxx',0,8),
                                'personName' => strtoupper($getIfUnknown[0]['person_name']),
                                'voterId' => strtoupper($getIfUnknown[0]['voter_id']),
                                'popupPhoto' => base_url().''.$getIfUnknown[0]['Photo'],
                                'dlNumber' => strtoupper($getIfUnknown[0]['DL_no']),
                                'panNumber' => strtoupper($getIfUnknown[0]['PAN']),
                                'gender' => ucFirst(($getIfUnknown[0]['Gender'] == 'boy') ? 'Male' : ($getIfUnknown[0]['Gender'] == 'girl' ? 'Female' : 'other')),
                                'age' => ($getIfUnknown[0]['Age']),
                                'state' => strtoupper($getIfUnknown[0]['state']),
                                'district' => strtoupper($getIfUnknown[0]['district']),
                                'city' => strtoupper($getIfUnknown[0]['city']),
                                'height' => strtoupper($getIfUnknown[0]['Height']),
                                'photo' => base_url().''.$getIfUnknown[0]['Photo'],
                                'religion' => strtoupper($getIfUnknown[0]['Religion'])
                            );
                            echo json_encode($response);                           
                        }else{
                            $response = array(
                                'activeDate' => date('d-m-Y',strtotime($getIfUnknown[0]['expiryDate'])),
                                'appNo' => $getIfUnknown[0]['Application_no'],
                                'id' => $getIfUnknown[0]['id'],
                                'status' => 'planexpire',
                                'isRegistered'=>1,
                                'aadharNumber' => substr_replace($_POST['aadhar'],'xxxxxxxx',0,8),
                                'aadhar' => substr_replace($_POST['aadhar'],'xxxxxxxx',0,8),
                                'personName' => strtoupper($getIfUnknown[0]['person_name']),
                                'voterId' => strtoupper($getIfUnknown[0]['voter_id']),
                                'popupPhoto' => base_url().''.$getIfUnknown[0]['Photo'],
                                'dlNumber' => strtoupper($getIfUnknown[0]['DL_no']),
                                'panNumber' => strtoupper($getIfUnknown[0]['PAN']),
                                'gender' => ucFirst(($getIfUnknown[0]['Gender'] == 'boy') ? 'Male' : ($getIfUnknown[0]['Gender'] == 'girl' ? 'Female' : 'other')),
                                'age' => ($getIfUnknown[0]['Age']),
                                'state' => strtoupper($getIfUnknown[0]['state']),
                                'district' => strtoupper($getIfUnknown[0]['district']),
                                'city' => strtoupper($getIfUnknown[0]['city']),
                                'height' => strtoupper($getIfUnknown[0]['Height']),
                                'photo' => base_url().''.$getIfUnknown[0]['Photo'],
                                'religion' => strtoupper($getIfUnknown[0]['Religion'])
                            );
                            echo json_encode($response);                        
                        }
                    }else{
                        if(count($response) > 0)
                        {
                            if($response['status'] == 400 || $response['status'] == 500)
                            {
                                $finalresponse = array(
                                    'status' => 'error',
                                    'message' => $response['error']['message']
                                );
                                echo json_encode($finalresponse);           
                            }else{
                                if($response['data']['code'] == 1018)
                                {
                                    $finalresponse = array(
                                        'activeDate' => $activeDate,
                                        'aadhar' => substr_replace($_POST['aadhar'],' xxxxxxxx ',0,8),
                                        'status' => (count($getIfUnknown) > 0) ? 'inactive': 'success',
                                        'id' => (count($getIfUnknown) > 0) ? $getIfUnknown[0]['id']: '',
                                        'popupPhoto' => base_url().'assets/icons/addresscard.png',
                                        'isRegistered'=>0,
                                        'gender' => ucFirst(strtolower($response['data']['aadhaar_data']['gender'])),
                                        'state' => strtoupper($response['data']['aadhaar_data']['state'])
                                    );
                                    echo json_encode($finalresponse);              
                                }else{
                                    $finalresponse = array(
                                        'activeDate' => $activeDate,
                                        'aadhar' => substr_replace($_POST['aadhar'],' xxxxxxxx ',0,8),
                                        'status' => (count($getIfUnknown) > 0) ? 'inactive': 'success',
                                        'id' => (count($getIfUnknown) > 0) ? $getIfUnknown[0]['id']: '',
                                        'popupPhoto' => base_url().'assets/icons/addresscard.png',
                                        'isRegistered'=>0,
                                        'gender' => ucFirst(strtolower($response['data']['aadhaar_data']['gender'])),
                                        'state' => strtoupper($response['data']['aadhaar_data']['state'])
                                    );
                                    echo json_encode($finalresponse);           
                                }
                            }
                        }else{
                            $finalresponse = array(
                                'activeDate' => $activeDate,
                                'aadhar' => substr_replace($_POST['aadhar'],' xxxxxxxx ',0,8),
                                'status' => (count($getIfUnknown) > 0) ? 'inactive': 'success',
                                'id' => (count($getIfUnknown) > 0) ? $getIfUnknown[0]['id']: '',
                                'popupPhoto' => base_url().'assets/icons/addresscard.png',
                                'isRegistered'=>0
                            );
                            echo json_encode($finalresponse);   
                        }   
                    }
                }   
            }
        }else{
            $getIfUnknown = $this->db->query('select * from unknown_person where awsEventName = "unknown" and aadharNumber="'.$_POST['aadhar'].'" order by id desc')->result_array();
            $getIfUnknown = array();
            if(count($getIfUnknown) > 0)
            {
                if($getIfUnknown[0]['uploaded_by'] == 'police')
                {
                    $getPoliceDetail = $this->db->query('select * from police where police_id='.$getIfUnknown[0]['policeId'])->result_array();
                    $finalresponse = array(
                        'status' => 'unknown',
                        'personName' => strtoupper($getIfUnknown[0]['person_name']),
                        'aadharNumber' => substr_replace($_POST['aadhar'],'xxxxxxxx',0,8),
                        'type' => 'police',
                        'date' => date('d-m-Y h:i A',strtotime($getIfUnknown[0]['dateCreated'])),
                        'address' => strtoupper($getPoliceDetail[0]['thanaName'].' - '.$getPoliceDetail[0]['state'].', '.$getPoliceDetail[0]['district']),
                        'photo' => base_url().''.$getIfUnknown[0]['Photo'],
                        'age' => $getIfUnknown[0]['Age'],
                        'gender' => ($getIfUnknown[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                        'id' => $getIfUnknown[0]['Application_no'],
                        'registration_mobile' => (($getPoliceDetail[0]['registration_mobile'] != NULL) ? $getPoliceDetail[0]['registration_mobile'] : ''),
                        'mobile1' => (($getIfUnknown[0]['well1'] != NULL) ? $getIfUnknown[0]['well1'] : ''),
                        'mobile2' => (($getIfUnknown[0]['well2'] != NULL) ? $getIfUnknown[0]['well2'] : ''),
                        'mobile3' => (($getIfUnknown[0]['well3'] != NULL) ? $getIfUnknown[0]['well3'] : ''),
                    );   
                }else{
                    $getNgoDetail = $this->db->query('select * from ngo where Id='.$getIfUnknown[0]['ngoId'])->result_array();
                    $finalresponse = array(
                        'status' => 'unknown',
                        'personName' => strtoupper($getIfUnknown[0]['person_name']),
                        'aadharNumber' => substr_replace($_POST['aadhar'],'xxxxxxxx',0,8),
                        'type' => 'ngo',
                        'date' => date('d-m-Y h:i A',strtotime($getIfUnknown[0]['dateCreated'])),
                        'address' => strtoupper($getNgoDetail[0]['ngoName'].' - '.$getNgoDetail[0]['ngoState'].', '.$getNgoDetail[0]['ngoDistrict'].', '.$getNgoDetail[0]['ngoCity']),
                        'photo' => base_url().''.$getIfUnknown[0]['Photo'],
                        'age' => $getIfUnknown[0]['Age'],
                        'gender' => ($getIfUnknown[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                        'registration_mobile' => (($getNgoDetail[0]['ngoRegistrationNumber'] != NULL) ? $getNgoDetail[0]['ngoRegistrationNumber'] : ''),
                        'mobile1' => (($getIfUnknown[0]['well1'] != NULL) ? $getIfUnknown[0]['well1'] : ''),
                        'mobile2' => (($getIfUnknown[0]['well2'] != NULL) ? $getIfUnknown[0]['well2'] : ''),
                        'mobile3' => (($getIfUnknown[0]['well3'] != NULL) ? $getIfUnknown[0]['well3'] : ''),
                        'id' => $getIfUnknown[0]['Application_no']
                    );   
                }
                echo json_encode($finalresponse);           
            }else{
                $getFromUser = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar'].'" and final_mobile_verification="success"')->result_array();
                if(count($getFromUser) > 0)
                {
                    $personName = $getFromUser[0]['aadharname'];
                    $getIfPanAvailable = $this->db->query('select * from panlist where userId='.$getFromUser[0]['uid'])->result_array();
                    if(count($getIfPanAvailable) > 0)
                    {
                        $panNumber = $getIfPanAvailable[0]['panNumber'];      
                    }
                    $getIfVoterAvailable = $this->db->query('select * from voterslist where userId='.$getFromUser[0]['uid'])->result_array();
                    if(count($getIfVoterAvailable) > 0)
                    {
                        $voterId = $getIfVoterAvailable[0]['voterNumber'];      
                    }
                    $getIfDlAvailable = $this->db->query('select * from dllist where userId='.$getFromUser[0]['uid'])->result_array();
                    if(count($getIfDlAvailable) > 0)
                    {
                        $dlNumber = $getIfDlAvailable[0]['dlNumber'];      
                    }
                    $gender = ucfirst(strtolower($getFromUser[0]['gender']));
                    $getUserProperties = $this->db->query('select * from userOtherInfo where userId='.$getFromUser[0]['uid'])->result_array();
                    if(count($getUserProperties) > 0)
                    {
                        foreach($getUserProperties as $k=>$v)
                        {
                            if($v['categoryId'] == 4)
                            {
                                $getSubCategoryDetails = $this->db->query('select * from subcategories where Id='.$v['subCategoryId'])->result_array();
                                $ageBand = $getSubCategoryDetails[0]['hindiSubCategoryName'];
                            }else if($v['categoryId'] == 2)
                            {
                                $getSubCategoryDetails = $this->db->query('select * from subcategories where Id='.$v['subCategoryId'])->result_array();
                                $height = $getSubCategoryDetails[0]['hindiSubCategoryName'];
                            }
                        }
                    }
                    $dob = $getFromUser[0]['dob'];
                    $age = $this->calculateAge($dob);
                    $getAgeBands = $this->db->query('select * from ageBands where ageBand is not null')->result_array();
                    if(count($getAgeBands) > 0)
                    {
                        foreach($getAgeBands as $k=>$v)
                        {
                            $explode = explode(',',$v['ages']);
                            if(in_array($age,$explode))
                            {
                                $ageBand = $v['ageBand'];
                                break;
                            }
                        }
                    }
                    $religion = $getFromUser[0]['religion'];
                    $state = strtoupper($getFromUser[0]['state']);
                    $district = strtoupper($getFromUser[0]['district']);
                    $city = strtoupper($getFromUser[0]['vtc']);
                    $photo = ($getFromUser[0]['facematchphoto'] != NULL ? ('data:image/jpeg;base64,'.base64_encode(file_get_contents($getFromUser[0]['facematchphoto']))) : '');
                    $activeDate = '';
                    $status = 'Inactive';
                    $getLastTransaction = $this->db->query('select * from uploadtransactions where type="lapata" and isKyc=0 and userId='.$_SESSION['user_id'].' and idNumber="'.$_POST['aadhar'].'" order by Id desc')->result_array();
                    if(count($getLastTransaction) > 0)
                    {
                        if(strtotime(date('d-m-Y')) <= strtotime(date('d-m-Y',strtotime($getLastTransaction[0]['expiryDate']))))
                        {
                            $activeDate = date('d-m-Y',strtotime($getLastTransaction[0]['expiryDate']));
                        }
                    }
                    $response = array(
                        'activeDate' => $activeDate,
                        'status' => 'success',
                        'isRegistered'=>1,
                        'aadhar' => substr_replace($_POST['aadhar'],'xxxxxxxx',0,8),
                        'personName' => strtoupper($personName),
                        'voterId' => $voterId,
                        'popupPhoto' => base_url().''.$getFromUser[0]['aadharphoto'],
                        'dlNumber' => $dlNumber,
                        'panNumber' => $panNumber,
                        'gender' => $gender,
                        'dob' => $dob,
                        'age' => $ageBand,
                        'ageBand' => $age,
                        'state' => $state,
                        'district' => $district,
                        'city' => $city,
                        'height' => $height,
                        'photo' => $photo,
                        'religion' => $religion
                    );
                    echo json_encode($response);
                }else{
                    $curl = curl_init();
                    curl_setopt_array($curl, [
                      CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/verify",
                      CURLOPT_RETURNTRANSFER => true,
                      CURLOPT_ENCODING => "",
                      CURLOPT_MAXREDIRS => 10,
                      CURLOPT_TIMEOUT => 30,
                      CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                      CURLOPT_CUSTOMREQUEST => "POST",
                      CURLOPT_POSTFIELDS => json_encode([
                        'aadhaar_number' => $_POST['aadhar'],
                        'consent' => 'Y'
                      ]),
                      CURLOPT_HTTPHEADER => [
                        "Accept: application/json",
                        "Content-Type: application/json",
                        "X-API-Key: ".$this->getSettings(),
                        "X-Auth-Type: API-Key"
                      ],
                    ]);
                    
                    $response = json_decode(curl_exec($curl),true);
                    curl_close($curl);
                    if(count($response) > 0)
                    {
                        if($response['status'] == 400 || $response['status'] == 500)
                        {
                            $finalresponse = array(
                                'status' => 'error',
                                'message' => $response['error']['message']
                            );
                            echo json_encode($finalresponse);           
                        }else{
                            $activeDate = '';
                            $getLastTransaction = $this->db->query('select * from uploadtransactions where type="lapata" and isKyc=0 and userId='.$_SESSION['user_id'].' and idNumber="'.$_POST['aadhar'].'" order by Id desc')->result_array();
                            if(count($getLastTransaction) > 0)
                            {
                                if(strtotime(date('d-m-Y')) <= strtotime(date('d-m-Y',strtotime($getLastTransaction[0]['expiryDate']))))
                                {
                                    $activeDate = date('d-m-Y',strtotime($getLastTransaction[0]['expiryDate']));
                                }
                            }
                            if($response['data']['code'] == 1018)
                            {
                                $finalresponse = array(
                                    'aadhar' => substr_replace($_POST['aadhar'],'xxxxxxxx',0,8),
                                    'activeDate' => $activeDate,
                                    'popupPhoto' => base_url().'assets/icons/addresscard.png',
                                    'status' => 'success',
                                    'isRegistered'=>0,
                                    'gender' => ucFirst(strtolower($response['data']['aadhaar_data']['gender'])),
                                    'state' => strtoupper($response['data']['aadhaar_data']['state'])
                                );
                                echo json_encode($finalresponse);              
                            }else{
                                $finalresponse = array(
                                    'popupPhoto' => base_url().'assets/icons/addresscard.png',
                                    'aadhar' => substr_replace($_POST['aadhar'],'xxxxxxxx',0,8),
                                    'status' => 'success',
                                    'activeDate' => $activeDate,
                                    'isRegistered'=>0,
                                    'gender' => ucFirst(strtolower($response['data']['aadhaar_data']['gender'])),
                                    'state' => strtoupper($response['data']['aadhaar_data']['state'])
                                );
                                echo json_encode($finalresponse);           
                            }
                        }
                    }else{
                        $activeDate = '';
                        $getLastTransaction = $this->db->query('select * from uploadtransactions where type="lapata" and isKyc=0 and userId='.$_SESSION['user_id'].' and idNumber="'.$_POST['aadhar'].'" order by Id desc')->result_array();
                        if(count($getLastTransaction) > 0)
                        {
                            if(strtotime(date('d-m-Y')) <= strtotime(date('d-m-Y',strtotime($getLastTransaction[0]['expiryDate']))))
                            {
                                $activeDate = date('d-m-Y',strtotime($getLastTransaction[0]['expiryDate']));
                            }
                        }
                        $finalresponse = array(
                            'popupPhoto' => base_url().'assets/icons/addresscard.png',
                            'status' => 'success',
                            'activeDate' => $activeDate,
                            'isRegistered'=>0,
                            'gender' => '',
                            'state' => ''
                        );
                        echo json_encode($finalresponse);   
                    }
                }   
            }
        }
    }

    function saveReward()
    {
        if(isset($_POST['id']))
        {
            $getPreviousData = $this->db->query('select * from unknown_person where id='.$_POST['id'])->result_array();
            $profileDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
            $updateData = array(
                'rewardamount' => $_POST['rewardAmount']
            );   
            $this->db->where('id',$_POST['id']);
            $this->db->update('unknown_person',$updateData);
        }else{
            $getPreviousData = $this->db->query('select * from unknown_person where id='.$_SESSION['unknownId'])->result_array();
            $profileDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
            $updateData = array(
                'rewardamount' => $_POST['rewardAmount'],
            );   
            $this->db->where('id',$_SESSION['unknownId']);
            $this->db->update('unknown_person',$updateData);
        }
    }

    function generateApplicationNumber()
    {
        $getMaxId = $this->db->query('select max(id) as Id from unknown_person')->result_array();
        $id = 1;
        if($getMaxId[0]['Id'] != NULL)
        {
            $id = $getMaxId[0]['Id'] + 1;
        }
        $Appli_no='LPTIKH'.sprintf("%03d", $id);
        $getIfAlready = $this->db->query('select * from unknown_person where Application_no="'.$Appli_no.'"')->result_array();
        if(count($getIfAlready) == 0)
        {
            return $Appli_no;
        }else{
            return $this->generateApplicationNumber();
        }
    }

    function generateMahaApplicationNumber()
    {
        $getMaxId = $this->db->query('select max(id) as Id from mahakumbhSpecial')->result_array();
        $id = 1;
        if($getMaxId[0]['Id'] != NULL)
        {
            $id = $getMaxId[0]['Id'] + 1;
        }
        $Appli_no='MAH'.sprintf("%03d", $id);
        $getIfAlready = $this->db->query('select * from mahakumbhSpecial where Application_no="'.$Appli_no.'"')->result_array();
        if(count($getIfAlready) == 0)
        {
            return $Appli_no;
        }else{
            return $this->generateMahaApplicationNumber();
        }
    }

    function generateUnknownApplicationNumber()
    {
        $getMaxId = $this->db->query('select max(id) as Id from unknown_person')->result_array();
        $id = 1;
        if($getMaxId[0]['Id'] != NULL)
        {
            $id = $getMaxId[0]['Id'] + 1;
        }
        $Appli_no='UNWTIKH'.sprintf("%03d", $id);
        $getIfAlready = $this->db->query('select * from unknown_person where Application_no="'.$Appli_no.'"')->result_array();
        if(count($getIfAlready) == 0)
        {
            return $Appli_no;
        }else{
            return $this->generateUnknownApplicationNumber();
        }   
    }

    function uploadUnknownPhoto()
    {
        if(isset($_POST['id']))
        {
            $data = $_POST["file"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = 'Unknown_'.time().''.rand(0,10000);
            $mainphoto = 'upload/unknown/'.$imageId.'.'.$split1[1];
            file_put_contents($mainphoto, $data);
            if($_POST['isUploaded'] == 0)
            {
                $insertdata = array(
                    'photourl' => $mainphoto,
                    'unknownId' => $_POST['id']
                );
                $this->db->insert('unknownphotos',$insertdata);
            }else{
                $updatetdata = array(
                    'photourl' => $mainphoto,
                );
                $this->db->where('Id',$_POST['isUploaded']);
                $this->db->update('unknownphotos',$updatetdata);
            }
            $response = array(
                'status' => 'success',
                'message' => 'Photo Uploaded Successfully'
            );
            echo json_encode($response);     
        }else{
            $data = $_POST["file"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = 'Unknown_'.time().''.rand(0,10000);
            $mainphoto = 'upload/unknown/'.$imageId.'.'.$split1[1];
            file_put_contents($mainphoto, $data);
            if($_POST['isUploaded'] == 0)
            {
                $insertdata = array(
                    'photourl' => $mainphoto,
                    'unknownId' => $_SESSION['unknownId']
                );
                $this->db->insert('unknownphotos',$insertdata);
            }else{
                $updatetdata = array(
                    'photourl' => $mainphoto,
                );
                $this->db->where('Id',$_POST['isUploaded']);
                $this->db->update('unknownphotos',$updatetdata);
            }
            $response = array(
                'status' => 'success',
                'message' => 'Photo Uploaded Successfully'
            );
            echo json_encode($response);  
        }
    }

    public function uploadUnknown()
    {
        $algoSentTime = date('Y-m-d H:i:s A');
        if(isset($_POST['id']))
        {
            if($_FILES['Photo']['name'] != '')
            {
                $getOldDetail = $this->db->query('select * from unknown_person where id='.$_POST['id'])->result_array();
                $mainphoto1 = '';
                $mainphoto2 = '';
                $imageId1 = '';
                $imageId2 = '';
                if($_FILES['Photo1']['name'] != '')
                {
                    $data = $_POST["facematch1"];
                    $image_array_1 = explode(";", $data);
                    $split1 = explode('data:image/',$image_array_1[0]);
                    $image_array_2 = explode(",", $image_array_1[1]);
                    $data = base64_decode($image_array_2[1]);
                    $imageId1 = time().''.rand(0,10000);
                    $mainphoto1 = 'upload/unknownperson/nonkyc/'.$imageId1.'.'.$split1[1];
                    file_put_contents($mainphoto1, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId1,
                        "image_url" => base_url().''.$mainphoto1
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    
                    $response = json_decode(curl_exec($curl),true);
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] != 1)
                            {
                                if($response['face_count'] > 1)
                                {
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/editUnknownDetails?id='.$_POST['applicationNo']);
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/editUnknownDetails?id='.$_POST['applicationNo']);
                                }
                            }
                        }
                    }
                }else{
                    $imageId1 = ($getOldDetail[0]['imageId1'] == NULL ? ($getOldDetail[0]['imageId2'] != NULL ? $getOldDetail[0]['imageId2'] : '') : $getOldDetail[0]['imageId1']);
                        $mainphoto1 = ($getOldDetail[0]['Photo1'] == NULL ? ($getOldDetail[0]['Photo2'] != NULL ? $getOldDetail[0]['Photo2'] : '') : $getOldDetail[0]['Photo1']);
                }
                if($_FILES['Photo2']['name'] != '')
                {
                    $data = $_POST["facematch2"];
                    $image_array_1 = explode(";", $data);
                    $split1 = explode('data:image/',$image_array_1[0]);
                    $image_array_2 = explode(",", $image_array_1[1]);
                    $data = base64_decode($image_array_2[1]);
                    $imageId2 = time().''.rand(0,10000);
                    $mainphoto2 = 'upload/unknownperson/nonkyc/'.$imageId2.'.'.$split1[1];
                    file_put_contents($mainphoto2, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId2,
                        "image_url" => base_url().''.$mainphoto2
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    
                    $response = json_decode(curl_exec($curl),true);   
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] != 1)
                            {
                                if($response['face_count'] > 1)
                                {
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/editUnknownDetails?id='.$_POST['applicationNo']);
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/editUnknownDetails?id='.$_POST['applicationNo']);
                                }
                            }
                        }
                    }
                }else{
                    $imageId2 = ($imageId1 == '' ? ($getOldDetail[0]['imageId2'] != NULL ? $getOldDetail[0]['imageId2'] : NULL) : $getOldDetail[0]['imageId2']);
                    $mainphoto2 = ($mainphoto1 == '' ? ($getOldDetail[0]['Photo2'] != NULL ? $getOldDetail[0]['Photo2'] : NULL) : $getOldDetail[0]['Photo2']);
                }
                $data = $_POST["facematch"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                $imageId = time().''.rand(0,10000);
                $mainphoto = 'upload/unknownperson/nonkyc/'.$imageId.'.'.$split1[1];
                file_put_contents($mainphoto, $data);
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_id" => $imageId,
                    "image_url" => base_url().''.$mainphoto
                ));
                curl_setopt_array($curl, array(
                    CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                    CURLOPT_RETURNTRANSFER => true,
                    CURLOPT_ENCODING => '',
                    CURLOPT_MAXREDIRS => 10,
                    CURLOPT_TIMEOUT => 0,
                    CURLOPT_FOLLOWLOCATION => true,
                    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                    CURLOPT_CUSTOMREQUEST => 'POST',
                    CURLOPT_POSTFIELDS => $postdata,
                    CURLOPT_HTTPHEADER => array(
                        'Content-Type: application/json',
                        'Authorization: '.$this->getSettings('facematchtoken')
                    ),
                ));
                
                $response = json_decode(curl_exec($curl),true);
                $dateCreated = date('Y-m-d H:i:s A');
                curl_close($curl);
                if(count($response) > 0)
                {
                    if($response['status'] == 200)
                    {
                        if($response['face_count'] == 1)
                        {
                            $insertdata = array(
                                'imageId' => $imageId,
                                'imageId1' => $imageId1,
                                'imageId2' => $imageId2,
                                'awsEventName' => 'Unknown',
                                'person_name' => $_POST['person_name'],
                                'aadharNumber' => $_POST['aadharNumber'],
                                'PAN' => $_POST['PAN'],
                                'Photo' => $mainphoto,
                                'Photo1' => $mainphoto1,
                                'Photo2' => $mainphoto2,
                                'DL_no' => $_POST['DL_no'],
                                'voter_id' => $_POST['voter_id'],
                                'Religion' => $_POST['Religion'],
                                'vehicle_no' => $_POST['vehicle_no'],
                                'state' => $_POST['state'],
                                'district' => $_POST['district'],
                                'city' => $_POST['city'],
                                'Age' => $_POST['Age'],
                                'Height' => $_POST['Height'],
                                'Mental_status' => $_POST['Mental'],
                                'Message' => $_POST['Message'],
                                'vehicle_no' => $_POST['vehicle_no'],
                                'rescueDate' => $_POST['rescueDate']
                            );
                            $this->db->where('id',$_POST['id']);
                            $in=$this->db->update('unknown_person',$insertdata);
                            if($in)
                            {
                                if(!isset($response))
                                {
                                    $response = array();
                                }
                                $vectorizerData = array(
                                    'unknownId' => $_POST['id'],
                                    'imageStatus' => 'Pending',
                                    'uploadTime' => $dateCreated,
                                    'isUpload' => 0
                                );
                                $this->db->insert('indexer',$vectorizerData);
                                if($_POST['goldCount']  > 0)
                                {
                                    for($i=1;$i<=$_POST['goldCount'];$i++)
                                    {
                                        if(isset($_POST['oldId'.$i]))
                                        {
                                            $goldData = array(
                                                'unknownId' => $_POST['id'],
                                                'goldType' => $_POST['goldType'.$i],
                                                'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                            );
                                            $this->db->where('Id',$_POST['oldId'.$i]);
                                            $this->db->update('unknownPersonGold',$goldData);
                                        }else{
                                            $goldData = array(
                                                'unknownId' => $_POST['id'],
                                                'goldType' => $_POST['goldType'.$i],
                                                'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                            );
                                            $this->db->insert('unknownPersonGold',$goldData);   
                                        }
                                    }
                                }
                                $getPreviousPaymentDetail = $this->db->query('select * from missingFaceMatchPayment where unknownId='.$_POST['id'].' and paymentStatus=1 order by Id desc')->result_array();
                                if(count($getPreviousPaymentDetail) > 0)
                                {
                                    $isFirstUploaded = 'lock';
                                    $isFirstUploaded = 1;
                                    $imageCount = 1;
                                    if($_FILES['Photo1']['name'] != '')
                                    {
                                        $isSecondUploaded = 'lock';
                                        $imageCount += 1;
                                    }
                                    if($_FILES['Photo2']['name'] != '')
                                    {
                                        $isThirdUploaded = 'lock';
                                        $imageCount += 1;
                                    }
                                    if(isset($isSecondUploaded))
                                    {
                                        if(isset($isThirdUploaded))
                                        {
                                            $update = $this->db->query('update missingFaceMatchPayment set image2Status = "lock", image3Status = "lock", image1Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                                        }else{
                                            $update = $this->db->query('update missingFaceMatchPayment set image2Status = "lock", image1Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                                        }
                                    }else{
                                        if(isset($isThirdUploaded))
                                        {
                                            $update = $this->db->query('update missingFaceMatchPayment set image3Status = "lock", image1Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                                        }else{
                                            $update = $this->db->query('update missingFaceMatchPayment set image1Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                                        }
                                    }
                                }
                                $this->session->set_flashdata('success', 'Record Updated Successfully');
                                return redirect( base_url().'NonKyc/editUnknownDetails?id='.$_POST['applicationNo'].'&pn=2');
                            }
                            else
                            {
                                $this->session->set_flashdata('error', 'No Update Try Again.');
                                return redirect( base_url().'NonKyc/editUnknownDetails?id='.$_POST['applicationNo']);
                            }
                        }else{
                            if($response['face_count'] > 1)
                            {
                                $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                return redirect( base_url().'NonKyc/editUnknownDetails?id='.$_POST['applicationNo']);
                            }else{
                                $this->session->set_flashdata('error', 'No face found in the image');   
                                return redirect( base_url().'NonKyc/editUnknownDetails?id='.$_POST['applicationNo']);
                            }
                        }
                    }else{
                        $this->session->set_flashdata('error', 'Please upload valid face match image');
                        return redirect( base_url().'NonKyc/editUnknownDetails?id='.$_POST['applicationNo']);
                    }   
                }else{
                    $this->session->set_flashdata('error', 'Please upload valid face match image');
                    return redirect( base_url().'NonKyc/editUnknownDetails?id='.$_POST['applicationNo']);
                }
            }else{
                $mainphoto1 = '';
                $mainphoto2 = '';
                $imageId1 = '';
                $imageId2 = '';
                $getOldDetail = $this->db->query('select * from unknown_person where id='.$_POST['id'])->result_array();
                if($_FILES['Photo1']['name'] != '')
                {
                    $data = $_POST["facematch1"];
                    $image_array_1 = explode(";", $data);
                    $split1 = explode('data:image/',$image_array_1[0]);
                    $image_array_2 = explode(",", $image_array_1[1]);
                    $data = base64_decode($image_array_2[1]);
                    $imageId1 = time().''.rand(0,10000);
                    $mainphoto1 = 'upload/unknownperson/nonkyc/'.$imageId1.'.'.$split1[1];
                    file_put_contents($mainphoto1, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId1,
                        "image_url" => base_url().''.$mainphoto1
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    
                    $response = json_decode(curl_exec($curl),true);
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] != 1)
                            {
                                if($response['face_count'] > 1)
                                {
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/editUnknownDetails?id='.$_POST['applicationNo']);
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/editUnknownDetails?id='.$_POST['applicationNo']);
                                }
                            }
                        }
                    }
                }else{
                    $imageId1 = $getOldDetail[0]['imageId1'];
                    $mainphoto1 = $getOldDetail[0]['Photo1'];
                }
                if($_FILES['Photo2']['name'] != '')
                {
                    $data = $_POST["facematch2"];
                    $image_array_1 = explode(";", $data);
                    $split1 = explode('data:image/',$image_array_1[0]);
                    $image_array_2 = explode(",", $image_array_1[1]);
                    $data = base64_decode($image_array_2[1]);
                    $imageId2 = time().''.rand(0,10000);
                    $mainphoto2 = 'upload/unknownperson/nonkyc/'.$imageId2.'.'.$split1[1];
                    file_put_contents($mainphoto2, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId2,
                        "image_url" => base_url().''.$mainphoto2
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    
                    $response = json_decode(curl_exec($curl),true);   
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] != 1)
                            {
                                if($response['face_count'] > 1)
                                {
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/editUnknownDetails?id='.$_POST['applicationNo']);
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/editUnknownDetails?id='.$_POST['applicationNo']);
                                }
                            }
                        }
                    }
                }else{
                    $imageId2 = $getOldDetail[0]['imageId2'];
                    $mainphoto2 = $getOldDetail[0]['Photo2'];
                }
                $dateCreated = date('Y-m-d H:i:s A');
                $insertdata = array(
                    'imageId1' => $imageId1,
                    'imageId2' => $imageId2,
                    'aadharNumber' => $_POST['aadharNumber'],
                    'PAN' => $_POST['PAN'],
                    'Photo1' => $mainphoto1,
                    'Photo2' => $mainphoto2,
                    'DL_no' => $_POST['DL_no'],
                    'voter_id' => $_POST['voter_id'],
                    'Religion' => $_POST['Religion'],
                    'person_name' => $_POST['person_name'],
                    'vehicle_no' => $_POST['vehicle_no'],
                    'state' => $_POST['state'],
                    'district' => $_POST['district'],
                    'city' => $_POST['city'],
                    'Age' => $_POST['Age'],
                    'Height' => $_POST['Height'],
                    'Mental_status' => $_POST['Mental'],
                    'Message' => $_POST['Message'],
                    'vehicle_no' => $_POST['vehicle_no'],
                    'rescueDate' => $_POST['rescueDate']
                );
                $this->db->where('id',$_POST['id']);
                $in=$this->db->update('unknown_person',$insertdata);
                if($in)
                {
                    if(!isset($response))
                    {
                        $response = array();
                    }
                    $vectorizerData = array(
                        'unknownId' => $_POST['id'],
                        'imageStatus' => 'Pending',
                        'uploadTime' => $dateCreated,
                        'isUpload' => 0
                    );
                    $this->db->insert('indexer',$vectorizerData);
                    if($_POST['goldCount']  > 0)
                    {
                        for($i=1;$i<=$_POST['goldCount'];$i++)
                        {
                            if(isset($_POST['oldId'.$i]))
                            {
                                $goldData = array(
                                    'unknownId' => $_POST['id'],
                                    'goldType' => $_POST['goldType'.$i],
                                    'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                );
                                $this->db->where('Id',$_POST['oldId'.$i]);
                                $this->db->update('unknownPersonGold',$goldData);
                            }else{
                                $goldData = array(
                                    'unknownId' => $_POST['id'],
                                    'goldType' => $_POST['goldType'.$i],
                                    'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                );
                                $this->db->insert('unknownPersonGold',$goldData);   
                            }
                        }
                    }
                    $getPreviousPaymentDetail = $this->db->query('select * from missingFaceMatchPayment where unknownId='.$_POST['id'].' and paymentStatus=1 order by Id desc')->result_array();
                    if(count($getPreviousPaymentDetail) > 0)
                    {
                        $imageCount = 1;
                        if($_FILES['Photo1']['name'] != '')
                        {
                            $isSecondUploaded = 'lock';
                            $imageCount += 1;
                        }
                        if($_FILES['Photo2']['name'] != '')
                        {
                            $isThirdUploaded = 'lock';
                            $imageCount += 1;
                        }
                        if(isset($isSecondUploaded))
                        {
                            if(isset($isThirdUploaded))
                            {
                                $update = $this->db->query('update missingFaceMatchPayment set image2Status = "lock", image3Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                            }else{
                                $update = $this->db->query('update missingFaceMatchPayment set image2Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                            }
                        }else{
                            if(isset($isThirdUploaded))
                            {
                                $update = $this->db->query('update missingFaceMatchPayment set image3Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                            }
                        }
                    }
                    $this->session->set_flashdata('success', 'Record Updated Successfully');
                    return redirect( base_url().'NonKyc/editUnknownDetails?id='.$_POST['applicationNo'].'&pn=2');
                    
        
                }
                else
                {
                    $this->session->set_flashdata('error', 'No Update Try Again.');
                    return redirect( base_url().'NonKyc/editUnknownDetails?id='.$_POST['applicationNo']);
                }
            }
        }else{
            $mainphoto1 = '';
            $mainphoto2 = '';
            $imageId1 = '';
            $imageId2 = '';
            if($_POST['facematch1'] != '')
            {
                $data = $_POST["facematch1"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                $imageId1 = time().''.rand(0,10000);
                $mainphoto1 = 'upload/unknownperson/nonkyc/'.$imageId1.'.'.$split1[1];
                file_put_contents($mainphoto1, $data);
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_id" => $imageId1,
                    "image_url" => base_url().''.$mainphoto1
                ));
                curl_setopt_array($curl, array(
                    CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                    CURLOPT_RETURNTRANSFER => true,
                    CURLOPT_ENCODING => '',
                    CURLOPT_MAXREDIRS => 10,
                    CURLOPT_TIMEOUT => 0,
                    CURLOPT_FOLLOWLOCATION => true,
                    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                    CURLOPT_CUSTOMREQUEST => 'POST',
                    CURLOPT_POSTFIELDS => $postdata,
                    CURLOPT_HTTPHEADER => array(
                        'Content-Type: application/json',
                        'Authorization: '.$this->getSettings('facematchtoken')
                    ),
                ));
                
                $response = json_decode(curl_exec($curl),true);
                if(count($response) > 0)
                {
                    if($response['status'] == 200)
                    {
                        if($response['face_count'] != 1)
                        {
                            if($response['face_count'] > 1)
                            {
                                $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                return redirect( base_url().'NonKyc/upload_unknown_details');
                            }else{
                                $this->session->set_flashdata('error', 'No face found in the image');   
                                return redirect( base_url().'NonKyc/upload_unknown_details');
                            }
                        }
                    }
                }
            }
            if($_POST['facematch2'] != '')
            {
                $data = $_POST["facematch2"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                if($_FILES['Photo1']['name'] == '')
                {
                    $imageId1 = time().''.rand(0,10000);
                    $mainphoto1 = 'upload/unknownperson/nonkyc/'.$imageId2.'.'.$split1[1];
                    file_put_contents($mainphoto2, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId1,
                        "image_url" => base_url().''.$mainphoto1
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    
                    $response = json_decode(curl_exec($curl),true);   
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] != 1)
                            {
                                if($response['face_count'] > 1)
                                {
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/upload_unknown_details');
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/upload_unknown_details');
                                }
                            }
                        }
                    }
                }else{
                    $imageId2 = time().''.rand(0,10000);
                    $mainphoto2 = 'upload/unknownperson/nonkyc/'.$imageId2.'.'.$split1[1];
                    file_put_contents($mainphoto2, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId2,
                        "image_url" => base_url().''.$mainphoto2
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    
                    $response = json_decode(curl_exec($curl),true);   
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] != 1)
                            {
                                if($response['face_count'] > 1)
                                {
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/upload_unknown_details');
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/upload_unknown_details');
                                }
                            }
                        }
                    }
                }
            }
            $data = $_POST["facematch"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = time().''.rand(0,10000);
            $mainphoto = 'upload/unknownperson/nonkyc/'.$imageId.'.'.$split1[1];
            file_put_contents($mainphoto, $data);
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcakhoji4",
                "image_id" => $imageId,
                "image_url" => base_url().''.$mainphoto
            ));
            curl_setopt_array($curl, array(
                CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                CURLOPT_RETURNTRANSFER => true,
                CURLOPT_ENCODING => '',
                CURLOPT_MAXREDIRS => 10,
                CURLOPT_TIMEOUT => 0,
                CURLOPT_FOLLOWLOCATION => true,
                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                CURLOPT_CUSTOMREQUEST => 'POST',
                CURLOPT_POSTFIELDS => $postdata,
                CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken')
                ),
            ));
            
            $response = json_decode(curl_exec($curl),true);
            curl_close($curl);
            if(count($response) > 0)
            {
                if($response['status'] == 200)
                {
                    if($response['face_count'] == 1)
                    {
                        $Appli_no= $this->generateUnknownApplicationNumber();
                        $well1 = NULL;
                        $well2 = NULL;
                        $well3 = NULL;
                        $profileDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                        if($_SESSION['loginmob'] == $profileDetail[0]['registration_mobile'])
                        {
                            $well1 = $_SESSION['loginmob'];
                            if($profileDetail[0]['alternate_mobile1'] != NULL)
                            {
                                $well2 = $profileDetail[0]['alternate_mobile1'];
                            }else{
                                if($profileDetail[0]['alternate_mobile2'] != NULL)
                                {
                                    $well2 = $profileDetail[0]['alternate_mobile2'];
                                }
                            }
                            if($well2 != NULL)
                            {
                                if($profileDetail[0]['alternate_mobile1'] != NULL)
                                {
                                }else{
                                    if($profileDetail[0]['alternate_mobile2'] != NULL)
                                    {
                                        $well3 = $profileDetail[0]['alternate_mobile2'];
                                    }else{
                                        if($profileDetail[0]['alternate_mobile3'] != NULL)
                                        {
                                            $well3 = $profileDetail[0]['alternate_mobile3'];
                                        }
                                    }
                                }
                            }
                        }else{
                            if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile1'])
                            {
                                $well1 = $profileDetail[0]['alternate_mobile1'];
                                $well2 = $profileDetail[0]['registration_mobile'];
                                if($profileDetail[0]['alternate_mobile2'] != NULL)
                                {
                                    $well3 = $profileDetail[0]['alternate_mobile2'];
                                }else{
                                    if($profileDetail[0]['alternate_mobile3'] != NULL)
                                    {
                                        $well3 = $profileDetail[0]['alternate_mobile3'];
                                    }
                                }
                            }else{
                                if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile2'])
                                {
                                    $well1 = $profileDetail[0]['alternate_mobile2'];
                                    $well2 = $profileDetail[0]['registration_mobile'];
                                    if($profileDetail[0]['alternate_mobile1'] != NULL)
                                    {
                                        $well3 = $profileDetail[0]['alternate_mobile1'];
                                    }else{
                                        if($profileDetail[0]['alternate_mobile3'] != NULL)
                                        {
                                            $well3 = $profileDetail[0]['alternate_mobile3'];
                                        }
                                    }
                                }else{
                                    if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile3'])
                                    {
                                        $well1 = $profileDetail[0]['alternate_mobile3'];
                                        $well2 = $profileDetail[0]['registration_mobile'];
                                        if($profileDetail[0]['alternate_mobile1'] != NULL)
                                        {
                                            $well3 = $profileDetail[0]['alternate_mobile1'];
                                        }else{
                                            if($profileDetail[0]['alternate_mobile2'] != NULL)
                                            {
                                                $well3 = $profileDetail[0]['alternate_mobile2'];
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        $getIfFreeCredit = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                        $isFree = 0;
                        if(count($getIfFreeCredit) > 0)
                        {
                            if($getIfFreeCredit[0]['freeUnknownCreditUsed'] == NULL || $getIfFreeCredit[0]['freeUnknownCreditUsed'] < 10)
                            {
                                $isFree = 1;
                            }
                        }
                        $insertdata = array(
                            'well1' => $well1,
                            'well2' => NULL,
                            'well3' => NULL,
                            'dateCreated' => date('Y-m-d H:i:s A'),
                            'imageId' => $imageId,
                            'imageId1' => ($imageId1 != '' ? $imageId1 : NULL),
                            'imageId2' => ($imageId2 != '' ? $imageId2 : NULL),
                            'awsEventName' => 'Unknown',
                            'aadharNumber' => $_POST['aadharNumber'],
                            'PAN' => $_POST['PAN'],
                            'DL_no' => $_POST['DL_no'],
                            'voter_id' => $_POST['voter_id'],
                            'person_name' => $_POST['person_name'],
                            'Religion' => $_POST['Religion'],
                            'vehicle_no' => $_POST['vehicle_no'],
                            'state' => $_POST['state'],
                            'district' => $_POST['district'],
                            'city' => $_POST['city'],
                            'Age' => $_POST['Age'],
                            'userId' => $_SESSION['user_id'],
                            'isKyc' => 0,
                            'uploaded_by'=>'user',
                            'Height' => $_POST['Height'],
                            'Mental_status' => $_POST['Mental'],
                            'Message' => $_POST['Message'],
                            'vehicle_no' => $_POST['vehicle_no'],
                            'Photo' => $mainphoto,
                            'Photo1' => ($mainphoto1 != '' ? $mainphoto1 : NULL),
                            'Photo2' => ($mainphoto2 != '' ? $mainphoto2 : NULL),
                            'Application_no' =>  $Appli_no,
                            'Gender' => $_POST['Gender'],
                            'isFree' => $isFree,
                            'rescueDate' => $_POST['rescueDate']
                        );
                        $in=$this->db->insert('unknown_person',$insertdata);
                        if($in)
                        {
                            $_SESSION['unknownId'] = $unkwownId = $this->db->insert_id();
                            $vectorizerData = array(
                                'unknownId' => $unkwownId,
                                'imageStatus' => 'Pending',
                                'uploadTime' => $insertdata['dateCreated'],
                                'isUpload' => 1
                            );
                            $this->db->insert('indexer',$vectorizerData);
                            if($_POST['goldCount']  > 0)
                            {
                                for($i=1;$i<=$_POST['goldCount'];$i++)
                                {
                                    $goldData = array(
                                        'unknownId' => $_SESSION['unknownId'],
                                        'goldType' => $_POST['goldType'.$i],
                                        'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                    );
                                    $this->db->insert('unknownPersonGold',$goldData);
                                }
                            }
                            $this->session->set_flashdata('success', 'Record Successfully Saved.  - '. $Appli_no);
                            return redirect( base_url().'NonKyc/editUnknownDetails?id='.$Appli_no.'&pn=2');
                            
                
                        }
                        else
                        {
                            $this->session->set_flashdata('error', 'No Insert Try Again.');
                            return redirect( base_url().'NonKyc/upload_unknown_details');
                        }
                    }else{
                        if($response['face_count'] > 1)
                        {
                            $this->session->set_flashdata('error', 'Multiple faces detected in image');
                            return redirect( base_url().'NonKyc/upload_unknown_details');
                        }else{
                            $this->session->set_flashdata('error', 'No face found in the image');   
                            return redirect( base_url().'NonKyc/upload_unknown_details');
                        }
                    }
                }else{
                    $this->session->set_flashdata('error', 'Please upload valid face match image');
                    return redirect( base_url().'NonKyc/upload_unknown_details');
                }   
            }else{
                $this->session->set_flashdata('error', 'Please upload valid face match image');
                return redirect( base_url().'NonKyc/upload_unknown_details');
            }   
        }
    }

    function uploadUnknownNew()
    {
        $algoSentTime = date('Y-m-d H:i:s A');
        if(isset($_POST['id']))
        {
            if($_FILES['Photo']['name'] != '')
            {
                $getOldDetail = $this->db->query('select * from unknown_person where id='.$_POST['id'])->result_array();
                $mainphoto1 = '';
                $mainphoto2 = '';
                $imageId1 = '';
                $imageId2 = '';
                if($_FILES['Photo1']['name'] != '')
                {
                    $data = $_POST["facematch1"];
                    $image_array_1 = explode(";", $data);
                    $split1 = explode('data:image/',$image_array_1[0]);
                    $image_array_2 = explode(",", $image_array_1[1]);
                    $data = base64_decode($image_array_2[1]);
                    $imageId1 = time().''.rand(0,10000);
                    $mainphoto1 = 'upload/unknownperson/nonkyc/'.$imageId1.'.'.$split1[1];
                    file_put_contents($mainphoto1, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId1,
                        "image_url" => base_url().''.$mainphoto1
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    
                    $response = json_decode(curl_exec($curl),true);
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] != 1)
                            {
                                if($response['face_count'] > 1)
                                {
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$_POST['applicationNo']);
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$_POST['applicationNo']);
                                }
                            }
                        }
                    }
                }else{
                    $imageId1 = ($getOldDetail[0]['imageId1'] == NULL ? ($getOldDetail[0]['imageId2'] != NULL ? $getOldDetail[0]['imageId2'] : '') : $getOldDetail[0]['imageId1']);
                        $mainphoto1 = ($getOldDetail[0]['Photo1'] == NULL ? ($getOldDetail[0]['Photo2'] != NULL ? $getOldDetail[0]['Photo2'] : '') : $getOldDetail[0]['Photo1']);
                }
                if($_FILES['Photo2']['name'] != '')
                {
                    $data = $_POST["facematch2"];
                    $image_array_1 = explode(";", $data);
                    $split1 = explode('data:image/',$image_array_1[0]);
                    $image_array_2 = explode(",", $image_array_1[1]);
                    $data = base64_decode($image_array_2[1]);
                    $imageId2 = time().''.rand(0,10000);
                    $mainphoto2 = 'upload/unknownperson/nonkyc/'.$imageId2.'.'.$split1[1];
                    file_put_contents($mainphoto2, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId2,
                        "image_url" => base_url().''.$mainphoto2
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    
                    $response = json_decode(curl_exec($curl),true);   
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] != 1)
                            {
                                if($response['face_count'] > 1)
                                {
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$_POST['applicationNo']);
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$_POST['applicationNo']);
                                }
                            }
                        }
                    }
                }else{
                    $imageId2 = ($imageId1 == '' ? ($getOldDetail[0]['imageId2'] != NULL ? $getOldDetail[0]['imageId2'] : NULL) : $getOldDetail[0]['imageId2']);
                    $mainphoto2 = ($mainphoto1 == '' ? ($getOldDetail[0]['Photo2'] != NULL ? $getOldDetail[0]['Photo2'] : NULL) : $getOldDetail[0]['Photo2']);
                }
                $data = $_POST["facematch"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                $imageId = time().''.rand(0,10000);
                $mainphoto = 'upload/unknownperson/nonkyc/'.$imageId.'.'.$split1[1];
                file_put_contents($mainphoto, $data);
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_id" => $imageId,
                    "image_url" => base_url().''.$mainphoto
                ));
                curl_setopt_array($curl, array(
                    CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                    CURLOPT_RETURNTRANSFER => true,
                    CURLOPT_ENCODING => '',
                    CURLOPT_MAXREDIRS => 10,
                    CURLOPT_TIMEOUT => 0,
                    CURLOPT_FOLLOWLOCATION => true,
                    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                    CURLOPT_CUSTOMREQUEST => 'POST',
                    CURLOPT_POSTFIELDS => $postdata,
                    CURLOPT_HTTPHEADER => array(
                        'Content-Type: application/json',
                        'Authorization: '.$this->getSettings('facematchtoken')
                    ),
                ));
                
                $response = json_decode(curl_exec($curl),true);
                $dateCreated = date('Y-m-d H:i:s A');
                curl_close($curl);
                if(count($response) > 0)
                {
                    if($response['status'] == 200)
                    {
                        if($response['face_count'] == 1)
                        {
                            $insertdata = array(
                                'imageId' => $imageId,
                                'imageId1' => $imageId1,
                                'imageId2' => $imageId2,
                                'awsEventName' => 'Unknown',
                                'person_name' => $_POST['person_name'],
                                'aadharNumber' => $_POST['aadharNumber'],
                                'PAN' => $_POST['PAN'],
                                'Photo' => $mainphoto,
                                'Photo1' => $mainphoto1,
                                'Photo2' => $mainphoto2,
                                'DL_no' => $_POST['DL_no'],
                                'voter_id' => $_POST['voter_id'],
                                'Gender' => $_POST['Gender'],
                                'Religion' => $_POST['Religion'],
                                'vehicle_no' => $_POST['vehicle_no'],
                                'state' => $_POST['state'],
                                'district' => $_POST['district'],
                                'city' => $_POST['city'],
                                'Age' => $_POST['Age'],
                                'Height' => $_POST['Height'],
                                'Mental_status' => $_POST['Mental'],
                                'Message' => $_POST['Message'],
                                'vehicle_no' => $_POST['vehicle_no'],
                                'rescueDate' => $_POST['rescueDate']
                            );
                            $this->db->where('id',$_POST['id']);
                            $in=$this->db->update('unknown_person',$insertdata);
                            if($in)
                            {
                                if(!isset($response))
                                {
                                    $response = array();
                                }
                                $vectorizerData = array(
                                    'unknownId' => $_POST['id'],
                                    'imageStatus' => 'Pending',
                                    'uploadTime' => $dateCreated,
                                    'isUpload' => 0
                                );
                                $this->db->insert('indexer',$vectorizerData);
                                if($_POST['goldCount']  > 0)
                                {
                                    for($i=1;$i<=$_POST['goldCount'];$i++)
                                    {
                                        if(isset($_POST['oldId'.$i]))
                                        {
                                            $goldData = array(
                                                'unknownId' => $_POST['id'],
                                                'goldType' => $_POST['goldType'.$i],
                                                'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                            );
                                            $this->db->where('Id',$_POST['oldId'.$i]);
                                            $this->db->update('unknownPersonGold',$goldData);
                                        }else{
                                            $goldData = array(
                                                'unknownId' => $_POST['id'],
                                                'goldType' => $_POST['goldType'.$i],
                                                'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                            );
                                            $this->db->insert('unknownPersonGold',$goldData);   
                                        }
                                    }
                                }
                                $getPreviousPaymentDetail = $this->db->query('select * from missingFaceMatchPayment where unknownId='.$_POST['id'].' and paymentStatus=1 order by Id desc')->result_array();
                                if(count($getPreviousPaymentDetail) > 0)
                                {
                                    $isFirstUploaded = 'lock';
                                    $isFirstUploaded = 1;
                                    $imageCount = 1;
                                    if($_FILES['Photo1']['name'] != '')
                                    {
                                        $isSecondUploaded = 'lock';
                                        $imageCount += 1;
                                    }
                                    if($_FILES['Photo2']['name'] != '')
                                    {
                                        $isThirdUploaded = 'lock';
                                        $imageCount += 1;
                                    }
                                    if(isset($isSecondUploaded))
                                    {
                                        if(isset($isThirdUploaded))
                                        {
                                            $update = $this->db->query('update missingFaceMatchPayment set image2Status = "lock", image3Status = "lock", image1Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                                        }else{
                                            $update = $this->db->query('update missingFaceMatchPayment set image2Status = "lock", image1Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                                        }
                                    }else{
                                        if(isset($isThirdUploaded))
                                        {
                                            $update = $this->db->query('update missingFaceMatchPayment set image3Status = "lock", image1Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                                        }else{
                                            $update = $this->db->query('update missingFaceMatchPayment set image1Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                                        }
                                    }
                                }
                                $this->session->set_flashdata('success', 'Record Updated Successfully');
                                return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$_POST['applicationNo'].'&pn=2');
                            }
                            else
                            {
                                $this->session->set_flashdata('error', 'No Update Try Again.');
                                return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$_POST['applicationNo']);
                            }
                        }else{
                            if($response['face_count'] > 1)
                            {
                                $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$_POST['applicationNo']);
                            }else{
                                $this->session->set_flashdata('error', 'No face found in the image');   
                                return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$_POST['applicationNo']);
                            }
                        }
                    }else{
                        $this->session->set_flashdata('error', 'Please upload valid face match image');
                        return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$_POST['applicationNo']);
                    }   
                }else{
                    $this->session->set_flashdata('error', 'Please upload valid face match image');
                    return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$_POST['applicationNo']);
                }
            }else{
                $mainphoto1 = '';
                $mainphoto2 = '';
                $imageId1 = '';
                $imageId2 = '';
                $getOldDetail = $this->db->query('select * from unknown_person where id='.$_POST['id'])->result_array();
                if($_FILES['Photo1']['name'] != '')
                {
                    $data = $_POST["facematch1"];
                    $image_array_1 = explode(";", $data);
                    $split1 = explode('data:image/',$image_array_1[0]);
                    $image_array_2 = explode(",", $image_array_1[1]);
                    $data = base64_decode($image_array_2[1]);
                    $imageId1 = time().''.rand(0,10000);
                    $mainphoto1 = 'upload/unknownperson/nonkyc/'.$imageId1.'.'.$split1[1];
                    file_put_contents($mainphoto1, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId1,
                        "image_url" => base_url().''.$mainphoto1
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    
                    $response = json_decode(curl_exec($curl),true);
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] != 1)
                            {
                                if($response['face_count'] > 1)
                                {
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$_POST['applicationNo']);
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$_POST['applicationNo']);
                                }
                            }
                        }
                    }
                }else{
                    $imageId1 = $getOldDetail[0]['imageId1'];
                    $mainphoto1 = $getOldDetail[0]['Photo1'];
                }
                if($_FILES['Photo2']['name'] != '')
                {
                    $data = $_POST["facematch2"];
                    $image_array_1 = explode(";", $data);
                    $split1 = explode('data:image/',$image_array_1[0]);
                    $image_array_2 = explode(",", $image_array_1[1]);
                    $data = base64_decode($image_array_2[1]);
                    $imageId2 = time().''.rand(0,10000);
                    $mainphoto2 = 'upload/unknownperson/nonkyc/'.$imageId2.'.'.$split1[1];
                    file_put_contents($mainphoto2, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId2,
                        "image_url" => base_url().''.$mainphoto2
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    
                    $response = json_decode(curl_exec($curl),true);   
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] != 1)
                            {
                                if($response['face_count'] > 1)
                                {
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$_POST['applicationNo']);
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$_POST['applicationNo']);
                                }
                            }
                        }
                    }
                }else{
                    $imageId2 = $getOldDetail[0]['imageId2'];
                    $mainphoto2 = $getOldDetail[0]['Photo2'];
                }
                $dateCreated = date('Y-m-d H:i:s A');
                $insertdata = array(
                    'imageId1' => $imageId1,
                    'imageId2' => $imageId2,
                    'aadharNumber' => $_POST['aadharNumber'],
                    'PAN' => $_POST['PAN'],
                    'Photo1' => $mainphoto1,
                    'Photo2' => $mainphoto2,
                    'DL_no' => $_POST['DL_no'],
                    'voter_id' => $_POST['voter_id'],
                    'Religion' => $_POST['Religion'],
                    'person_name' => $_POST['person_name'],
                    'vehicle_no' => $_POST['vehicle_no'],
                    'Gender' => $_POST['Gender'],
                    'state' => $_POST['state'],
                    'district' => $_POST['district'],
                    'city' => $_POST['city'],
                    'Age' => $_POST['Age'],
                    'Height' => $_POST['Height'],
                    'Mental_status' => $_POST['Mental'],
                    'Message' => $_POST['Message'],
                    'vehicle_no' => $_POST['vehicle_no'],
                    'rescueDate' => $_POST['rescueDate']
                );
                $this->db->where('id',$_POST['id']);
                $in=$this->db->update('unknown_person',$insertdata);
                if($in)
                {
                    if(!isset($response))
                    {
                        $response = array();
                    }
                    $vectorizerData = array(
                        'unknownId' => $_POST['id'],
                        'imageStatus' => 'Pending',
                        'uploadTime' => $dateCreated,
                        'isUpload' => 0
                    );
                    $this->db->insert('indexer',$vectorizerData);
                    if($_POST['goldCount']  > 0)
                    {
                        for($i=1;$i<=$_POST['goldCount'];$i++)
                        {
                            if(isset($_POST['oldId'.$i]))
                            {
                                $goldData = array(
                                    'unknownId' => $_POST['id'],
                                    'goldType' => $_POST['goldType'.$i],
                                    'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                );
                                $this->db->where('Id',$_POST['oldId'.$i]);
                                $this->db->update('unknownPersonGold',$goldData);
                            }else{
                                $goldData = array(
                                    'unknownId' => $_POST['id'],
                                    'goldType' => $_POST['goldType'.$i],
                                    'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                );
                                $this->db->insert('unknownPersonGold',$goldData);   
                            }
                        }
                    }
                    $getPreviousPaymentDetail = $this->db->query('select * from missingFaceMatchPayment where unknownId='.$_POST['id'].' and paymentStatus=1 order by Id desc')->result_array();
                    if(count($getPreviousPaymentDetail) > 0)
                    {
                        $imageCount = 1;
                        if($_FILES['Photo1']['name'] != '')
                        {
                            $isSecondUploaded = 'lock';
                            $imageCount += 1;
                        }
                        if($_FILES['Photo2']['name'] != '')
                        {
                            $isThirdUploaded = 'lock';
                            $imageCount += 1;
                        }
                        if(isset($isSecondUploaded))
                        {
                            if(isset($isThirdUploaded))
                            {
                                $update = $this->db->query('update missingFaceMatchPayment set image2Status = "lock", image3Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                            }else{
                                $update = $this->db->query('update missingFaceMatchPayment set image2Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                            }
                        }else{
                            if(isset($isThirdUploaded))
                            {
                                $update = $this->db->query('update missingFaceMatchPayment set image3Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                            }
                        }
                    }
                    $this->session->set_flashdata('success', 'Record Updated Successfully');
                    return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$_POST['applicationNo'].'&pn=2');
                    
        
                }
                else
                {
                    $this->session->set_flashdata('error', 'No Update Try Again.');
                    return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$_POST['applicationNo']);
                }
            }
        }else{
            $mainphoto1 = '';
            $mainphoto2 = '';
            $imageId1 = '';
            $imageId2 = '';
            if($_POST['facematch1'] != '')
            {
                $data = $_POST["facematch1"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                $imageId1 = time().''.rand(0,10000);
                $mainphoto1 = 'upload/unknownperson/nonkyc/'.$imageId1.'.'.$split1[1];
                file_put_contents($mainphoto1, $data);
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_id" => $imageId1,
                    "image_url" => base_url().''.$mainphoto1
                ));
                curl_setopt_array($curl, array(
                    CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                    CURLOPT_RETURNTRANSFER => true,
                    CURLOPT_ENCODING => '',
                    CURLOPT_MAXREDIRS => 10,
                    CURLOPT_TIMEOUT => 0,
                    CURLOPT_FOLLOWLOCATION => true,
                    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                    CURLOPT_CUSTOMREQUEST => 'POST',
                    CURLOPT_POSTFIELDS => $postdata,
                    CURLOPT_HTTPHEADER => array(
                        'Content-Type: application/json',
                        'Authorization: '.$this->getSettings('facematchtoken')
                    ),
                ));
                
                $response = json_decode(curl_exec($curl),true);
                if(count($response) > 0)
                {
                    if($response['status'] == 200)
                    {
                        if($response['face_count'] != 1)
                        {
                            if($response['face_count'] > 1)
                            {
                                $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                return redirect( base_url().'NonKyc/upload_unknown_details_new');
                            }else{
                                $this->session->set_flashdata('error', 'No face found in the image');   
                                return redirect( base_url().'NonKyc/upload_unknown_details_new');
                            }
                        }
                    }
                }
            }
            if($_POST['facematch2'] != '')
            {
                $data = $_POST["facematch2"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                if($_FILES['Photo1']['name'] == '')
                {
                    $imageId1 = time().''.rand(0,10000);
                    $mainphoto1 = 'upload/unknownperson/nonkyc/'.$imageId2.'.'.$split1[1];
                    file_put_contents($mainphoto2, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId1,
                        "image_url" => base_url().''.$mainphoto1
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    
                    $response = json_decode(curl_exec($curl),true);   
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] != 1)
                            {
                                if($response['face_count'] > 1)
                                {
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/upload_unknown_details_new');
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/upload_unknown_details_new');
                                }
                            }
                        }
                    }
                }else{
                    $imageId2 = time().''.rand(0,10000);
                    $mainphoto2 = 'upload/unknownperson/nonkyc/'.$imageId2.'.'.$split1[1];
                    file_put_contents($mainphoto2, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId2,
                        "image_url" => base_url().''.$mainphoto2
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    
                    $response = json_decode(curl_exec($curl),true);   
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] != 1)
                            {
                                if($response['face_count'] > 1)
                                {
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/upload_unknown_details_new');
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/upload_unknown_details_new');
                                }
                            }
                        }
                    }
                }
            }
            $data = $_POST["facematch"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = time().''.rand(0,10000);
            $mainphoto = 'upload/unknownperson/nonkyc/'.$imageId.'.'.$split1[1];
            file_put_contents($mainphoto, $data);
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcakhoji4",
                "image_id" => $imageId,
                "image_url" => base_url().''.$mainphoto
            ));
            curl_setopt_array($curl, array(
                CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                CURLOPT_RETURNTRANSFER => true,
                CURLOPT_ENCODING => '',
                CURLOPT_MAXREDIRS => 10,
                CURLOPT_TIMEOUT => 0,
                CURLOPT_FOLLOWLOCATION => true,
                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                CURLOPT_CUSTOMREQUEST => 'POST',
                CURLOPT_POSTFIELDS => $postdata,
                CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken')
                ),
            ));
            
            $response = json_decode(curl_exec($curl),true);
            curl_close($curl);
            if(count($response) > 0)
            {
                if($response['status'] == 200)
                {
                    if($response['face_count'] == 1)
                    {
                        $Appli_no= $this->generateUnknownApplicationNumber();
                        $well1 = NULL;
                        $well2 = NULL;
                        $well3 = NULL;
                        $profileDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                        if($_SESSION['loginmob'] == $profileDetail[0]['registration_mobile'])
                        {
                            $well1 = $_SESSION['loginmob'];
                            if($profileDetail[0]['alternate_mobile1'] != NULL)
                            {
                                $well2 = $profileDetail[0]['alternate_mobile1'];
                            }else{
                                if($profileDetail[0]['alternate_mobile2'] != NULL)
                                {
                                    $well2 = $profileDetail[0]['alternate_mobile2'];
                                }
                            }
                            if($well2 != NULL)
                            {
                                if($profileDetail[0]['alternate_mobile1'] != NULL)
                                {
                                }else{
                                    if($profileDetail[0]['alternate_mobile2'] != NULL)
                                    {
                                        $well3 = $profileDetail[0]['alternate_mobile2'];
                                    }else{
                                        if($profileDetail[0]['alternate_mobile3'] != NULL)
                                        {
                                            $well3 = $profileDetail[0]['alternate_mobile3'];
                                        }
                                    }
                                }
                            }
                        }else{
                            if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile1'])
                            {
                                $well1 = $profileDetail[0]['alternate_mobile1'];
                                $well2 = $profileDetail[0]['registration_mobile'];
                                if($profileDetail[0]['alternate_mobile2'] != NULL)
                                {
                                    $well3 = $profileDetail[0]['alternate_mobile2'];
                                }else{
                                    if($profileDetail[0]['alternate_mobile3'] != NULL)
                                    {
                                        $well3 = $profileDetail[0]['alternate_mobile3'];
                                    }
                                }
                            }else{
                                if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile2'])
                                {
                                    $well1 = $profileDetail[0]['alternate_mobile2'];
                                    $well2 = $profileDetail[0]['registration_mobile'];
                                    if($profileDetail[0]['alternate_mobile1'] != NULL)
                                    {
                                        $well3 = $profileDetail[0]['alternate_mobile1'];
                                    }else{
                                        if($profileDetail[0]['alternate_mobile3'] != NULL)
                                        {
                                            $well3 = $profileDetail[0]['alternate_mobile3'];
                                        }
                                    }
                                }else{
                                    if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile3'])
                                    {
                                        $well1 = $profileDetail[0]['alternate_mobile3'];
                                        $well2 = $profileDetail[0]['registration_mobile'];
                                        if($profileDetail[0]['alternate_mobile1'] != NULL)
                                        {
                                            $well3 = $profileDetail[0]['alternate_mobile1'];
                                        }else{
                                            if($profileDetail[0]['alternate_mobile2'] != NULL)
                                            {
                                                $well3 = $profileDetail[0]['alternate_mobile2'];
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        $getIfFreeCredit = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                        $isFree = 0;
                        if(count($getIfFreeCredit) > 0)
                        {
                            if($getIfFreeCredit[0]['freeUnknownCreditUsed'] == NULL || $getIfFreeCredit[0]['freeUnknownCreditUsed'] < 10)
                            {
                                $isFree = 1;
                            }
                        }
                        $insertdata = array(
                            'well1' => $well1,
                            'well2' => NULL,
                            'well3' => NULL,
                            'dateCreated' => date('Y-m-d H:i:s A'),
                            'imageId' => $imageId,
                            'imageId1' => ($imageId1 != '' ? $imageId1 : NULL),
                            'imageId2' => ($imageId2 != '' ? $imageId2 : NULL),
                            'awsEventName' => 'Unknown',
                            'aadharNumber' => $_POST['aadharNumber'],
                            'PAN' => $_POST['PAN'],
                            'DL_no' => $_POST['DL_no'],
                            'voter_id' => $_POST['voter_id'],
                            'person_name' => $_POST['person_name'],
                            'Religion' => $_POST['Religion'],
                            'vehicle_no' => $_POST['vehicle_no'],
                            'state' => $_POST['state'],
                            'district' => $_POST['district'],
                            'city' => $_POST['city'],
                            'Age' => $_POST['Age'],
                            'userId' => $_SESSION['user_id'],
                            'isKyc' => 0,
                            'uploaded_by'=>'user',
                            'Height' => $_POST['Height'],
                            'Mental_status' => $_POST['Mental'],
                            'Message' => $_POST['Message'],
                            'vehicle_no' => $_POST['vehicle_no'],
                            'Photo' => $mainphoto,
                            'Photo1' => ($mainphoto1 != '' ? $mainphoto1 : NULL),
                            'Photo2' => ($mainphoto2 != '' ? $mainphoto2 : NULL),
                            'Application_no' =>  $Appli_no,
                            'Gender' => $_POST['Gender'],
                            'isFree' => $isFree,
                            'rescueDate' => $_POST['rescueDate']
                        );
                        $in=$this->db->insert('unknown_person',$insertdata);
                        if($in)
                        {
                            $_SESSION['unknownId'] = $unkwownId = $this->db->insert_id();
                            $vectorizerData = array(
                                'unknownId' => $unkwownId,
                                'imageStatus' => 'Pending',
                                'uploadTime' => $insertdata['dateCreated'],
                                'isUpload' => 1
                            );
                            $this->db->insert('indexer',$vectorizerData);
                            if($_POST['goldCount']  > 0)
                            {
                                for($i=1;$i<=$_POST['goldCount'];$i++)
                                {
                                    $goldData = array(
                                        'unknownId' => $_SESSION['unknownId'],
                                        'goldType' => $_POST['goldType'.$i],
                                        'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                    );
                                    $this->db->insert('unknownPersonGold',$goldData);
                                }
                            }
                            $this->session->set_flashdata('success', 'Record Successfully Saved.  - '. $Appli_no);
                            return redirect( base_url().'NonKyc/editUnknownDetailsNew?id='.$Appli_no.'&pn=2');
                            
                
                        }
                        else
                        {
                            $this->session->set_flashdata('error', 'No Insert Try Again.');
                            return redirect( base_url().'NonKyc/upload_unknown_details_new');
                        }
                    }else{
                        if($response['face_count'] > 1)
                        {
                            $this->session->set_flashdata('error', 'Multiple faces detected in image');
                            return redirect( base_url().'NonKyc/upload_unknown_details_new');
                        }else{
                            $this->session->set_flashdata('error', 'No face found in the image');   
                            return redirect( base_url().'NonKyc/upload_unknown_details_new');
                        }
                    }
                }else{
                    $this->session->set_flashdata('error', 'Please upload valid face match image');
                    return redirect( base_url().'NonKyc/upload_unknown_details_new');
                }   
            }else{
                $this->session->set_flashdata('error', 'Please upload valid face match image');
                return redirect( base_url().'NonKyc/upload_unknown_details_new');
            }   
        }
    }
    
    function lapatawith()
    {
        if(isset($_SESSION['landingMob']))
        {
            $algoSentTime = date('Y-m-d H:i:s A');
            if(isset($_POST['id']) && $_POST['id'] != '')
            {
                if($_FILES['Photo']['name'] != '')
                {
                    $getOldDetail = $this->db->query('select * from unknown_person where id='.$_POST['id'])->result_array();
                    $mainphoto1 = '';
                    $mainphoto2 = '';
                    $imageId1 = '';
                    $imageId2 = '';
                    if($_FILES['Photo1']['name'] != '')
                    {
                        $data = $_POST["facematch1"];
                        $image_array_1 = explode(";", $data);
                        $split1 = explode('data:image/',$image_array_1[0]);
                        $image_array_2 = explode(",", $image_array_1[1]);
                        $data = base64_decode($image_array_2[1]);
                        $imageId1 = 'LAP_'.time().''.rand(0,10000);
                        $mainphoto1 = 'upload/lapataperson/nonkyc/'.$imageId1.'.'.$split1[1];
                        file_put_contents($mainphoto1, $data);
                        $curl = curl_init();
                        $postdata = json_encode(array(
                            "collection_id" => "shivaguptabcakhoji4",
                            "image_id" => $imageId1,
                            "image_url" => base_url().''.$mainphoto1
                        ));
                        curl_setopt_array($curl, array(
                            CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                            CURLOPT_RETURNTRANSFER => true,
                            CURLOPT_ENCODING => '',
                            CURLOPT_MAXREDIRS => 10,
                            CURLOPT_TIMEOUT => 0,
                            CURLOPT_FOLLOWLOCATION => true,
                            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                            CURLOPT_CUSTOMREQUEST => 'POST',
                            CURLOPT_POSTFIELDS => $postdata,
                            CURLOPT_HTTPHEADER => array(
                                'Content-Type: application/json',
                                'Authorization: '.$this->getSettings('facematchtoken')
                            ),
                        ));
                        
                        $response = json_decode(curl_exec($curl),true);
                        if(count($response) > 0)
                        {
                            if($response['status'] == 200)
                            {
                                if($response['face_count'] != 1)
                                {
                                    if($response['face_count'] > 1)
                                    {
                                        $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                        return redirect( base_url().'NonKyc/editLapataDetails?id='.$_POST['applicationNo']);
                                    }else{
                                        $this->session->set_flashdata('error', 'No face found in the image');   
                                        return redirect( base_url().'NonKyc/editLapataDetails?id='.$_POST['applicationNo']);
                                    }
                                }
                            }
                        }
                    }else{
                        $imageId1 = ($getOldDetail[0]['imageId1'] == NULL ? ($getOldDetail[0]['imageId2'] != NULL ? $getOldDetail[0]['imageId2'] : '') : $getOldDetail[0]['imageId1']);
                        $mainphoto1 = ($getOldDetail[0]['Photo1'] == NULL ? ($getOldDetail[0]['Photo2'] != NULL ? $getOldDetail[0]['Photo2'] : '') : $getOldDetail[0]['Photo1']);
                    }
                    if($_FILES['Photo2']['name'] != '')
                    {
                        $data = $_POST["facematch2"];
                        $image_array_1 = explode(";", $data);
                        $split1 = explode('data:image/',$image_array_1[0]);
                        $image_array_2 = explode(",", $image_array_1[1]);
                        $data = base64_decode($image_array_2[1]);
                        if($imageId1 == '')
                        {
                            $imageId1 = 'LAP_'.time().''.rand(0,10000);
                            $mainphoto1 = 'upload/lapataperson/nonkyc/'.$imageId1.'.'.$split1[1];
                            file_put_contents($mainphoto1, $data);
                            $curl = curl_init();
                            $postdata = json_encode(array(
                                "collection_id" => "shivaguptabcakhoji4",
                                "image_id" => $imageId1,
                                "image_url" => base_url().''.$mainphoto1
                            ));
                        }else{
                            $imageId2 = 'LAP_'.time().''.rand(0,10000);
                            $mainphoto2 = 'upload/lapataperson/nonkyc/'.$imageId2.'.'.$split1[1];
                            file_put_contents($mainphoto2, $data);
                            $curl = curl_init();
                            $postdata = json_encode(array(
                                "collection_id" => "shivaguptabcakhoji4",
                                "image_id" => $imageId2,
                                "image_url" => base_url().''.$mainphoto2
                            ));
                        }
                        curl_setopt_array($curl, array(
                            CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                            CURLOPT_RETURNTRANSFER => true,
                            CURLOPT_ENCODING => '',
                            CURLOPT_MAXREDIRS => 10,
                            CURLOPT_TIMEOUT => 0,
                            CURLOPT_FOLLOWLOCATION => true,
                            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                            CURLOPT_CUSTOMREQUEST => 'POST',
                            CURLOPT_POSTFIELDS => $postdata,
                            CURLOPT_HTTPHEADER => array(
                                'Content-Type: application/json',
                                'Authorization: '.$this->getSettings('facematchtoken')
                            ),
                        ));
                        
                        $response = json_decode(curl_exec($curl),true);   
                        if(count($response) > 0)
                        {
                            if($response['status'] == 200)
                            {
                                if($response['face_count'] != 1)
                                {
                                    if($response['face_count'] > 1)
                                    {
                                        $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                        return redirect( base_url().'NonKyc/editLapataDetails?id='.$_POST['applicationNo']);
                                    }else{
                                        $this->session->set_flashdata('error', 'No face found in the image');   
                                        return redirect( base_url().'NonKyc/editLapataDetails?id='.$_POST['applicationNo']);
                                    }
                                }
                            }
                        }
                    }else{
                        $imageId2 = ($imageId1 == '' ? ($getOldDetail[0]['imageId2'] != NULL ? $getOldDetail[0]['imageId2'] : NULL) : $getOldDetail[0]['imageId2']);
                        $mainphoto2 = ($mainphoto1 == '' ? ($getOldDetail[0]['Photo2'] != NULL ? $getOldDetail[0]['Photo2'] : NULL) : $getOldDetail[0]['Photo2']);
                    }
                    $data = $_POST["facematch"];
                    $image_array_1 = explode(";", $data);
                    $split1 = explode('data:image/',$image_array_1[0]);
                    $image_array_2 = explode(",", $image_array_1[1]);
                    $data = base64_decode($image_array_2[1]);
                    $imageId = 'LAP_'.time().''.rand(0,10000);
                    $mainphoto = 'upload/lapataperson/nonkyc/'.$imageId.'.'.$split1[1];
                    file_put_contents($mainphoto, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId,
                        "image_url" => base_url().''.$mainphoto
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    
                    $response = json_decode(curl_exec($curl),true);
                    curl_close($curl);
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] == 1)
                            {
                                $dateCreated = date('Y-m-d H:i:s A');
                                $insertdata = array(
                                    'imageId' => $imageId,
                                    'imageId1' => $imageId1,
                                    'imageId2' => $imageId2,
                                    'awsEventName' => 'All',
                                    'aadharNumber' => $_POST['aadharNumber'],
                                    'Gender' => $_POST['Gender'],
                                    'PAN' => $_POST['PAN'],
                                    'Photo' =>  $mainphoto,
                                    'missingDate' => $_POST['dateCreated'],
                                    'Photo1' => $mainphoto1,
                                    'Photo2' => $mainphoto2,
                                    'DL_no' => $_POST['DL_no'],
                                    'voter_id' => $_POST['voter_id'],
                                    'person_name' => $_POST['person_name'],
                                    'Religion' => $_POST['Religion'],
                                    'vehicle_no' => $_POST['vehicle_no'],
                                    'state' => $_POST['state'],
                                    'district' => $_POST['district'],
                                    'city' => $_POST['city'],
                                    'Age' => $_POST['Age'],
                                    'Height' => $_POST['Height'],
                                    'Mental_status' => $_POST['Mental'],
                                    'Message' => $_POST['Message'],
                                    'vehicle_no' => $_POST['vehicle_no'],
                                );
                                $this->db->where('id',$_POST['id']);
                                $in=$this->db->update('unknown_person',$insertdata);
                                if($in)
                                {
                                    if(!isset($response))
                                    {
                                        $response = array();
                                    }
                                    $vectorizerData = array(
                                        'unknownId' => $_POST['id'],
                                        'imageStatus' => 'Pending',
                                        'uploadTime' => $dateCreated,
                                        'isUpload' => 0
                                    );
                                    $this->db->insert('indexer',$vectorizerData);
                                    if($_POST['goldCount']  > 0)
                                    {
                                        for($i=1;$i<=$_POST['goldCount'];$i++)
                                        {
                                            if(isset($_POST['oldId'.$i]))
                                            {
                                                $goldData = array(
                                                    'unknownId' => $_POST['id'],
                                                    'goldType' => $_POST['goldType'.$i],
                                                    'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                                );
                                                $this->db->where('Id',$_POST['oldId'.$i]);
                                                $this->db->update('unknownPersonGold',$goldData);
                                            }else{
                                                $goldData = array(
                                                    'unknownId' => $_POST['id'],
                                                    'goldType' => $_POST['goldType'.$i],
                                                    'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                                );
                                                $this->db->insert('unknownPersonGold',$goldData);   
                                            }
                                        }
                                    }
                                    $getPreviousPaymentDetail = $this->db->query('select * from missingFaceMatchPayment where unknownId='.$_POST['id'].' and paymentStatus=1 order by Id desc')->result_array();
                                    if(count($getPreviousPaymentDetail) > 0)
                                    {
                                        $isFirstUploaded = 'lock';
                                        $isFirstUploaded = 1;
                                        $imageCount = 1;
                                        if($_FILES['Photo1']['name'] != '')
                                        {
                                            $isSecondUploaded = 'lock';
                                            $imageCount += 1;
                                        }
                                        if($_FILES['Photo2']['name'] != '')
                                        {
                                            $isThirdUploaded = 'lock';
                                            $imageCount += 1;
                                        }
                                        if(isset($isSecondUploaded))
                                        {
                                            if(isset($isThirdUploaded))
                                            {
                                                $update = $this->db->query('update missingFaceMatchPayment set image2Status = "lock", image3Status = "lock", image1Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                                            }else{
                                                $update = $this->db->query('update missingFaceMatchPayment set image2Status = "lock", image1Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                                            }
                                        }else{
                                            if(isset($isThirdUploaded))
                                            {
                                                $update = $this->db->query('update missingFaceMatchPayment set image3Status = "lock", image1Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                                            }else{
                                                $update = $this->db->query('update missingFaceMatchPayment set image1Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                                            }
                                        }
                                    }
                                    $this->session->set_flashdata('success', 'Record Updated Successfully');
                                    return redirect( base_url().'NonKyc/editLapataDetails?id='.$_POST['applicationNo'].'&pn=2');
                                }
                                else
                                {
                                    $this->session->set_flashdata('error', 'No Update Try Again.');
                                    return redirect( base_url().'NonKyc/editLapataDetails?id='.$_POST['applicationNo']);
                                }
                            }else{
                                if($response['face_count'] > 1)
                                {
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/editLapataDetails?id='.$_POST['applicationNo']);
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/editLapataDetails?id='.$_POST['applicationNo']);
                                }
                            }
                        }else{
                            $this->session->set_flashdata('error', 'Please upload valid face match image');
                            return redirect( base_url().'NonKyc/editLapataDetails?id='.$_POST['applicationNo']);
                        }   
                    }else{
                        $this->session->set_flashdata('error', 'Please upload valid face match image');
                        return redirect( base_url().'NonKyc/editLapataDetails?id='.$_POST['applicationNo']);
                    }
                }else{
                    $getOldDetail = $this->db->query('select * from unknown_person where id='.$_POST['id'])->result_array();
                    $mainphoto1 = '';
                    $mainphoto2 = '';
                    $imageId1 = '';
                    $imageId2 = '';
                    if($_FILES['Photo1']['name'] != '')
                    {
                        $data = $_POST["facematch1"];
                        $image_array_1 = explode(";", $data);
                        $split1 = explode('data:image/',$image_array_1[0]);
                        $image_array_2 = explode(",", $image_array_1[1]);
                        $data = base64_decode($image_array_2[1]);
                        $imageId1 = 'LAP_'.time().''.rand(0,10000);
                        $mainphoto1 = 'upload/lapataperson/nonkyc/'.$imageId1.'.'.$split1[1];
                        file_put_contents($mainphoto1, $data);
                        $curl = curl_init();
                        $postdata = json_encode(array(
                            "collection_id" => "shivaguptabcakhoji4",
                            "image_id" => $imageId1,
                            "image_url" => base_url().''.$mainphoto1
                        ));
                        curl_setopt_array($curl, array(
                            CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                            CURLOPT_RETURNTRANSFER => true,
                            CURLOPT_ENCODING => '',
                            CURLOPT_MAXREDIRS => 10,
                            CURLOPT_TIMEOUT => 0,
                            CURLOPT_FOLLOWLOCATION => true,
                            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                            CURLOPT_CUSTOMREQUEST => 'POST',
                            CURLOPT_POSTFIELDS => $postdata,
                            CURLOPT_HTTPHEADER => array(
                                'Content-Type: application/json',
                                'Authorization: '.$this->getSettings('facematchtoken')
                            ),
                        ));
                        
                        $response = json_decode(curl_exec($curl),true);
                        if(count($response) > 0)
                        {
                            if($response['status'] == 200)
                            {
                                if($response['face_count'] != 1)
                                {
                                    if($response['face_count'] > 1)
                                    {
                                        $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                        return redirect( base_url().'NonKyc/editLapataDetails?id='.$_POST['applicationNo']);
                                    }else{
                                        $this->session->set_flashdata('error', 'No face found in the image');   
                                        return redirect( base_url().'NonKyc/editLapataDetails?id='.$_POST['applicationNo']);
                                    }
                                }
                            }
                        }
                    }else{
                        $imageId1 = $getOldDetail[0]['imageId1'];
                        $mainphoto1 = $getOldDetail[0]['Photo1'];
                    }
                    if($_FILES['Photo2']['name'] != '')
                    {
                        $data = $_POST["facematch2"];
                        $image_array_1 = explode(";", $data);
                        $split1 = explode('data:image/',$image_array_1[0]);
                        $image_array_2 = explode(",", $image_array_1[1]);
                        $data = base64_decode($image_array_2[1]);
                        if($imageId1 == '')
                        {
                            $imageId1 = 'LAP_'.time().''.rand(0,10000);
                            $mainphoto1 = 'upload/lapataperson/nonkyc/'.$imageId1.'.'.$split1[1];
                            file_put_contents($mainphoto1, $data);
                            $curl = curl_init();
                            $postdata = json_encode(array(
                                "collection_id" => "shivaguptabcakhoji4",
                                "image_id" => $imageId1,
                                "image_url" => base_url().''.$mainphoto1
                            ));
                        }else{
                            $imageId2 = 'LAP_'.time().''.rand(0,10000);
                            $mainphoto2 = 'upload/lapataperson/nonkyc/'.$imageId2.'.'.$split1[1];
                            file_put_contents($mainphoto2, $data);
                            $curl = curl_init();
                            $postdata = json_encode(array(
                                "collection_id" => "shivaguptabcakhoji4",
                                "image_id" => $imageId2,
                                "image_url" => base_url().''.$mainphoto2
                            ));
                        }
                        curl_setopt_array($curl, array(
                            CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                            CURLOPT_RETURNTRANSFER => true,
                            CURLOPT_ENCODING => '',
                            CURLOPT_MAXREDIRS => 10,
                            CURLOPT_TIMEOUT => 0,
                            CURLOPT_FOLLOWLOCATION => true,
                            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                            CURLOPT_CUSTOMREQUEST => 'POST',
                            CURLOPT_POSTFIELDS => $postdata,
                            CURLOPT_HTTPHEADER => array(
                                'Content-Type: application/json',
                                'Authorization: '.$this->getSettings('facematchtoken')
                            ),
                        ));
                        
                        $response = json_decode(curl_exec($curl),true);   
                        if(count($response) > 0)
                        {
                            if($response['status'] == 200)
                            {
                                if($response['face_count'] != 1)
                                {
                                    if($response['face_count'] > 1)
                                    {
                                        $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                        return redirect( base_url().'NonKyc/editLapataDetails?id='.$_POST['applicationNo']);
                                    }else{
                                        $this->session->set_flashdata('error', 'No face found in the image');   
                                        return redirect( base_url().'NonKyc/editLapataDetails?id='.$_POST['applicationNo']);
                                    }
                                }
                            }
                        }
                    }else{
                        $imageId2 = $getOldDetail[0]['imageId2'];
                        $mainphoto2 = $getOldDetail[0]['Photo2'];
                    }
                    $dateCreated = date('Y-m-d H:i:s A');
                    $insertdata = array(
                        'imageId1' => $imageId1,
                        'imageId2' => $imageId2,
                        'aadharNumber' => $_POST['aadharNumber'],
                        'Gender' => $_POST['Gender'],
                        'PAN' => $_POST['PAN'],
                        'dob' => $_POST['dob'],
                        'missingDate' => $_POST['dateCreated'],
                        'Photo1' => $mainphoto1,
                        'Photo2' => $mainphoto2,
                        'DL_no' => $_POST['DL_no'],
                        'voter_id' => $_POST['voter_id'],
                        'person_name' => $_POST['person_name'],
                        'Religion' => $_POST['Religion'],
                        'vehicle_no' => $_POST['vehicle_no'],
                        'state' => $_POST['state'],
                        'district' => $_POST['district'],
                        'city' => $_POST['city'],
                        'Age' => $_POST['Age'],
                        'Height' => $_POST['Height'],
                        'Mental_status' => $_POST['Mental'],
                        'Message' => $_POST['Message'],
                        'vehicle_no' => $_POST['vehicle_no'],
                    );
                    $this->db->where('id',$_POST['id']);
                    $in=$this->db->update('unknown_person',$insertdata);
                }
                if($in)
                {
                    if(!isset($response))
                    {
                        $response = array();
                    }
                    $vectorizerData = array(
                        'unknownId' => $_POST['id'],
                        'imageStatus' => 'Pending',
                        'uploadTime' => $dateCreated,
                        'isUpload' => 0
                    );
                    $this->db->insert('indexer',$vectorizerData);
                    if($_POST['goldCount']  > 0)
                    {
                        for($i=1;$i<=$_POST['goldCount'];$i++)
                        {
                            if(isset($_POST['oldId'.$i]))
                            {
                                $goldData = array(
                                    'unknownId' => $_POST['id'],
                                    'goldType' => $_POST['goldType'.$i],
                                    'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                );
                                $this->db->where('Id',$_POST['oldId'.$i]);
                                $this->db->update('unknownPersonGold',$goldData);
                            }else{
                                $goldData = array(
                                    'unknownId' => $_POST['id'],
                                    'goldType' => $_POST['goldType'.$i],
                                    'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                );
                                $this->db->insert('unknownPersonGold',$goldData);   
                            }
                        }
                    }
                    $getPreviousPaymentDetail = $this->db->query('select * from missingFaceMatchPayment where unknownId='.$_POST['id'].' and paymentStatus=1 order by Id desc')->result_array();
                    if(count($getPreviousPaymentDetail) > 0)
                    {
                        $imageCount = 1;
                        if($_FILES['Photo1']['name'] != '')
                        {
                            $isSecondUploaded = 'lock';
                            $imageCount += 1;
                        }
                        if($_FILES['Photo2']['name'] != '')
                        {
                            $isThirdUploaded = 'lock';
                            $imageCount += 1;
                        }
                        if(isset($isSecondUploaded))
                        {
                            if(isset($isThirdUploaded))
                            {
                                $update = $this->db->query('update missingFaceMatchPayment set image2Status = "lock", image3Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                            }else{
                                $update = $this->db->query('update missingFaceMatchPayment set image2Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                            }
                        }else{
                            if(isset($isThirdUploaded))
                            {
                                $update = $this->db->query('update missingFaceMatchPayment set image3Status = "lock" where Id='.$getPreviousPaymentDetail[0]['Id']);
                            }
                        }
                    }
                    $this->session->set_flashdata('success', 'Record Updated Successfully');
                    return redirect( base_url().'NonKyc/editLapataDetails?id='.$_POST['applicationNo'].'&pn=2');
                    
        
                }
                else
                {
                    $this->session->set_flashdata('error', 'No Update Try Again.');
                    return redirect( base_url().'NonKyc/editLapataDetails?id='.$_POST['applicationNo']);
                }
            }else{
                $mainphoto1 = '';
                $mainphoto2 = '';
                $imageId1 = '';
                $imageId2 = '';
                if($_POST['facematch1'] != '')
                {
                    $data = $_POST["facematch1"];
                    $image_array_1 = explode(";", $data);
                    $split1 = explode('data:image/',$image_array_1[0]);
                    $image_array_2 = explode(",", $image_array_1[1]);
                    $data = base64_decode($image_array_2[1]);
                    $imageId1 = 'LAP_'.time().''.rand(0,10000);
                    $mainphoto1 = 'upload/lapataperson/nonkyc/'.$imageId1.'.'.$split1[1];
                    file_put_contents($mainphoto1, $data);
                    $curl = curl_init();
                    $postdata = json_encode(array(
                        "collection_id" => "shivaguptabcakhoji4",
                        "image_id" => $imageId1,
                        "image_url" => base_url().''.$mainphoto1
                    ));
                    curl_setopt_array($curl, array(
                        CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_ENCODING => '',
                        CURLOPT_MAXREDIRS => 10,
                        CURLOPT_TIMEOUT => 0,
                        CURLOPT_FOLLOWLOCATION => true,
                        CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                        CURLOPT_CUSTOMREQUEST => 'POST',
                        CURLOPT_POSTFIELDS => $postdata,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                        ),
                    ));
                    
                    $response = json_decode(curl_exec($curl),true);
                    if(count($response) > 0)
                    {
                        if($response['status'] == 200)
                        {
                            if($response['face_count'] != 1)
                            {
                                if($response['face_count'] > 1)
                                {
                                    $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                    return redirect( base_url().'NonKyc/lapata_new_login');
                                }else{
                                    $this->session->set_flashdata('error', 'No face found in the image');   
                                    return redirect( base_url().'NonKyc/lapata_new_login');
                                }
                            }
                        }
                    }
                }
                if($_POST['facematch2'] != '')
                {
                    $data = $_POST["facematch2"];
                    $image_array_1 = explode(";", $data);
                    $split1 = explode('data:image/',$image_array_1[0]);
                    $image_array_2 = explode(",", $image_array_1[1]);
                    $data = base64_decode($image_array_2[1]);
                    if($_FILES['Photo1']['name'] == '')
                    {
                        $imageId1 = 'LAP_'.time().''.rand(0,10000);
                        $mainphoto1 = 'upload/lapataperson/nonkyc/'.$imageId1.'.'.$split1[1];
                        file_put_contents($mainphoto1, $data);
                        $curl = curl_init();
                        $postdata = json_encode(array(
                            "collection_id" => "shivaguptabcakhoji4",
                            "image_id" => $imageId1,
                            "image_url" => base_url().''.$mainphoto1
                        ));
                        curl_setopt_array($curl, array(
                            CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                            CURLOPT_RETURNTRANSFER => true,
                            CURLOPT_ENCODING => '',
                            CURLOPT_MAXREDIRS => 10,
                            CURLOPT_TIMEOUT => 0,
                            CURLOPT_FOLLOWLOCATION => true,
                            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                            CURLOPT_CUSTOMREQUEST => 'POST',
                            CURLOPT_POSTFIELDS => $postdata,
                            CURLOPT_HTTPHEADER => array(
                                'Content-Type: application/json',
                                'Authorization: '.$this->getSettings('facematchtoken')
                            ),
                        ));
                        
                        $response = json_decode(curl_exec($curl),true);   
                        if(count($response) > 0)
                        {
                            if($response['status'] == 200)
                            {
                                if($response['face_count'] != 1)
                                {
                                    if($response['face_count'] > 1)
                                    {
                                        $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                        return redirect( base_url().'NonKyc/lapata_new_login');
                                    }else{
                                        $this->session->set_flashdata('error', 'No face found in the image');   
                                        return redirect( base_url().'NonKyc/lapata_new_login');
                                    }
                                }
                            }
                        }
                    }else{
                        if($imageId1 == '')
                        {
                            $imageId1 = 'LAP_'.time().''.rand(0,10000);
                            $mainphoto1 = 'upload/lapataperson/nonkyc/'.$imageId1.'.'.$split1[1];
                            file_put_contents($mainphoto1, $data);
                            $curl = curl_init();
                            $postdata = json_encode(array(
                                "collection_id" => "shivaguptabcakhoji4",
                                "image_id" => $imageId1,
                                "image_url" => base_url().''.$mainphoto1
                            ));
                        }else{
                            $imageId2 = 'LAP_'.time().''.rand(0,10000);
                            $mainphoto2 = 'upload/lapataperson/nonkyc/'.$imageId2.'.'.$split1[1];
                            file_put_contents($mainphoto2, $data);
                            $curl = curl_init();
                            $postdata = json_encode(array(
                                "collection_id" => "shivaguptabcakhoji4",
                                "image_id" => $imageId2,
                                "image_url" => base_url().''.$mainphoto2
                            ));
                        }
                        curl_setopt_array($curl, array(
                            CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                            CURLOPT_RETURNTRANSFER => true,
                            CURLOPT_ENCODING => '',
                            CURLOPT_MAXREDIRS => 10,
                            CURLOPT_TIMEOUT => 0,
                            CURLOPT_FOLLOWLOCATION => true,
                            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                            CURLOPT_CUSTOMREQUEST => 'POST',
                            CURLOPT_POSTFIELDS => $postdata,
                            CURLOPT_HTTPHEADER => array(
                                'Content-Type: application/json',
                                'Authorization: '.$this->getSettings('facematchtoken')
                            ),
                        ));
                        
                        $response = json_decode(curl_exec($curl),true);   
                        if(count($response) > 0)
                        {
                            if($response['status'] == 200)
                            {
                                if($response['face_count'] != 1)
                                {
                                    if($response['face_count'] > 1)
                                    {
                                        $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                        return redirect( base_url().'NonKyc/lapata_new_login');
                                    }else{
                                        $this->session->set_flashdata('error', 'No face found in the image');   
                                        return redirect( base_url().'NonKyc/lapata_new_login');
                                    }
                                }
                            }
                        }
                    }
                }
                $data = $_POST["facematch"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                $imageId = 'LAP_'.time().''.rand(0,10000);
                $mainphoto = 'upload/lapataperson/nonkyc/'.$imageId.'.'.$split1[1];
                file_put_contents($mainphoto, $data);
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_id" => $imageId,
                    "image_url" => base_url().''.$mainphoto
                ));
                curl_setopt_array($curl, array(
                    CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                    CURLOPT_RETURNTRANSFER => true,
                    CURLOPT_ENCODING => '',
                    CURLOPT_MAXREDIRS => 10,
                    CURLOPT_TIMEOUT => 0,
                    CURLOPT_FOLLOWLOCATION => true,
                    CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                    CURLOPT_CUSTOMREQUEST => 'POST',
                    CURLOPT_POSTFIELDS => $postdata,
                    CURLOPT_HTTPHEADER => array(
                        'Content-Type: application/json',
                        'Authorization: '.$this->getSettings('facematchtoken')
                    ),
                ));
                $response = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($response) > 0)
                {
                    if($response['status'] == 200)
                    {
                        if($response['face_count'] == 1)
                        {
                            $Appli_no= $this->generateApplicationNumber();
                            $well1 = NULL;
                            $well2 = NULL;
                            $well3 = NULL;
                            $profileDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
							if($_SESSION['loginmob'] == $profileDetail[0]['registration_mobile'])
                            {
                                $well1 = $_SESSION['loginmob'];
                                if($profileDetail[0]['alternate_mobile1'] != NULL)
                                {
                                    $well2 = $profileDetail[0]['alternate_mobile1'];
                                }else{
                                    if($profileDetail[0]['alternate_mobile2'] != NULL)
                                    {
                                        $well2 = $profileDetail[0]['alternate_mobile2'];
                                    }
                                }
                                if($well2 != NULL)
                                {
                                    if($profileDetail[0]['alternate_mobile1'] != NULL)
                                    {
                                    }else{
                                        if($profileDetail[0]['alternate_mobile2'] != NULL)
                                        {
                                            $well3 = $profileDetail[0]['alternate_mobile2'];
                                        }else{
                                            if($profileDetail[0]['alternate_mobile3'] != NULL)
                                            {
                                                $well3 = $profileDetail[0]['alternate_mobile3'];
                                            }
                                        }
                                    }
                                }
                            }else{
                                if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile1'])
                                {
                                    $well1 = $profileDetail[0]['alternate_mobile1'];
                                    $well2 = $profileDetail[0]['registration_mobile'];
                                    if($profileDetail[0]['alternate_mobile2'] != NULL)
                                    {
                                        $well3 = $profileDetail[0]['alternate_mobile2'];
                                    }else{
                                        if($profileDetail[0]['alternate_mobile3'] != NULL)
                                        {
                                            $well3 = $profileDetail[0]['alternate_mobile3'];
                                        }
                                    }
                                }else{
                                    if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile2'])
                                    {
                                        $well1 = $profileDetail[0]['alternate_mobile2'];
                                        $well2 = $profileDetail[0]['registration_mobile'];
                                        if($profileDetail[0]['alternate_mobile1'] != NULL)
                                        {
                                            $well3 = $profileDetail[0]['alternate_mobile1'];
                                        }else{
                                            if($profileDetail[0]['alternate_mobile3'] != NULL)
                                            {
                                                $well3 = $profileDetail[0]['alternate_mobile3'];
                                            }
                                        }
                                    }else{
                                        if($_SESSION['loginmob'] == $profileDetail[0]['alternate_mobile3'])
                                        {
                                            $well1 = $profileDetail[0]['alternate_mobile3'];
                                            $well2 = $profileDetail[0]['registration_mobile'];
                                            if($profileDetail[0]['alternate_mobile1'] != NULL)
                                            {
                                                $well3 = $profileDetail[0]['alternate_mobile1'];
                                            }else{
                                                if($profileDetail[0]['alternate_mobile2'] != NULL)
                                                {
                                                    $well3 = $profileDetail[0]['alternate_mobile2'];
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                            if(isset($_POST['type']) && $_POST['type'] == 'with')
                            {
                                if(count($profileDetail) > 0)
                                {
                                    $getIfAlready = $this->db->query('select * from uploadtransactions where type="Lapata" and userId='.$_SESSION['user_id'].' and idNumber="'.$_POST['aadharNumber'].'" and expiryDate >="'.date('Y-m-d').'" and isKyc=0')->result_array();            
                                }else{
                                    $getIfAlready = array();
                                }
                            }else{
                                $getIfAlready = array();
                            }
                            $getIfFreeCredit = $this->db->query('select * from nonKycUser where freeCreditUsed is NULL and uid='.$_SESSION['user_id'])->result_array();
                            $isFree = 0;
                            if(count($getIfFreeCredit) > 0)
                            {
                                $isFree = 1;
                            }
                            if(isset($_POST['day']))
                            {
                                $_POST['dob'] = $_POST['year'] . '-' . $_POST['month'].'-'.$_POST['day'];
                            }
                            if(isset($_POST['missingday']))
                            {
                                $_POST['dateCreated'] = $_POST['missingyear'] . '-' . $_POST['missingmonth'].'-'.$_POST['missingday'];
                            }
                            $insertdata = array(
                                'dob' => $_POST['dob'],
                                'well1' => $well1,
                                'well2' => NULL,
                                'well3' => NULL,
                                'imageId' => $imageId,
                                'imageId1' => ($imageId1 != '' ? $imageId1 : NULL),
                                'imageId2' => ($imageId2 != '' ? $imageId2 : NULL),
                                'awsEventName' => 'All',
                                'aadharNumber' => isset($_POST['aadharNumber']) ? $_POST['aadharNumber'] : NULL,
                                'PAN' => $_POST['PAN'],
                                'DL_no' => $_POST['DL_no'],
                                'voter_id' => $_POST['voter_id'],
                                'person_name' => $_POST['person_name'],
                                'Religion' => $_POST['Religion'],
                                'vehicle_no' => $_POST['vehicle_no'],
                                'state' => $_POST['state'],
                                'missingDate' => $_POST['dateCreated'],
                                'district' => $_POST['district'],
                                'city' => $_POST['city'],
                                'Age' => $this->calculateAge($_POST['dob']),
                                'userId' => $_SESSION['user_id'],
								'isKyc' => 0,
                                'dateCreated' => date('Y-m-d H:i:s A'),
                                'uploaded_by'=>'user',
                                'Height' => $_POST['Height'],
                                'Mental_status' => $_POST['Mental'],
                                'Message' => $_POST['Message'],
                                'vehicle_no' => $_POST['vehicle_no'],
                                'Photo' => $mainphoto,
                                'Photo1' => ($mainphoto1 != '' ? $mainphoto1 : NULL),
                                'Photo2' => ($mainphoto2 != '' ? $mainphoto2 : NULL),
                                'Application_no' =>  $Appli_no,
                                'expiryDate' => (isset($_POST['type']) && $_POST['type'] == 'with') ? (($getIfAlready) > 0 ? $getIfAlready[0]['expiryDate'] : NULL) : NULL,
                                'Gender' => ($_POST['Gender'] == 'Male' ? 'boy' : 'girl'),
                                'isFree' => $isFree
                            );
                            $in=$this->db->insert('unknown_person',$insertdata);
                            if($in)
                            {
                                $_SESSION['unknownId'] = $unkwownId = $this->db->insert_id();
                                if($isFree)
                                {
                                    $this->db->query('update nonKycUser set freeCreditUsed=1 where uid='.$_SESSION['user_id']);
                                }
                                $vectorizerData = array(
                                    'unknownId' => $unkwownId,
                                    'imageStatus' => 'Pending',
                                    'uploadTime' => $insertdata['dateCreated'],
                                    'isUpload' => 1
                                );
                                $this->db->insert('indexer',$vectorizerData);
                                if($_POST['goldCount']  > 0)
                                {
                                    for($i=1;$i<=$_POST['goldCount'];$i++)
                                    {
                                        $goldData = array(
                                            'unknownId' => $_SESSION['unknownId'],
                                            'goldType' => $_POST['goldType'.$i],
                                            'goldHUID' => $_POST['goldHUIDNumber'.$i]
                                        );
                                        $this->db->insert('unknownPersonGold',$goldData);
                                    }
                                }
                                if(isset($_POST['type']) && $_POST['type'] == 'with')
                                {
                                    $this->session->set_flashdata('success', 'Record Successfully Saved.  - '. $Appli_no);
                                }
                                return redirect( base_url().'NonKyc/editLapataDetails?id='.$Appli_no.'&pn=2');
                            }
                            else
                            {
                                $this->session->set_flashdata('error', 'No Insert Try Again.');
                                return redirect( base_url().'NonKyc/lapata_new_login');
                            }
                        }else{
                            if($response['face_count'] > 1)
                            {
                                $this->session->set_flashdata('error', 'Multiple faces detected in image');
                                return redirect( base_url().'NonKyc/lapata_new_login');
                            }else{
                                $this->session->set_flashdata('error', 'No face found in the image');   
                                return redirect( base_url().'NonKyc/lapata_new_login');
                            }
                        }
                    }else{
                        $this->session->set_flashdata('error', 'Please upload valid face match image');
                        return redirect( base_url().'NonKyc/lapata_new_login');
                    }   
                }else{
                    $this->session->set_flashdata('error', 'Please upload valid face match image');
                    return redirect( base_url().'NonKyc/lapata_new_login');
                }
            }
        }else{
            redirect(base_url().'login','refresh');
        }
    }
    
    function unknown_person_filter_after_login()
    {
        if(isset($_SESSION['landingMob']))
        {
            if(isset($_GET['pn']))
            {
                if($_GET['pn'] == 2)
                {
                    if($_GET['idNumber'] != '')
                    {
                        if($_GET['idType'] == 'aadhar')
                        {
                            $this->db->where('aadharNumber',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'dl')
                        {
                            $this->db->where('Dl_no',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'pan')
                        {
                            $this->db->where('PAN',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'voter')
                        {
                            $this->db->where('voter_id',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'vehicle')
                        {
                            $this->db->where('vehicle_no',$_GET['idNumber']);
                        }
                    }
                    $this->db->where('dateCreated >=',date('Y-m-d 00:00:00',strtotime($_GET['startFormDate'])));
                    $this->db->where('dateCreated <=',date('Y-m-d 23:59:59',strtotime($_GET['endFormDate'])));
                    $this->db->where('Gender',$_GET['genderForm']);
                    if(($_GET['personFormName']) != '')
                    {
                        $this->db->where("SUBSTRING(person_name, 1, 1) = '".substr($_GET['personFormName'], 0, 1)."'");
                    }
                    if(($_GET['AgeForm']) != '')
                    {
                        $this->db->where('Age',$_GET['AgeForm']);
                    }
                    if(($_GET['stateForm']) != '')
                    {
                        $this->db->where('state',$_GET['stateForm']);
                    }
                    if(($_GET['districtForm']) != '')
                    {
                        $this->db->where('district',$_GET['districtForm']);
                    }
                    if(($_GET['cityForm']) != '')
                    {
                        $this->db->where('city',$_GET['cityForm']);
                    }
                    if(($_GET['faceMatch']) != '')
                    {
                        $this->db->where_in('imageId',explode(',',$_GET['faceMatch']));
                        $this->db->or_where_in('imageId1',explode(',',$_GET['faceMatch']));
                        $this->db->or_where_in('imageId2',explode(',',$_GET['faceMatch']));
                    }
                    $this->db->where('awsEventName','Unknown');
                    $this->db->where('isFound',0);
                    $this->db->where('isFinalSubmitted',1);
                    $page_data['data']=$this->db->get('unknown_person')->result_array();
                    $finalId = array();
                    if($_GET['idNumber'] != '')
                    {
                        if($_GET['idType'] == 'gold')
                        {
                            if(count($page_data['data']) > 0)
                            {
                                foreach($page_data['data'] as $k=>$v)
                                {
                                    $getGoldDetails = $this->db->query('select * from unknownPersonGold where unknownId='.$v['id'].' and goldHUID="'.$_GET['idNumber'].'"')->result_array();   
                                    if(count($getGoldDetails) > 0)
                                    {
                                        array_push($finalId,$v['id']);
                                    }
                                }
                            }
                            if(count($finalId) > 0)
                            {
                                $this->db->where_in('id',$finalId);
                                $page_data['data']=$this->db->get('unknown_person')->result_array();
                            }else{
                                $page_data['data']= array();
                            }
                        }
                    }
                    $page_data['rows'] = count($page_data['data']);
                    if(isset($_GET['perPage']))
                    {
                        $page_rows = $_GET['perPage'];
                        $page_data['perPage'] = $page_rows; 
                    }else{
                        $page_rows = 100;
                        $page_data['perPage'] = 100;
                    }
                    $last = ceil($page_data['rows']/$page_rows);
                    if($last < 1){
                        $last = 1;
                    }

                    $page_data['last'] = $last;
                 
                    $pagenum = 1;
                 
                    if(isset($_GET['page'])){
                        $pagenum = preg_replace('#[^0-9]#', '', $_GET['page']);
                    }
                 
                    if ($pagenum < 1) { 
                        $pagenum = 1; 
                    } 
                    else if ($pagenum > $last) { 
                        $pagenum = $last; 
                    }
                 
                    if($_GET['idNumber'] != '')
                    {
                        if($_GET['idType'] == 'aadhar')
                        {
                            $this->db->where('aadharNumber',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'dl')
                        {
                            $this->db->where('Dl_no',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'pan')
                        {
                            $this->db->where('PAN',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'voter')
                        {
                            $this->db->where('voter_id',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'vehicle')
                        {
                            $this->db->where('vehicle_no',$_GET['idNumber']);
                        }
                    }
                    $this->db->where('dateCreated >=',date('Y-m-d 00:00:00',strtotime($_GET['startFormDate'])));
                    $this->db->where('dateCreated <=',date('Y-m-d 23:59:59',strtotime($_GET['endFormDate'])));
                    $this->db->where('Gender',$_GET['genderForm']);
                    if(($_GET['personFormName']) != '')
                    {
                        $this->db->where("SUBSTRING(person_name, 1, 1) = '".substr($_GET['personFormName'], 0, 1)."'");
                    }
                    if(($_GET['AgeForm']) != '')
                    {
                        $this->db->where('Age',$_GET['AgeForm']);
                    }
                    if(($_GET['stateForm']) != '')
                    {
                        $this->db->where('state',$_GET['stateForm']);
                    }
                    if(($_GET['districtForm']) != '')
                    {
                        $this->db->where('district',$_GET['districtForm']);
                    }
                    if(($_GET['cityForm']) != '')
                    {
                        $this->db->where('city',$_GET['cityForm']);
                    }
                    if(($_GET['faceMatch']) != '')
                    {
                        $this->db->where_in('imageId',explode(',',$_GET['faceMatch']));
                        $this->db->or_where_in('imageId1',explode(',',$_GET['faceMatch']));
                        $this->db->or_where_in('imageId2',explode(',',$_GET['faceMatch']));
                    }
                    $this->db->where('awsEventName','Unknown');
                    $this->db->where('isFinalSubmitted',1);
                    $this->db->where('isFound',0);
                    if($_GET['idNumber'] == '')
                    {
                        $this->db->limit($page_rows,($pagenum - 1) * $page_rows);
                    }
                    $page_data['data']=$this->db->get('unknown_person')->result_array();
                    $finalId = array();
                    if($_GET['idNumber'] != '')
                    {
                        if($_GET['idType'] == 'gold')
                        {
                            if(count($page_data['data']) > 0)
                            {
                                foreach($page_data['data'] as $k=>$v)
                                {
                                    $getGoldDetails = $this->db->query('select * from unknownPersonGold where unknownId='.$v['id'].' and goldHUID="'.$_GET['idNumber'].'"')->result_array();   
                                    if(count($getGoldDetails) > 0)
                                    {
                                        array_push($finalId,$v['id']);
                                    }
                                }
                            }
                            if(count($finalId) > 0)
                            {
                                $this->db->where_in('id',$finalId);
                                $this->db->limit(($pagenum - 1) * $page_rows,$page_rows);
                                $page_data['data']=$this->db->get('unknown_person')->result_array();
                            }else{
                                $page_data['data']= array();
                            }
                        }
                    }
                    $page_data['paginationBigCtrls'] = '';     
                    $page_data['paginationMobileCtrls'] = '';     
                    if($last != 1){
                        if ($pagenum > 1) {
                            $previous = $pagenum - 1;
                            $page_data['paginationBigCtrls'] .= '<a href="javascript:void(0)" onclick="apply('.$previous.')" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                            $page_data['paginationMobileCtrls'] .= '<a href="javascript:void(0)" onclick="apply('.$previous.')" class="btn btn-default mt-0">Previous</a> &nbsp; &nbsp; ';
                     
                            for($i = $pagenum-4; $i < $pagenum; $i++){
                                if($i > 0){
                                    $paginationCtrls .= '<a href="javascript:void(0)" onclick="apply('.$i.')" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                }
                            }
                        }
                     
                        $page_data['paginationBigCtrls'] .= '<a href="javascript:void(0)" class="mt-0 ms-3">'.$pagenum.' </a>&nbsp; ';
                     
                        for($i = $pagenum+1; $i <= $last; $i++){
                            $page_data['paginationBigCtrls'] .= '<a href="javascript:void(0)" onclick="apply('.$i.')" class="btn btn-default">'.$i.'</a> &nbsp; ';
                            if($i >= $pagenum+4){
                                break;
                            }
                        }
                     
                        if ($pagenum != $last) {
                            $next = $pagenum + 1;
                            $page_data['paginationBigCtrls'] .= ' &nbsp; &nbsp; <a href="javascript:void(0)" onclick="apply('.$next.')" class="btn btn-default">Next</a> ';
                            $page_data['paginationMobileCtrls'] .= ' &nbsp; &nbsp; <a href="javascript:void(0)" onclick="apply('.$next.')" class="btn btn-default mt-0">Next</a> ';
                        }
                    }
                }else{
                    $page_data['data']= [];
                    $page_data['paginationBigCtrls'] = '';
                    $page_data['paginationMobileCtrls'] = '';
                }
            }else{
                $page_data['data']= [];
                $page_data['paginationBigCtrls'] = '';
                $page_data['paginationMobileCtrls'] = '';
            }
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page'] = 1;
            if(isset($_GET['page']))
            {
                $page_data['page'] = $_GET['page'];    
            }
            $page_data['page_name'] = 'unknownperson_data';
            $this->load->view('nonkyc/index', $page_data);  
        }else{
            redirect(base_url().'login','refresh');
        }
    }
    
    function search_vehicle_details($para = '')
    {
        if($para == '')
        {
            if(isset($_SESSION['landingMob'])){
                $page_data['pn'] = 1;
                if(isset($_GET['pn']))
                {
                    $page_data['pn'] = $_GET['pn'];    
                }
                $page_data['page_name'] = 'search_vehicle_details';
                $page_data['title'] = 'Search Vehicle Details';
                $this->load->view('nonkyc/index', $page_data);
            } else {
                redirect('login','refresh');
            } 
        }else
        {
            if($para == 'step1')
            {
                $getPreviousDetail = $this->db->query('select * from searchVehicle where Id='.$_SESSION['checkVehicleId'])->result_array();
                if($getPreviousDetail[0]['otp'] == $_POST['otp'])
                {
                    $updatedata = array(
                        'personMob' => $_POST['mobileNumber'],
                        'otp' => NULL
                    );
                    $this->db->where('Id',$_SESSION['checkVehicleId']);
                    $update = $this->db->update('searchVehicle',$updatedata);
                    $response['status'] = 'success';
                }else{
                    $response['status'] = 'error';
                    $response['message'] = 'Invalid OTP';
                }
                echo json_encode($response);
            }
            if($para == 'step2')
            {
                $personName = '';
                $gender = '';
                $aadhar = '';
                $gender = '';
                $isVerified = 'No';
                $isVisible = 0;
                $age = '';
                $address = '';
                $isUserFound = 0;
                $isMissing = 0;
                $isGenderCorrect = 0;
                $isAadharCorrect = 0;
                $isDobCorrect = 0;
                $_POST['dob'] = $_POST['date'].'-'.$_POST['month'].'-'.$_POST['year'];
                $idNumber = '';
                if($_POST['idType'] == 'aadhar')
                {
                    $idNumber = $_POST['aadhar_id'];
                    if(strlen($_POST['aadhar_id']) != 12)
                    {
                        $response = array(
                            'status' => 'error',
                            'message' => 'Aadhar number must be 12 digit number'
                        );
                        echo json_encode($response);
                        return;
                    }
                    $getIfPersonAvailable = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'" and gender="'.$_POST['gender'].'" and dob="'.date('Y-m-d',strtotime($_POST['dob'])).'"')->result_array();
                    $userphoto = '';
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $isVisible = $getIfPersonAvailable[0]['visibility'];
                        $isVerified = 1;
                        $isUserFound = 1;
                        $personName = $getIfPersonAvailable[0]['aadharname'];
                        $gender = $getIfPersonAvailable[0]['gender'];
                        $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                        $age = ($from->diff($to)->y).'- Years';
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
                    }
                    $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$_POST['aadhar_id'].'" and isFound != 1')->result_array();
                    if(count($getMissingPerson) > 0)
                    {
                        $isAadharCorrect = 1;
                        if($getMissingPerson[0]['missinggender'] != NULL)
                        {
                            if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1;
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getMissingPerson[0]['missinggender'];
                                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    if(count($getIfPersonAvailable) > 0)
                                    {
                                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                    }else{
                                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                    }
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }else{
                            $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                            if(count($getFullDetail) > 0)
                            {
                                if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                }
                                if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                                {
                                    $isGenderCorrect = 1;
                                    if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                        $isMissing = 1; 
                                        $personName = $getMissingPerson[0]['missingname'];
                                        $gender = $getMissingPerson[0]['missinggender'];
                                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                                        $from=new DateTime(date('Y-m-d'));
                                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                        $age = ($from->diff($to)->y).'- Years';
                                        if(count($getIfPersonAvailable) > 0)
                                        {
                                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                        }else{
                                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                        }
                                        if(count($getIfPersonAvailable) == 0)
                                        {
                                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                        }   
                                    }
                                }   
                            }else{
                                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'"')->result_array();
                                if(count($getUserDetail) > 0)
                                {
                                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                    }
                                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                    {
                                        $isGenderCorrect = 1;
                                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                        {
                                            $isDobCorrect = 1;
                                            $isMissing = 1; 
                                            $personName = $getUserDetail[0]['aadharname'];
                                            $gender = $getUserDetail[0]['gender'];
                                            $aadhar = $getUserDetail[0]['aadhar_id'];
                                            $from=new DateTime(date('Y-m-d'));
                                            $to   = new DateTime($getUserDetail[0]['dob']);
                                            $age = ($from->diff($to)->y).'- Years';
                                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                            if(count($getIfPersonAvailable) == 0)
                                            {
                                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                            }   
                                        }
                                    }
                                }
                            }
                        }
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            $isAadharCorrect = 1;
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 0; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'isPersonFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'gender' => $_POST['gender'],
                        'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                        'idNumber' => $_POST['aadhar_id'],
                        'idType' => $_POST['idType'],
                    );
                    $this->db->where('Id',$_SESSION['checkId']);
                    $update = $this->db->update('checkperson',$insertdata);
                    if($update)
                    {
                        if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                        {
                            $response = array(
                                'status' => 'success',
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                                'message' => 'Person Found',
                                'isVisible' => $isVisible,
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => $userphoto
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }
                if($_POST['idType'] == 'dl')
                {
                    $idNumber = $_POST['dlNumber'];
                    $getIfAlready = $this->db->query('select * from dllist where dlNumber="'.$idNumber.'"')->result_array();
                    if(count($getIfAlready) > 0)
                    {
                        $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
                    }else{
                        $getIfPersonAvailable = array();
                    }
                    $userphoto = '';
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $isVisible = $getIfPersonAvailable[0]['visibility'];
                        $isVerified = 1;
                        $isUserFound = 1;
                        $personName = $getIfPersonAvailable[0]['aadharname'];
                        $gender = $getIfPersonAvailable[0]['gender'];
                        $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                        $age = ($from->diff($to)->y).'- Years';
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
                    }
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
                    }else{
                        $getMissingPerson = array();
                    }
                    if(count($getMissingPerson) > 0)
                    {
                        $isAadharCorrect = 1;
                        if($getMissingPerson[0]['missinggender'] != NULL)
                        {
                            if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1;
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getMissingPerson[0]['missinggender'];
                                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    if(count($getIfPersonAvailable) > 0)
                                    {
                                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                    }else{
                                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                    }
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }else{
                            $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                            if(count($getFullDetail) > 0)
                            {
                                if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                }
                                if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                                {
                                    $isGenderCorrect = 1;
                                    if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                        $isMissing = 1; 
                                        $personName = $getMissingPerson[0]['missingname'];
                                        $gender = $getMissingPerson[0]['missinggender'];
                                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                                        $from=new DateTime(date('Y-m-d'));
                                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                        $age = ($from->diff($to)->y).'- Years';
                                        if(count($getIfPersonAvailable) > 0)
                                        {
                                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                        }else{
                                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                        }
                                        if(count($getIfPersonAvailable) == 0)
                                        {
                                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                        }   
                                    }
                                }   
                            }else{
                                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                                if(count($getUserDetail) > 0)
                                {
                                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                    }
                                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                    {
                                        $isGenderCorrect = 1;
                                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                        {
                                            $isDobCorrect = 1;
                                            $isMissing = 1; 
                                            $personName = $getUserDetail[0]['aadharname'];
                                            $gender = $getUserDetail[0]['gender'];
                                            $aadhar = $getUserDetail[0]['aadhar_id'];
                                            $from=new DateTime(date('Y-m-d'));
                                            $to   = new DateTime($getUserDetail[0]['dob']);
                                            $age = ($from->diff($to)->y).'- Years';
                                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                            
                                            if(count($getIfPersonAvailable) == 0)
                                            {
                                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                            }   
                                        }
                                    }
                                }
                            }
                        }
                    }else{
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                        }else{
                            $getUserDetail = array();
                        }
                        if(count($getUserDetail) > 0)
                        {
                            $isAadharCorrect = 1;
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 0; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'isPersonFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'gender' => $_POST['gender'],
                        'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                        'idNumber' => $_POST['dlNumber'],
                        'idType' => $_POST['idType'],
                    );
                    $this->db->where('Id',$_SESSION['checkId']);
                    $update = $this->db->update('checkperson',$insertdata);
                    if($insert)
                    {
                        if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                        {
                            $response = array(
                                'status' => 'success',
                                'isVisible' => $isVisible,
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                                'message' => 'Person Found',
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => $userphoto
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }
                if($_POST['idType'] == 'voter')
                {
                    $idNumber = $_POST['voterId'];
                    $getIfAlready = $this->db->query('select * from voterslist where voterNumber="'.$idNumber.'"')->result_array();
                    if(count($getIfAlready) > 0)
                    {
                        $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'].' and gender="'.$_POST['gender'].'" and dob="'.date('Y-m-d',strtotime($_POST['dob'])).'"')->result_array();   
                    }else{
                        $getIfPersonAvailable = array();
                    }
                    $userphoto = '';
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $isVisible = $getIfPersonAvailable[0]['visibility'];
                        $isUserFound = 1;
                        $isVerified = 1;
                        $personName = $getIfPersonAvailable[0]['aadharname'];
                        $gender = $getIfPersonAvailable[0]['gender'];
                        $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                        $age = ($from->diff($to)->y).'- Years';
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
                    }
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
                    }else{
                        $getMissingPerson = array();
                    }
                    if(count($getMissingPerson) > 0)
                    {
                        $isAadharCorrect = 1;
                        if($getMissingPerson[0]['missinggender'] != NULL)
                        {
                            if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1;
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getMissingPerson[0]['missinggender'];
                                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    if(count($getIfPersonAvailable) > 0)
                                    {
                                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                    }else{
                                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                    }
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }else{
                            $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                            if(count($getFullDetail) > 0)
                            {
                                if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                }
                                if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                                {
                                    $isGenderCorrect = 1;
                                    if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                        $isMissing = 1; 
                                        $personName = $getMissingPerson[0]['missingname'];
                                        $gender = $getMissingPerson[0]['missinggender'];
                                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                                        $from=new DateTime(date('Y-m-d'));
                                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                        $age = ($from->diff($to)->y).'- Years';
                                        if(count($getIfPersonAvailable) > 0)
                                        {
                                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                        }else{
                                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                        }
                                        if(count($getIfPersonAvailable) == 0)
                                        {
                                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                        }   
                                    }
                                }   
                            }else{
                                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                                if(count($getUserDetail) > 0)
                                {
                                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                    }
                                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                    {
                                        $isGenderCorrect = 1;
                                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                        {
                                            $isDobCorrect = 1;
                                            $isMissing = 1; 
                                            $personName = $getUserDetail[0]['aadharname'];
                                            $gender = $getUserDetail[0]['gender'];
                                            $aadhar = $getUserDetail[0]['aadhar_id'];
                                            $from=new DateTime(date('Y-m-d'));
                                            $to   = new DateTime($getUserDetail[0]['dob']);
                                            $age = ($from->diff($to)->y).'- Years';
                                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                            if(count($getIfPersonAvailable) == 0)
                                            {
                                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                            }   
                                        }
                                    }
                                }
                            }
                        }
                    }else{
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                        }else{
                            $getUserDetail = array();
                        }
                        if(count($getUserDetail) > 0)
                        {
                            $isAadharCorrect = 1;
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 0; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'isPersonFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'gender' => $_POST['gender'],
                        'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                        'idNumber' => $_POST['voterId'],
                        'idType' => $_POST['idType'],
                    );
                    $this->db->where('Id',$_SESSION['checkId']);
                    $update = $this->db->update('checkperson',$insertdata);
                    if($update)
                    {
                        if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                        {
                            $response = array(
                                'status' => 'success',
                                'isVisible'=> $isVisible,
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                                'message' => 'Person Found',
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => $userphoto
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }
                if($_POST['idType'] == 'pan')
                {
                    $idNumber = $_POST['panNumber'];
                    $getIfAlready = $this->db->query('select * from panlist where panNumber="'.$idNumber.'"')->result_array();
                    if(count($getIfAlready) > 0)
                    {
                        $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
                    }else{
                        $getIfPersonAvailable = array();
                    }
                    $userphoto = '';
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $isVisible = $getIfPersonAvailable[0]['visibility'];
                        $isUserFound = 1;
                        $isVerified = 1;
                        $personName = $getIfPersonAvailable[0]['aadharname'];
                        $gender = $getIfPersonAvailable[0]['gender'];
                        $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                        $age = ($from->diff($to)->y).'- Years';
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
                    }
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
                    }else{
                        $getMissingPerson = array();
                    }
                    if(count($getMissingPerson) > 0)
                    {
                        $isAadharCorrect = 1;
                        if($getMissingPerson[0]['missinggender'] != NULL)
                        {
                            if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1;
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getMissingPerson[0]['missinggender'];
                                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    if(count($getIfPersonAvailable) > 0)
                                    {
                                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                    }else{
                                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                    }
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }else{
                            $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                            if(count($getFullDetail) > 0)
                            {
                                if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                }
                                if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                                {
                                    $isGenderCorrect = 1;
                                    if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                        $isMissing = 1; 
                                        $personName = $getMissingPerson[0]['missingname'];
                                        $gender = $getMissingPerson[0]['missinggender'];
                                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                                        $from=new DateTime(date('Y-m-d'));
                                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                        $age = ($from->diff($to)->y).'- Years';
                                        if(count($getIfPersonAvailable) > 0)
                                        {
                                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                        }else{
                                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                        }
                                        if(count($getIfPersonAvailable) == 0)
                                        {
                                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                        }   
                                    }
                                }   
                            }else{
                                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                                if(count($getUserDetail) > 0)
                                {
                                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                    }
                                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                    {
                                        $isGenderCorrect = 1;
                                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                        {
                                            $isDobCorrect = 1;
                                            $isMissing = 1; 
                                            $personName = $getUserDetail[0]['aadharname'];
                                            $gender = $getUserDetail[0]['gender'];
                                            $aadhar = $getUserDetail[0]['aadhar_id'];
                                            $from=new DateTime(date('Y-m-d'));
                                            $to   = new DateTime($getUserDetail[0]['dob']);
                                            $age = ($from->diff($to)->y).'- Years';
                                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                            if(count($getIfPersonAvailable) == 0)
                                            {
                                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                            }   
                                        }
                                    }
                                }
                            }
                        }
                    }else{
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                        }else{
                            $getUserDetail = array();
                        }
                        if(count($getUserDetail) > 0)
                        {
                            $isAadharCorrect = 1;
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 0; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'isPersonFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'gender' => $_POST['gender'],
                        'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                        'idNumber' => $_POST['panNumber'],
                        'idType' => $_POST['idType'],
                    );
                    $this->db->where('Id',$_SESSION['checkId']);
                    $update = $this->db->update('checkperson',$insertdata);
                    if($update)
                    {
                        if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                        {
                            $response = array(
                                'status' => 'success',
                                'isVisible' => $isVisible,
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                                'message' => 'Person Found',
                                'isMissing' => $isMissing,
                                'isRegistered' => $isUserFound,
                                'isVerified' => $isVerified,
                                'image' => $userphoto
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }   
            }
        }
    }
    
    function searchVehicle($para = '')
    {
        if($para == '')
        {
            if(isset($_SESSION['landingMob']))
            {
                $page_data['control'] = 'user';
                $page_data['title'] = 'Search Vehicle';
                $page_data['pn'] = 1;
                if(isset($_GET['pn']))
                {
                    $page_data['pn'] = $_GET['pn'];    
                }
                $this->load->view('NonKyc/common/header',$page_data); 
                $this->load->view('NonKyc/searchVehicle');
                $this->load->view('NonKyc/common/footer'); 
            }else{
                redirect(base_url().'login','refresh');
            }
        }else
        {
            if($para == 'step1')
            {
                $getPreviousDetail = $this->db->query('select * from searchVehicle where Id='.$_SESSION['checkVehicleId'])->result_array();
                if($getPreviousDetail[0]['otp'] == $_POST['otp'])
                {
                    $updatedata = array(
                        'personMob' => $_POST['mobileNumber'],
                        'otp' => NULL
                    );
                    $this->db->where('Id',$_SESSION['checkVehicleId']);
                    $update = $this->db->update('searchVehicle',$updatedata);
                    $_SESSION['landingMob'] = $_POST['mobileNumber'];
                    $response['status'] = 'success';
                }else{
                    $response['status'] = 'error';
                    $response['message'] = 'Invalid OTP';
                }
                echo json_encode($response);
            }
            if($para == 'step2')
            {
                $personName = '';
                $gender = '';
                $aadhar = '';
                $gender = '';
                $isVerified = 'No';
                $isVisible = 0;
                $age = '';
                $address = '';
                $isUserFound = 0;
                $isMissing = 0;
                $isGenderCorrect = 0;
                $isAadharCorrect = 0;
                $isDobCorrect = 0;
                $_POST['dob'] = $_POST['date'].'-'.$_POST['month'].'-'.$_POST['year'];
                $idNumber = '';
                if($_POST['idType'] == 'aadhar')
                {
                    $idNumber = $_POST['aadhar_id'];
                    if(strlen($_POST['aadhar_id']) != 12)
                    {
                        $response = array(
                            'status' => 'error',
                            'message' => 'Aadhar number must be 12 digit number'
                        );
                        echo json_encode($response);
                        return;
                    }
                    $getIfPersonAvailable = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'" and gender="'.$_POST['gender'].'" and dob="'.date('Y-m-d',strtotime($_POST['dob'])).'"')->result_array();
                    $userphoto = '';
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $isVisible = $getIfPersonAvailable[0]['visibility'];
                        $isVerified = 1;
                        $isUserFound = 1;
                        $personName = $getIfPersonAvailable[0]['aadharname'];
                        $gender = $getIfPersonAvailable[0]['gender'];
                        $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                        $age = ($from->diff($to)->y).'- Years';
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
                    }
                    $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$_POST['aadhar_id'].'" and isFound != 1')->result_array();
                    if(count($getMissingPerson) > 0)
                    {
                        $isAadharCorrect = 1;
                        if($getMissingPerson[0]['missinggender'] != NULL)
                        {
                            if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1;
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getMissingPerson[0]['missinggender'];
                                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    if(count($getIfPersonAvailable) > 0)
                                    {
                                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                    }else{
                                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                    }
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }else{
                            $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                            if(count($getFullDetail) > 0)
                            {
                                if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                }
                                if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                                {
                                    $isGenderCorrect = 1;
                                    if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                        $isMissing = 1; 
                                        $personName = $getMissingPerson[0]['missingname'];
                                        $gender = $getMissingPerson[0]['missinggender'];
                                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                                        $from=new DateTime(date('Y-m-d'));
                                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                        $age = ($from->diff($to)->y).'- Years';
                                        if(count($getIfPersonAvailable) > 0)
                                        {
                                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                        }else{
                                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                        }
                                        if(count($getIfPersonAvailable) == 0)
                                        {
                                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                        }   
                                    }
                                }   
                            }else{
                                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'"')->result_array();
                                if(count($getUserDetail) > 0)
                                {
                                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                    }
                                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                    {
                                        $isGenderCorrect = 1;
                                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                        {
                                            $isDobCorrect = 1;
                                            $isMissing = 1; 
                                            $personName = $getUserDetail[0]['aadharname'];
                                            $gender = $getUserDetail[0]['gender'];
                                            $aadhar = $getUserDetail[0]['aadhar_id'];
                                            $from=new DateTime(date('Y-m-d'));
                                            $to   = new DateTime($getUserDetail[0]['dob']);
                                            $age = ($from->diff($to)->y).'- Years';
                                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                            if(count($getIfPersonAvailable) == 0)
                                            {
                                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                            }   
                                        }
                                    }
                                }
                            }
                        }
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            $isAadharCorrect = 1;
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 0; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'isPersonFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'gender' => $_POST['gender'],
                        'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                        'idNumber' => $_POST['aadhar_id'],
                        'idType' => $_POST['idType'],
                    );
                    $this->db->where('Id',$_SESSION['checkId']);
                    $update = $this->db->update('checkperson',$insertdata);
                    if($update)
                    {
                        if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                        {
                            $response = array(
                                'status' => 'success',
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                                'message' => 'Person Found',
                                'isVisible' => $isVisible,
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => $userphoto
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }
                if($_POST['idType'] == 'dl')
                {
                    $idNumber = $_POST['dlNumber'];
                    $getIfAlready = $this->db->query('select * from dllist where dlNumber="'.$idNumber.'"')->result_array();
                    if(count($getIfAlready) > 0)
                    {
                        $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
                    }else{
                        $getIfPersonAvailable = array();
                    }
                    $userphoto = '';
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $isVisible = $getIfPersonAvailable[0]['visibility'];
                        $isVerified = 1;
                        $isUserFound = 1;
                        $personName = $getIfPersonAvailable[0]['aadharname'];
                        $gender = $getIfPersonAvailable[0]['gender'];
                        $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                        $age = ($from->diff($to)->y).'- Years';
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
                    }
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
                    }else{
                        $getMissingPerson = array();
                    }
                    if(count($getMissingPerson) > 0)
                    {
                        $isAadharCorrect = 1;
                        if($getMissingPerson[0]['missinggender'] != NULL)
                        {
                            if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1;
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getMissingPerson[0]['missinggender'];
                                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    if(count($getIfPersonAvailable) > 0)
                                    {
                                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                    }else{
                                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                    }
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }else{
                            $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                            if(count($getFullDetail) > 0)
                            {
                                if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                }
                                if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                                {
                                    $isGenderCorrect = 1;
                                    if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                        $isMissing = 1; 
                                        $personName = $getMissingPerson[0]['missingname'];
                                        $gender = $getMissingPerson[0]['missinggender'];
                                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                                        $from=new DateTime(date('Y-m-d'));
                                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                        $age = ($from->diff($to)->y).'- Years';
                                        if(count($getIfPersonAvailable) > 0)
                                        {
                                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                        }else{
                                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                        }
                                        if(count($getIfPersonAvailable) == 0)
                                        {
                                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                        }   
                                    }
                                }   
                            }else{
                                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                                if(count($getUserDetail) > 0)
                                {
                                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                    }
                                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                    {
                                        $isGenderCorrect = 1;
                                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                        {
                                            $isDobCorrect = 1;
                                            $isMissing = 1; 
                                            $personName = $getUserDetail[0]['aadharname'];
                                            $gender = $getUserDetail[0]['gender'];
                                            $aadhar = $getUserDetail[0]['aadhar_id'];
                                            $from=new DateTime(date('Y-m-d'));
                                            $to   = new DateTime($getUserDetail[0]['dob']);
                                            $age = ($from->diff($to)->y).'- Years';
                                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                            
                                            if(count($getIfPersonAvailable) == 0)
                                            {
                                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                            }   
                                        }
                                    }
                                }
                            }
                        }
                    }else{
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                        }else{
                            $getUserDetail = array();
                        }
                        if(count($getUserDetail) > 0)
                        {
                            $isAadharCorrect = 1;
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 0; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'isPersonFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'gender' => $_POST['gender'],
                        'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                        'idNumber' => $_POST['dlNumber'],
                        'idType' => $_POST['idType'],
                    );
                    $this->db->where('Id',$_SESSION['checkId']);
                    $update = $this->db->update('checkperson',$insertdata);
                    if($insert)
                    {
                        if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                        {
                            $response = array(
                                'status' => 'success',
                                'isVisible' => $isVisible,
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                                'message' => 'Person Found',
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => $userphoto
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }
                if($_POST['idType'] == 'voter')
                {
                    $idNumber = $_POST['voterId'];
                    $getIfAlready = $this->db->query('select * from voterslist where voterNumber="'.$idNumber.'"')->result_array();
                    if(count($getIfAlready) > 0)
                    {
                        $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'].' and gender="'.$_POST['gender'].'" and dob="'.date('Y-m-d',strtotime($_POST['dob'])).'"')->result_array();   
                    }else{
                        $getIfPersonAvailable = array();
                    }
                    $userphoto = '';
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $isVisible = $getIfPersonAvailable[0]['visibility'];
                        $isUserFound = 1;
                        $isVerified = 1;
                        $personName = $getIfPersonAvailable[0]['aadharname'];
                        $gender = $getIfPersonAvailable[0]['gender'];
                        $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                        $age = ($from->diff($to)->y).'- Years';
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
                    }
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
                    }else{
                        $getMissingPerson = array();
                    }
                    if(count($getMissingPerson) > 0)
                    {
                        $isAadharCorrect = 1;
                        if($getMissingPerson[0]['missinggender'] != NULL)
                        {
                            if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1;
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getMissingPerson[0]['missinggender'];
                                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    if(count($getIfPersonAvailable) > 0)
                                    {
                                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                    }else{
                                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                    }
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }else{
                            $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                            if(count($getFullDetail) > 0)
                            {
                                if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                }
                                if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                                {
                                    $isGenderCorrect = 1;
                                    if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                        $isMissing = 1; 
                                        $personName = $getMissingPerson[0]['missingname'];
                                        $gender = $getMissingPerson[0]['missinggender'];
                                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                                        $from=new DateTime(date('Y-m-d'));
                                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                        $age = ($from->diff($to)->y).'- Years';
                                        if(count($getIfPersonAvailable) > 0)
                                        {
                                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                        }else{
                                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                        }
                                        if(count($getIfPersonAvailable) == 0)
                                        {
                                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                        }   
                                    }
                                }   
                            }else{
                                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                                if(count($getUserDetail) > 0)
                                {
                                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                    }
                                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                    {
                                        $isGenderCorrect = 1;
                                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                        {
                                            $isDobCorrect = 1;
                                            $isMissing = 1; 
                                            $personName = $getUserDetail[0]['aadharname'];
                                            $gender = $getUserDetail[0]['gender'];
                                            $aadhar = $getUserDetail[0]['aadhar_id'];
                                            $from=new DateTime(date('Y-m-d'));
                                            $to   = new DateTime($getUserDetail[0]['dob']);
                                            $age = ($from->diff($to)->y).'- Years';
                                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                            if(count($getIfPersonAvailable) == 0)
                                            {
                                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                            }   
                                        }
                                    }
                                }
                            }
                        }
                    }else{
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                        }else{
                            $getUserDetail = array();
                        }
                        if(count($getUserDetail) > 0)
                        {
                            $isAadharCorrect = 1;
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 0; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'isPersonFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'gender' => $_POST['gender'],
                        'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                        'idNumber' => $_POST['voterId'],
                        'idType' => $_POST['idType'],
                    );
                    $this->db->where('Id',$_SESSION['checkId']);
                    $update = $this->db->update('checkperson',$insertdata);
                    if($update)
                    {
                        if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                        {
                            $response = array(
                                'status' => 'success',
                                'isVisible'=> $isVisible,
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                                'message' => 'Person Found',
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => $userphoto
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }
                if($_POST['idType'] == 'pan')
                {
                    $idNumber = $_POST['panNumber'];
                    $getIfAlready = $this->db->query('select * from panlist where panNumber="'.$idNumber.'"')->result_array();
                    if(count($getIfAlready) > 0)
                    {
                        $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
                    }else{
                        $getIfPersonAvailable = array();
                    }
                    $userphoto = '';
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $isVisible = $getIfPersonAvailable[0]['visibility'];
                        $isUserFound = 1;
                        $isVerified = 1;
                        $personName = $getIfPersonAvailable[0]['aadharname'];
                        $gender = $getIfPersonAvailable[0]['gender'];
                        $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                        $age = ($from->diff($to)->y).'- Years';
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
                    }
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
                    }else{
                        $getMissingPerson = array();
                    }
                    if(count($getMissingPerson) > 0)
                    {
                        $isAadharCorrect = 1;
                        if($getMissingPerson[0]['missinggender'] != NULL)
                        {
                            if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1;
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getMissingPerson[0]['missinggender'];
                                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    if(count($getIfPersonAvailable) > 0)
                                    {
                                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                    }else{
                                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                    }
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }else{
                            $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                            if(count($getFullDetail) > 0)
                            {
                                if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                }
                                if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                                {
                                    $isGenderCorrect = 1;
                                    if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                        $isMissing = 1; 
                                        $personName = $getMissingPerson[0]['missingname'];
                                        $gender = $getMissingPerson[0]['missinggender'];
                                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                                        $from=new DateTime(date('Y-m-d'));
                                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                        $age = ($from->diff($to)->y).'- Years';
                                        if(count($getIfPersonAvailable) > 0)
                                        {
                                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                        }else{
                                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                        }
                                        if(count($getIfPersonAvailable) == 0)
                                        {
                                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                        }   
                                    }
                                }   
                            }else{
                                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                                if(count($getUserDetail) > 0)
                                {
                                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                    }
                                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                    {
                                        $isGenderCorrect = 1;
                                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                        {
                                            $isDobCorrect = 1;
                                            $isMissing = 1; 
                                            $personName = $getUserDetail[0]['aadharname'];
                                            $gender = $getUserDetail[0]['gender'];
                                            $aadhar = $getUserDetail[0]['aadhar_id'];
                                            $from=new DateTime(date('Y-m-d'));
                                            $to   = new DateTime($getUserDetail[0]['dob']);
                                            $age = ($from->diff($to)->y).'- Years';
                                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                            if(count($getIfPersonAvailable) == 0)
                                            {
                                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                            }   
                                        }
                                    }
                                }
                            }
                        }
                    }else{
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                        }else{
                            $getUserDetail = array();
                        }
                        if(count($getUserDetail) > 0)
                        {
                            $isAadharCorrect = 1;
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 0; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'isPersonFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'gender' => $_POST['gender'],
                        'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                        'idNumber' => $_POST['panNumber'],
                        'idType' => $_POST['idType'],
                    );
                    $this->db->where('Id',$_SESSION['checkId']);
                    $update = $this->db->update('checkperson',$insertdata);
                    if($update)
                    {
                        if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                        {
                            $response = array(
                                'status' => 'success',
                                'isVisible' => $isVisible,
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                                'message' => 'Person Found',
                                'isMissing' => $isMissing,
                                'isRegistered' => $isUserFound,
                                'isVerified' => $isVerified,
                                'image' => $userphoto
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }   
            }
        }
    }

    function deleteUnknownPersonMobile()
    {
        if(isset($_POST['id']))
        {
            $getDetail = $this->db->query('select * from unknown_person where id='.$_POST['id'])->result_array();
            if($_POST['setting'] == 1)
            {
                if($getDetail[0]['otp'] == $_POST['otp'])
                {
                    if($_POST['index'] == 2)
                    {
                        $update = $this->db->query('update unknown_person set isProfileContact2=0,well2=NULL,wellrel2=NULL,otherrelationname2=NULL where id='.$_POST['id']);   
                    }else if($_POST['index'] == 3)
                    {
                        $update = $this->db->query('update unknown_person set isProfileContact3=0,well3=NULL,wellrel3=NULL,otherrelationname3=NULL where id='.$_POST['id']);   
                    }
                    else{
                        $update = $this->db->query('update unknown_person set isProfileContact1=0,well1=NULL,wellrel1=NULL,otherrelationname1=NULL where id='.$_POST['id']);   
                    }
                    if($update)
                    {
                        $response = array(
                            'status' => 'success',
                            'message' => 'Mobile Number Deleted Successfully'
                        );
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                    }
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Invalid OTP'
                    );
                    echo json_encode($response);   
                }   
            }else{
                if($_POST['index'] == 2)
                {
                    $update = $this->db->query('update unknown_person set isProfileContact2=0,well2=NULL,wellrel2=NULL,otherrelationname2=NULL where id='.$_POST['id']);   
                }else if($_POST['index'] == 3)
                {
                    $update = $this->db->query('update unknown_person set isProfileContact3=0,well3=NULL,wellrel3=NULL,otherrelationname3=NULL where id='.$_POST['id']);   
                }
                else{
                    $update = $this->db->query('update unknown_person set isProfileContact1=0,well1=NULL,wellrel1=NULL,otherrelationname1=NULL where id='.$_POST['id']);   
                }
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Mobile Number Deleted Successfully'
                    );
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                }
                echo json_encode($response);   
            }   
        }else{
            $getDetail = $this->db->query('select * from unknown_person where id='.$_SESSION['unknownId'])->result_array();
            if($_POST['setting'] == 1)
            {
                if($getDetail[0]['otp'] == $_POST['otp'])
                {
                    if($_POST['index'] == 2)
                    {
                        $update = $this->db->query('update unknown_person set isProfileContact2=0,well2=NULL,wellrel2=NULL,otherrelationname2=NULL where id='.$_SESSION['unknownId']);   
                    }else if($_POST['index'] == 3)
                    {
                        $update = $this->db->query('update unknown_person set isProfileContact3=0,well3=NULL,wellrel3=NULL,otherrelationname3=NULL where id='.$_SESSION['unknownId']);   
                    }
                    else{
                        $update = $this->db->query('update unknown_person set isProfileContact1=0,well1=NULL,wellrel1=NULL,otherrelationname1=NULL where id='.$_SESSION['unknownId']);   
                    }
                    if($update)
                    {
                        $response = array(
                            'status' => 'success',
                            'message' => 'Mobile Number Deleted Successfully'
                        );
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                    }
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Invalid OTP'
                    );
                    echo json_encode($response);   
                }   
            }else{
                if($_POST['index'] == 2)
                {
                    $update = $this->db->query('update unknown_person set isProfileContact2=0,well2=NULL,wellrel2=NULL,otherrelationname2=NULL where id='.$_SESSION['unknownId']);   
                }else if($_POST['index'] == 3)
                {
                    $update = $this->db->query('update unknown_person set isProfileContact3=0,well3=NULL,wellrel3=NULL,otherrelationname3=NULL where id='.$_SESSION['unknownId']);   
                }
                else{
                    $update = $this->db->query('update unknown_person set isProfileContact1=0,well1=NULL,wellrel1=NULL,otherrelationname1=NULL where id='.$_SESSION['unknownId']);   
                }
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Mobile Number Deleted Successfully'
                    );
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                }
                echo json_encode($response);   
            }   
        }
    }

    function sendDeleteUnknownPersonOtp()
    {
        if(isset($_POST['id']))
        {
            $getDetail = $this->db->query('select * from unknown_person where id='.$_POST['id'])->result_array();
            $string = '0123456789';
            $string_shuffled = str_shuffle($string);
            $otp = substr($string_shuffled, 1, 4);
            $sendStatus = $this->sendMessage91Otp((($getDetail[0]['person_name'] != '') ? $getDetail[0]['person_name'] : $_POST['mobile']),$_POST['mobile'],$otp,$this->config->item('login_template_id'));
            if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                $response = [
                    'status' => 'error',
                    'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                ];
                echo json_encode($response);
                die();
            }
            $update = $this->db->query('update unknown_person set otp='.$otp.' where id='.$_POST['id']);
            if($update)
            {
                $response = array(
                    'status' => 'success'
                );
            }else{
                $response = array(
                    'status' => 'error'
                );
            }
            echo json_encode($response);   
        }else{
            $getDetail = $this->db->query('select * from unknown_person where id='.$_SESSION['unknownId'])->result_array();
            $string = '0123456789';
            $string_shuffled = str_shuffle($string);
            $otp = substr($string_shuffled, 1, 4);
            $sendStatus = $this->sendMessage91Otp($_SESSION['aadharName'],$_POST['mobile'],$otp,$this->config->item('login_template_id'));
            if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                $response = [
                    'status' => 'error',
                    'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                ];
                echo json_encode($response);
                die();
            }
            $update = $this->db->query('update unknown_person set otp='.$otp.' where id='.$_SESSION['unknownId']);
            if($update)
            {
                $response = array(
                    'status' => 'success'
                );
            }else{
                $response = array(
                    'status' => 'error'
                );
            }
            echo json_encode($response);      
        }
    }

    function verifyUnknownPersonMobileOtp()
    {
        if(isset($_POST['id']))
        {
            $getPreviousDetail = $this->db->query('select * from unknown_person where id='.$_POST['id'])->result_array();
            if($_POST['otp'] == $getPreviousDetail[0]['otp'])
            {
                if($_POST['index'] == 2)
                {
                    $updatedata = array(
                        'well2' => $_POST['mobile'],
                        'isProfileContact2' => 0,
                    );   
                }else if($_POST['index'] == 3)
                {
                    $updatedata = array(
                        'well3' => $_POST['mobile'],
                        'isProfileContact3' => 0,
                    );   
                }
                else{
                    $updatedata = array(
                        'well1' => $_POST['mobile'],
                        'isProfileContact1' => 0,
                    );
                }
                $this->db->where('id',$getPreviousDetail[0]['id']);
                $update = $this->db->update('unknown_person',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'New Contact Added Successfully'
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'OTP Invalid'
                );
                echo json_encode($response);
            }
        }else{
            $getPreviousDetail = $this->db->query('select * from unknown_person where id='.$_SESSION['unknownId'])->result_array();
            if($_POST['otp'] == $getPreviousDetail[0]['otp'])
            {
                if($_POST['index'] == 2)
                {
                    $updatedata = array(
                        'well2' => $_POST['mobile'],
                        'isProfileContact2' => 0,
                    );   
                }else if($_POST['index'] == 3)
                {
                    $updatedata = array(
                        'well3' => $_POST['mobile'],
                        'isProfileContact3' => 0,
                    );   
                }
                else{
                    $updatedata = array(
                        'well1' => $_POST['mobile'],
                        'isProfileContact1' => 0,
                    );
                }
                $this->db->where('id',$getPreviousDetail[0]['id']);
                $update = $this->db->update('unknown_person',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'New Contact Added Successfully'
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'OTP Invalid'
                );
                echo json_encode($response);
            }   
        }
    }

    function sendUnknownPersonMobileOtp()
    {
        if(isset($_POST['id']))
        {
            $getPreviousDetail = $this->db->query('select * from unknown_person where id='.$_POST['id'])->result_array();
            $getIfAlreadyOtherInNominee1 = $this->db->query('select * from unknown_person where well1="'.$_POST['mobile'].'" and id='.$_POST['id'])->result_array();
            $getIfAlreadyOtherInNominee2 = $this->db->query('select * from unknown_person where well2="'.$_POST['mobile'].'" and id='.$_POST['id'])->result_array();
            $getIfAlreadyOtherInNominee3 = $this->db->query('select * from unknown_person where well3="'.$_POST['mobile'].'" and id='.$_POST['id'])->result_array();
            if(count($getIfAlreadyOtherInNominee1) > 0 || count($getIfAlreadyOtherInNominee2) > 0 || count($getIfAlreadyOtherInNominee3) > 0)
            {
                $response = array(
                    'status' => 'username',
                    'message' => 'Mobile number already added'
                );
                echo json_encode($response);
            }else{
                // $otp = '1234';
                $string = '0123456789';
                $string_shuffled = str_shuffle($string);
                $otp = substr($string_shuffled, 1, 4);
                $sendStatus = $this->sendMessage91Otp((($getDetail[0]['person_name'] != '') ? $getDetail[0]['person_name'] : $_POST['mobile']),$_POST['mobile'],$otp,$this->config->item('login_template_id'));
                if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                    $response = [
                        'status' => 'error',
                        'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                    ];
                    echo json_encode($response);
                    die();
                }
                $updatedata = array(
                    'otp' => $otp
                );
                $this->db->where('id',$getPreviousDetail[0]['id']);
                $update = $this->db->update('unknown_person',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'OTP Sent Successfully'
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }
        }else{
            $getPreviousDetail = $this->db->query('select * from unknown_person where id='.$_SESSION['unknownId'])->result_array();
            $getIfAlreadyOtherInNominee1 = $this->db->query('select * from unknown_person where well1="'.$_POST['mobile'].'" and id='.$_SESSION['unknownId'])->result_array();
            $getIfAlreadyOtherInNominee2 = $this->db->query('select * from unknown_person where well2="'.$_POST['mobile'].'" and id='.$_SESSION['unknownId'])->result_array();
            $getIfAlreadyOtherInNominee3 = $this->db->query('select * from unknown_person where well3="'.$_POST['mobile'].'" and id='.$_SESSION['unknownId'])->result_array();
            if(count($getIfAlreadyOtherInNominee1) > 0 || count($getIfAlreadyOtherInNominee2) > 0 || count($getIfAlreadyOtherInNominee3) > 0)
            {
                $response = array(
                    'status' => 'username',
                    'message' => 'Mobile number already added'
                );
                echo json_encode($response);
            }else{
                // $otp = '1234';
                $string = '0123456789';
                $string_shuffled = str_shuffle($string);
                $otp = substr($string_shuffled, 1, 4);
                $sendStatus = $this->sendMessage91Otp((($getDetail[0]['person_name'] != '') ? $getDetail[0]['person_name'] : $_POST['mobile']),$_POST['mobile'],$otp,$this->config->item('login_template_id'));
                if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                    $response = [
                        'status' => 'error',
                        'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                    ];
                    echo json_encode($response);
                    die();
                }
                $updatedata = array(
                    'otp' => $otp
                );
                $this->db->where('id',$getPreviousDetail[0]['id']);
                $update = $this->db->update('unknown_person',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'OTP Sent Successfully'
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }   
        }
    }
    
    function resendFirOtp()
    {
        $string = '0123456789';
        $string_shuffled = str_shuffle($string);
        $otp = substr($string_shuffled, 1, 4);
        $this->sendTextLocalOtp($_SESSION['aadharName'],$_SESSION['loginmob'],$otp);
        $updatedata = array(
            'otp' => $otp
        );
        $this->db->where('uid',$_SESSION['user_id']);
        $update = $this->db->update('user',$updatedata);   
    }
    
    function updateFilterDetails()
    {
         for($i=0;$i<count($_POST['subcategory']);$i++)
        {
            $split = explode('c-',$_POST['subcategory'][$i]);
            if(count($split) == 1)
            {
                $deleteIfPrevious = $this->db->query('delete from userOtherInfo where subCategoryId='.$_POST['subcategory'][$i].' and userId='.$_SESSION['user_id']);
                $getCategory = $this->db->query('select * from subcategories where Id='.$_POST['subcategory'][$i])->result_array();
                $insertdata = array(
                    'categoryId' => $getCategory[0]['categoryId'],
                    'subCategoryId' => $_POST['subcategory'][$i],
                    'userId' => $_SESSION['user_id']
                );
                $insert = $this->db->insert('userOtherInfo',$insertdata);   
            }else{
                $deleteIfPrevious = $this->db->query('delete from userOtherInfo where categoryId='.$split[1].' and userId='.$_SESSION['user_id']);
            }
        }
        $response = array(
            'status' => 'success',
            'message' => 'Data Saved Successfully'
        );
        echo json_encode($response);
    }
    
    function upload_filter_details()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'upload_filter_details';
            $page_data['title'] = 'Add Your Filters';
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect('login','refresh');
        }
    }
    
    function upload_partner_details()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'upload_partner_details';
            $page_data['title'] = 'Upload Spouse Details';
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect('login','refresh');
        }   
    }
    
    function upload_nominee_details()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'upload_nominee_details';
            $page_data['title'] = 'Upload Nominee Details';
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect('login','refresh');
        }
    }
    
    function saveSpouseDetails()
    {
        unset($_POST['_token']);
        $this->db->where('uid',$_SESSION['user_id']);
        $update = $this->db->update('user',$_POST);
        if($update)
        {
            $response['status'] = 'success';
        }else{
            $response['status'] = 'error';
        }
        echo json_encode($response);
    }

    function filterDetailsAfterLogin()
    {
        $this->db->where('missingdate >=',date('Y-m-d 00:00:00',strtotime($_POST['startDate'])));
        $this->db->where('missingdate <=',date('Y-m-d 23:59:59',strtotime($_POST['endDate'])));
        if($_POST['state'] != 'All' && $_POST['state'] != '')
        {
            $this->db->where('fatherstate',$_POST['state']);   
            if($_POST['district'] != '' && $_POST['district'] != 'All')
            {
                $this->db->where('fatherdistrict',$_POST['district']);   
            }
            if($_POST['city'] != '' && $_POST['city'] != 'All')
            {
                $this->db->like('fathercity',$_POST['city'],'both');   
            }
        }
        $this->db->like('missinggender',$_POST['gender'],'after');
        if($_POST['religion'] != '')
        {
            $this->db->where('missingreligion',$_POST['religion']);
        }
        if($_POST['personName'] != '')
        {
            $this->db->like('missingname',$_POST['personName'],'both');
        }
        $this->db->where('isFound',0);
        $this->db->where('isFinalSubmitted',1);
        $getMissingPerson = $this->db->get('missingperson')->result_array();
        $missingAadhar = array();
        $missingId = array();
        $lapataAadhar = array();
        $lapataId = array();
        $isAadharCorrect = 0;
        if(count($getMissingPerson) > 0)
        {
            foreach($getMissingPerson as $k=>$v)
            {
                $subcategories = array();
                if($_POST['height'] != '')
                {
                    array_push($subcategories,$_POST['height']);
                }
                if($_POST['age'] != '')
                {
                    array_push($subcategories,$_POST['age']);   
                }
                if(count($subcategories) > 0)
                {
                    $this->db->where_in('userSubCategory',$subcategories);
                    $this->db->where('personId',$v['Id']);
                    $this->db->from('userproperty');
                    $getCategorialData = $this->db->get()->result_array();
                    if(count($getCategorialData) > 0)
                    {
                        array_push($missingAadhar,$v['missingaadhar']);
                        array_push($missingId,$v['Id']);
                    }
                }else{
                    array_push($missingAadhar,$v['missingaadhar']);
                    array_push($missingId,$v['Id']);
                }
            }
        }
        if($_POST['state'] != 'All' && $_POST['state'] != '')
        {
            $this->db->where('state',$_POST['state']);   
            if($_POST['district'] != '' && $_POST['district'] != 'All')
            {
                $this->db->where('district',$_POST['district']);   
            }
            if($_POST['city'] != '' && $_POST['city'] != 'All')
            {
                $this->db->like('city',$_POST['city'],'both');   
            }
        }
        $this->db->where('expiryDate >=',date('Y-m-d'));
        $this->db->where('dateCreated >=',date('Y-m-d 00:00:00',strtotime($_POST['startDate'])));
        $this->db->where('dateCreated <=',date('Y-m-d 23:59:59',strtotime($_POST['endDate'])));
        if($_POST['gender'] == 'Male')
        {
            $this->db->like('Gender','boy','after');
        }else{
            $this->db->like('Gender','girl','after');   
        }
        if($_POST['personName'] != '')
        {
            $this->db->like('person_name',$_POST['personName'],'both');
        }
        if($_POST['height'] != '')
        {
            $this->db->where('Height',$_POST['height']);   
        }
        if($_POST['religion'] != '')
        {
            $this->db->where('Religion',$_POST['religion']);
        }
        if($_POST['age'] != '')
        {
            $this->db->where('Age',$_POST['age']);   
        }
        $this->db->where('isFound',0);
        $this->db->where('awsEventName','All');
        $getIfLapataAvailable = $this->db->get('unknown_person')->result_array();
        if(count($getIfLapataAvailable) > 0)
        {
            foreach($getIfLapataAvailable as $k=>$v)
            {
                array_push($lapataAadhar,$v['aadharNumber']);
                array_push($lapataId,$v['id']);
            }
        }
        if(count($lapataAadhar) > 0)
        {
            if(count($missingAadhar) > 0)
            {
                foreach($lapataAadhar as $k=>$v)
                {
                    foreach($missingAadhar as $k1=>$v1)
                    {
                        if($v == $v1)
                        {
                            unset($missingId[$k1]);
                        }
                    }
                }
            }
        }
        if(isset($_SESSION['filteredId']))
        {
            $updatedata = array(
                'state' => $_POST['state'],
                'district' => $_POST['district'],
                'city' => $_POST['city'],
                'age' => $_POST['age'],
                'height' => $_POST['height'],
                'personName' => $_POST['personName'],
                'gender' => $_POST['gender'],
                'startDate' => $_POST['startDate'],
                'endDate' => $_POST['endDate'],
                'religion' => $_POST['religion'],
                'missingIds' => implode(',',$missingId),
                'lapataId' => implode(',',$lapataId),
                'userId' => $_SESSION['user_id'] 
            );
            $this->db->where('Id',$_SESSION['filteredId']);
            $this->db->update('searchFilterLogsAfterLogin',$updatedata);
        }else{
            $insertdata = array(
                'state' => $_POST['state'],
                'district' => $_POST['district'],
                'city' => $_POST['city'],
                'age' => $_POST['age'],
                'height' => $_POST['height'],
                'personName' => $_POST['personName'],
                'gender' => $_POST['gender'],
                'startDate' => $_POST['startDate'],
                'endDate' => $_POST['endDate'],
                'religion' => $_POST['religion'],
                'missingIds' => implode(',',$missingId),
                'lapataId' => implode(',',$lapataId),
                'userId' => $_SESSION['user_id'] 
            );
            $this->db->insert('searchFilterLogsAfterLogin',$insertdata);
            $_SESSION['filteredId'] = $this->db->insert_id();
        }
        $finalResponse = array(
            'count' => (count($lapataId) + count($missingId))
        );
        echo json_encode($finalResponse);
    }
    
    function filterUnknownPerson()
    {
        if(isset($_SESSION['landingMob']))
        {
            if(($_POST['startdate']) != '')
            {
                $this->db->where('dateCreated >=',date('Y-m-d 00:00:00',strtotime($_POST['startdate'])));
            }
            if(($_POST['enddate']) != '')
            {
                $this->db->where('dateCreated <=',date('Y-m-d 23:59:59',strtotime($_POST['enddate'])));
            }
            if(($_POST['personName']) != '')
            {
                $this->db->like('missingname',$_POST['personName']);
            }
            $result = $this->db->get('missingperson')->result_array();
            $finalId = array();
            if(count($result) > 0)
            {
                foreach($result as $k=>$v)
                {
                    if(($_POST['gender']) != '')
                    {
                        if($v['missinggender'] != '' || $v['missinggender'] != NULL)
                        {
                            if($v['missinggender'] == $_POST['gender'])
                            {
                                array_push($finalId,$v['Id']);
                            }
                        }else{
                            $getMissingPersonDetail = $this->db->query('select * from missingpersondetail where missingId='.$v['Id'])->result_array();
                            if(count($getMissingPersonDetail) > 0)
                            {
                                if($getMissingPersonDetail[0]['gender'] != '' || $getMissingPersonDetail[0]['missinggender'] != NULL)
                                {
                                    if(strtolower($getMissingPersonDetail[0]['gender']) == strtolower($_POST['gender']))
                                    {
                                        array_push($finalId,$v['Id']);
                                    }
                                }else{
                                    $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$v['missingaadhar'].'"')->result_array();
                                    if(count($getUserDetail) > 0)
                                    {
                                        if($getUserDetail[0]['gender'] != '' || $getUserDetail[0]['gender'] != NULL)
                                        {
                                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                            {
                                                array_push($finalId,$v['Id']);
                                            }
                                        }
                                    }
                                }       
                            }else{
                                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$v['missingaadhar'].'"')->result_array();
                                if(count($getUserDetail) > 0)
                                {
                                    if($getUserDetail[0]['gender'] != '' || $getUserDetail[0]['gender'] != NULL)
                                    {
                                        if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                        {
                                            array_push($finalId,$v['Id']);
                                        }
                                    }
                                }
                            }
                        }
                    }      
                    if(($_POST['fatherName']) != '')
                    {
                        $getMissingPersonDetail = $this->db->query('select * from missingpersondetail where missingId='.$v['Id'])->result_array();
                        if(count($getMissingPersonDetail) > 0)
                        {
                            if($getMissingPersonDetail[0]['fatherName'] != '' || $getMissingPersonDetail[0]['fatherName'] != NULL)
                            {
                                if(strtolower($getMissingPersonDetail[0]['fatherName']) == strtolower($_POST['fatherName']))
                                {
                                    array_push($finalId,$v['Id']);
                                }
                            }else{
                                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$v['missingaadhar'].'"')->result_array();
                                if(count($getUserDetail) > 0)
                                {
                                    if($getUserDetail[0]['careof'] != '' || $getUserDetail[0]['careof'] != NULL)
                                    {
                                        $explode = explode(" ", $getUserDetail[0]['careof'],2);
                                        if(strtolower($explode[1]) == strtolower($_POST['fatherName']))
                                        {
                                            array_push($finalId,$v['Id']);
                                        }
                                    }
                                }
                            }       
                        }else{
                            $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$v['missingaadhar'].'"')->result_array();
                            if(count($getUserDetail) > 0)
                            {
                                if($getUserDetail[0]['careof'] != '' || $getUserDetail[0]['careof'] != NULL)
                                {
                                    $explode = explode(" ", $getUserDetail[0]['careof'],2);
                                    if(strtolower($explode[1]) == strtolower($_POST['fatherName']))
                                    {
                                        array_push($finalId,$v['Id']);
                                    }
                                }
                            }
                        }
                    }      
                    if(($_POST['dob']) != '')
                    {
                        $_POST['dob'] = date('Y-m-d',strtotime($_POST['dob']));
                        if($v['missingdob'] != '' || $v['missingdob'] != NULL)
                        {
                            if($v['missingdob'] == $_POST['dob'])
                            {
                                array_push($finalId,$v['Id']);
                            }
                        }else{
                            $getMissingPersonDetail = $this->db->query('select * from missingpersondetail where missingId='.$v['Id'])->result_array();
                            if(count($getMissingPersonDetail) > 0)
                            {
                                if($getMissingPersonDetail[0]['dob'] != '' || $getMissingPersonDetail[0]['dob'] != NULL)
                                {
                                    if(strtolower($getMissingPersonDetail[0]['dob']) == strtolower($_POST['dob']))
                                    {
                                        array_push($finalId,$v['Id']);
                                    }
                                }else{
                                    $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$v['missingaadhar'].'"')->result_array();
                                    if(count($getUserDetail) > 0)
                                    {
                                        if($getUserDetail[0]['dob'] != '' || $getUserDetail[0]['dob'] != NULL)
                                        {
                                            if($getUserDetail[0]['dob'] == $_POST['dob'])
                                            {
                                                array_push($finalId,$v['Id']);
                                            }
                                        }
                                    }
                                }       
                            }else{
                                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$v['missingaadhar'].'"')->result_array();
                                if(count($getUserDetail) > 0)
                                {
                                    if($getUserDetail[0]['dob'] != '' || $getUserDetail[0]['dob'] != NULL)
                                    {
                                        if($getUserDetail[0]['dob'] == $_POST['dob'])
                                        {
                                            array_push($finalId,$v['Id']);
                                        }
                                    }
                                }
                            }
                        }
                    }      
                    if($_POST['gender'] == '' && $_POST['fatherName'] == '' && $_POST['dob'] == '')
                    {
                        array_push($finalId,$v['Id']);
                    }
                }
                $finalId = array_unique($finalId);
            }
            if(count($finalId) > 0)
            {
                $this->db->where_in('Id', $finalId);
                $data = $this->db->get('missingperson')->result_array();
                foreach($data as $k=>$v)
                {
                    $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$v['missingaadhar'].'"')->result_array();
                    if(count($getUserDetail) > 0)
                    {
                        $finaldata[] = array(
                            'gender' => ($getUserDetail[0]['gender']),
                            'facematchphoto' => (($v['facematchphoto'] != NULL) ? $v['facematchphoto'] : $getUserDetail[0]['facematchphoto']),
                            'dateCreated' => date('d-m-Y',strtotime($v['dateCreated'])),
                            'personName' => $v['missingname'],
                            'Id' => $v['Id']
                        );      
                    }else{
                        $getPersonDetail = $this->db->query('select * from missingpersondetail where missingId='.$v['Id'])->result_array();
                        $finaldata[] = array(
                            'gender' => (($v['missinggender'] != NULL) ? $v['missinggender'] : $getPersonDetail[0]['gender']),
                            'facematchphoto' => $v['facematchphoto'],
                            'dateCreated' => date('d-m-Y',strtotime($v['dateCreated'])),
                            'personName' => $v['missingname'],
                            'Id' => $v['Id']
                        );
                    }
                }
                $page_data['finaldata'] = $finaldata;
            }else{
                $page_data['finaldata'] = array();
            }
            $page_data['page_name'] = 'filter_unknown_person';
            $page_data['title'] = 'Unknown Person';
            $this->load->view('nonkyc/index', $page_data);
        }else{
            redirect(base_url().'login','refresh');
        }
    }
    
    function personstep2()
    {
        $getDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
        if($getDetail[0]['otp'] == $_POST['otp'])
        {
            $getMissingId = $this->db->query('select * from missingperson where missingId="'.$_SESSION['missingPersonId'].'"')->result_array();
            $getPaymentSettings = $this->db->query('select * from settings where name="personPayment"')->result_array();
            if($getPaymentSettings[0]['value'] != 1)
            {
                $updatedata = array(
                    'isFinalSubmitted'=>1,
                    'finalAmount' => 0,
                    'paymentId' => 0,
                    'rewardamount' => 0,
                    'paymentStatus' => 'Success',
                );
                $this->db->where('missingId',$_SESSION['missingPersonId']);
                $update = $this->db->update('missingperson',$updatedata);
            }
            $getOldPhotos = $this->db->query('select * from missingpersonphotos where missingId='.$getMissingId[0]['Id'])->result_array();
            // $delete = $this->db->query('delete from missingpersonphotos where missingId='.$getMissingId[0]['Id']);
            $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getMissingId[0]['missingaadhar'].'"')->result_array();
            if(count($getOldPhotos) == 0)
            {
                if(count($getUserDetail) > 0)
                {
                    $getLatestUserPhotos = $this->db->query('select * from userphotos where userId='.$getUserDetail[0]['uid'])->result_array();   
                    if(count($getLatestUserPhotos) > 0)
                    {
                        foreach($getLatestUserPhotos as $k=>$v)
                        {
                            $split = explode('upload/profile/',$v['photourl']);
                            $newurl = 'upload/missingperson/'.$split[1];
                            copy($v['photourl'], $newurl);
                            $insertdata = array(
                                'photourl' => $newurl,
                                'missingId' => $getMissingId[0]['Id']
                            );
                            $this->db->insert('missingpersonphotos',$insertdata);      
                        }
                    }
                }   
            }
            $response = array(
                'status' => 'success',
                'message' => 'Verified Successfully'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'isAlready' => false,
                'message' => 'Invalid Otp'
            );
            echo json_encode($response);
        }
    }
    
    function upload_details()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'upload_details';
            $page_data['title'] = 'Upload Details';
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect('login','refresh');
        }   
    }
    
    function sendDeleteProfileOtp()
    {
        $string = '0123456789';
        $string_shuffled = str_shuffle($string);
        $otp = substr($string_shuffled, 1, 4);
        $sendStatus = $this->sendMessage91Otp($_SESSION['aadharName'],$_POST['mobile'],$otp,$this->config->item('login_template_id'));
        if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
            $response = [
                'status' => 'error',
                'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
            ];
            echo json_encode($response);
            die();
        }
        $update = $this->db->query('update nonKycUser set otp='.$otp.' where uid='.$_SESSION['user_id']);
        if($update)
        {
            $response = array(
                'status' => 'success'
            );
        }else{
            $response = array(
                'status' => 'error'
            );
        }
        echo json_encode($response);   
    }
    
    function deleteMissingPersonContact()
    {
        $getDetail = $this->db->query('select * from missingperson where missingId='.$_SESSION['missingPersonId'])->result_array();
        if($_POST['setting'] == 1)
        {
            if($getDetail[0]['otp'] == $_POST['otp'])
            {
                if($_POST['index'] == 2)
                {
                    $update = $this->db->query('update missingperson set mobile2=NULL,relation2=NULL,otherrelationname2=NULL where missingId='.$_SESSION['missingPersonId']);   
                }else if($_POST['index'] == 3)
                {
                    $update = $this->db->query('update missingperson set mobile3=NULL,relation3=NULL,otherrelationname3=NULL where missingId='.$_SESSION['missingPersonId']);   
                }
                else{
                    $update = $this->db->query('update missingperson set mobile1=NULL,relation1=NULL,otherrelationname1=NULL where missingId='.$_SESSION['missingPersonId']);   
                }
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Contact Number Deleted Successfully'
                    );
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                }
                echo json_encode($response);   
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Invalid OTP'
                );
                echo json_encode($response);   
            }   
        }else{
            if($_POST['index'] == 2)
            {
                $update = $this->db->query('update missingperson set mobile2=NULL,relation2=NULL,otherrelationname2=NULL where missingId='.$_SESSION['missingPersonId']);   
            }else if($_POST['index'] == 3)
            {
                $update = $this->db->query('update missingperson set mobile3=NULL,relation3=NULL,otherrelationname3=NULL where missingId='.$_SESSION['missingPersonId']);   
            }
            else{
                $update = $this->db->query('update missingperson set mobile1=NULL,relation1=NULL,otherrelationname1=NULL where missingId='.$_SESSION['missingPersonId']);   
            }
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'Contact Number Deleted Successfully'
                );
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
            }
            echo json_encode($response);   
        }
    }
    
    function deleteMissingVehicleContact()
    {
        if(isset($_POST['id']))
        {
            $getDetail = $this->db->query('select * from missingvehicle where Id='.$_POST['id'])->result_array();
            if($_POST['setting'] == 1)
            {
                if($getDetail[0]['otp'] == $_POST['otp'])
                {
                    if($_POST['index'] == 2)
                    {
                        $update = $this->db->query('update missingvehicle set mobile2=NULL,relation2=NULL,otherrelationname2=NULL where Id='.$_POST['id']);   
                    }else if($_POST['index'] == 3)
                    {
                        $update = $this->db->query('update missingvehicle set mobile3=NULL,relation3=NULL,otherrelationname3=NULL where Id='.$_POST['id']);   
                    }
                    else{
                        $update = $this->db->query('update missingvehicle set mobile1=NULL,relation1=NULL,otherrelationname1=NULL where Id='.$_POST['id']);   
                    }
                    if($update)
                    {
                        $response = array(
                            'status' => 'success',
                            'message' => 'Contact Number Deleted Successfully'
                        );
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                    }
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Invalid OTP'
                    );
                    echo json_encode($response);   
                }   
            }else{
                if($_POST['index'] == 2)
                {
                    $update = $this->db->query('update missingvehicle set mobile2=NULL,relation2=NULL,otherrelationname2=NULL where Id='.$_POST['id']);   
                }else if($_POST['index'] == 3)
                {
                    $update = $this->db->query('update missingvehicle set mobile3=NULL,relation3=NULL,otherrelationname3=NULL where Id='.$_POST['id']);   
                }
                else{
                    $update = $this->db->query('update missingvehicle set mobile1=NULL,relation1=NULL,otherrelationname1=NULL where Id='.$_POST['id']);   
                }
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Contact Number Deleted Successfully'
                    );
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                }
                echo json_encode($response);   
            }   
        }else{
            $getDetail = $this->db->query('select * from missingvehicle where Id='.$_SESSION['missingVehicleId'])->result_array();
            if($_POST['setting'] == 1)
            {
                if($getDetail[0]['otp'] == $_POST['otp'])
                {
                    if($_POST['index'] == 2)
                    {
                        $update = $this->db->query('update missingvehicle set mobile2=NULL,relation2=NULL,otherrelationname2=NULL where Id='.$_SESSION['missingVehicleId']);   
                    }else if($_POST['index'] == 3)
                    {
                        $update = $this->db->query('update missingvehicle set mobile3=NULL,relation3=NULL,otherrelationname3=NULL where Id='.$_SESSION['missingVehicleId']);   
                    }
                    else{
                        $update = $this->db->query('update missingvehicle set mobile1=NULL,relation1=NULL,otherrelationname1=NULL where Id='.$_SESSION['missingVehicleId']);   
                    }
                    if($update)
                    {
                        $response = array(
                            'status' => 'success',
                            'message' => 'Contact Number Deleted Successfully'
                        );
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                    }
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Invalid OTP'
                    );
                    echo json_encode($response);   
                }   
            }else{
                if($_POST['index'] == 2)
                {
                    $update = $this->db->query('update missingvehicle set mobile2=NULL,relation2=NULL,otherrelationname2=NULL where Id='.$_SESSION['missingVehicleId']);   
                }else if($_POST['index'] == 3)
                {
                    $update = $this->db->query('update missingvehicle set mobile3=NULL,relation3=NULL,otherrelationname3=NULL where Id='.$_SESSION['missingVehicleId']);   
                }
                else{
                    $update = $this->db->query('update missingvehicle set mobile1=NULL,relation1=NULL,otherrelationname1=NULL where Id='.$_SESSION['missingVehicleId']);   
                }
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Contact Number Deleted Successfully'
                    );
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                }
                echo json_encode($response);   
            }
        }
    }
    
    function deleteVehicleContact()
    {
        if(isset($_POST['id']))
        {
            $getDetail = $this->db->query('select * from vehicles where Id='.$_POST['id'])->result_array();
            if($_POST['setting'] == 1)
            {
                if($getDetail[0]['otp'] == $_POST['otp'])
                {
                    if($_POST['index'] == 2)
                    {
                        $update = $this->db->query('update vehicles set mobile2=NULL,relation2=NULL,otherrelationname2=NULL where Id='.$_POST['id']);   
                    }else if($_POST['index'] == 3)
                    {
                        $update = $this->db->query('update vehicles set mobile3=NULL,relation3=NULL,otherrelationname3=NULL where Id='.$_POST['id']);   
                    }
                    else{
                        $update = $this->db->query('update vehicles set mobile1=NULL,relation1=NULL,otherrelationname1=NULL where Id='.$_POST['id']);   
                    }
                    if($update)
                    {
                        $response = array(
                            'status' => 'success',
                            'message' => 'Contact Number Deleted Successfully'
                        );
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                    }
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Invalid OTP'
                    );
                    echo json_encode($response);   
                }   
            }else{
                if($_POST['index'] == 2)
                {
                    $update = $this->db->query('update vehicles set mobile2=NULL,relation2=NULL,otherrelationname2=NULL where Id='.$_POST['id']);   
                }else if($_POST['index'] == 3)
                {
                    $update = $this->db->query('update vehicles set mobile3=NULL,relation3=NULL,otherrelationname3=NULL where Id='.$_POST['id']);   
                }
                else{
                    $update = $this->db->query('update vehicles set mobile1=NULL,relation1=NULL,otherrelationname1=NULL where Id='.$_POST['id']);   
                }
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Contact Number Deleted Successfully'
                    );
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                }
                echo json_encode($response);   
            }   
        }else{
            $getDetail = $this->db->query('select * from vehicles where Id='.$_SESSION['vehicleId'])->result_array();
            if($_POST['setting'] == 1)
            {
                if($getDetail[0]['otp'] == $_POST['otp'])
                {
                    if($_POST['index'] == 2)
                    {
                        $update = $this->db->query('update vehicles set mobile2=NULL,relation2=NULL,otherrelationname2=NULL where Id='.$_SESSION['vehicleId']);   
                    }else if($_POST['index'] == 3)
                    {
                        $update = $this->db->query('update vehicles set mobile3=NULL,relation3=NULL,otherrelationname3=NULL where Id='.$_SESSION['vehicleId']);   
                    }
                    else{
                        $update = $this->db->query('update vehicles set mobile1=NULL,relation1=NULL,otherrelationname1=NULL where Id='.$_SESSION['vehicleId']);   
                    }
                    if($update)
                    {
                        $response = array(
                            'status' => 'success',
                            'message' => 'Contact Number Deleted Successfully'
                        );
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                    }
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Invalid OTP'
                    );
                    echo json_encode($response);   
                }   
            }else{
                if($_POST['index'] == 2)
                {
                    $update = $this->db->query('update vehicles set mobile2=NULL,relation2=NULL,otherrelationname2=NULL where Id='.$_SESSION['vehicleId']);   
                }else if($_POST['index'] == 3)
                {
                    $update = $this->db->query('update vehicles set mobile3=NULL,relation3=NULL,otherrelationname3=NULL where Id='.$_SESSION['vehicleId']);   
                }
                else{
                    $update = $this->db->query('update vehicles set mobile1=NULL,relation1=NULL,otherrelationname1=NULL where Id='.$_SESSION['vehicleId']);   
                }
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Contact Number Deleted Successfully'
                    );
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                }
                echo json_encode($response);   
            }
        }
    }
    
    function deleteWellWisherMobile()
    {
        $getDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
        if($_POST['setting'] == 1)
        {
            if($getDetail[0]['otp'] == $_POST['otp'])
            {
                if($_POST['index'] == 2)
                {
                    $update = $this->db->query('update user set well2=NULL,wellrel2=NULL,otherrelationname2=NULL where uid='.$_SESSION['user_id']);   
                }else if($_POST['index'] == 3)
                {
                    $update = $this->db->query('update user set well3=NULL,wellrel3=NULL,otherrelationname3=NULL where uid='.$_SESSION['user_id']);   
                }
                else{
                    $update = $this->db->query('update user set well1=NULL,wellrel1=NULL,otherrelationname1=NULL where uid='.$_SESSION['user_id']);   
                }
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Well Wisher Mobile Number Deleted Successfully'
                    );
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                }
                echo json_encode($response);   
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Invalid OTP'
                );
                echo json_encode($response);   
            }   
        }else{
            if($_POST['index'] == 2)
            {
                $update = $this->db->query('update user set well2=NULL,wellrel2=NULL,otherrelationname2=NULL where uid='.$_SESSION['user_id']);   
            }else if($_POST['index'] == 3)
            {
                $update = $this->db->query('update user set well3=NULL,wellrel3=NULL,otherrelationname3=NULL where uid='.$_SESSION['user_id']);   
            }
            else{
                $update = $this->db->query('update user set well1=NULL,wellrel1=NULL,otherrelationname1=NULL where uid='.$_SESSION['user_id']);   
            }
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'Well Wisher Mobile Number Deleted Successfully'
                );
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
            }
            echo json_encode($response);   
        }
    }
    
    function deleteNomineeMobile()
    {
        $getDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
        if($getDetail[0]['otp'] == $_POST['otp'])
        {
            if($_POST['index'] == 2)
            {
                $this->db->query('update user set nominee2Aadhar=NULL,nominee2=NULL,relation2=NULL,othernomineename2=NULL where aadhar_id="'.$getDetail[0]['nominee2Aadhar'].'"');   
                $update = $this->db->query('update user set nominee2Aadhar=NULL,nominee2=NULL,relation2=NULL,othernomineename2=NULL where uid='.$_SESSION['user_id']);   
            }else if($_POST['index'] == 3)
            {
                $this->db->query('update user set nominee3Aadhar=NULL,nominee3=NULL,relation3=NULL,othernomineename3=NULL where aadhar_id="'.$getDetail[0]['nominee3Aadhar'].'"');   
                $update = $this->db->query('update user set nominee3Aadhar=NULL,nominee3=NULL,relation3=NULL,othernomineename3=NULL where uid='.$_SESSION['user_id']);   
            }
            else{
                $this->db->query('update user set nominee1Aadhar=NULL,nominee1=NULL,relation1=NULL,othernomineename1=NULL where aadhar_id="'.$getDetail[0]['nominee1Aadhar'].'"');   
                $update = $this->db->query('update user set nominee1Aadhar=NULL,nominee1=NULL,relation1=NULL,othernomineename1=NULL where uid='.$_SESSION['user_id']);   
            }
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'Nominee Mobile Number Deleted Successfully'
                );
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
            }
            echo json_encode($response);   
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Invalid Otp'
            );
            echo json_encode($response);   
        }
    }
    
    function deleteAlternateMobile()
    {
        $getDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
        if($getDetail[0]['otp'] == $_POST['otp'])
        {
            if($_POST['index'] == 2)
            {
                $update = $this->db->query('update nonKycUser set alternate_mobile2=NULL where uid='.$_SESSION['user_id']);   
            }else{
                $update = $this->db->query('update nonKycUser set alternate_mobile1=NULL where uid='.$_SESSION['user_id']);   
            }
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'Alternate Mobile Number Deleted Successfully'
                );
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
            }
            echo json_encode($response);   
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Invalid Otp'
            );
            echo json_encode($response);   
        }
    }
    
    function missingpersons()
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['title'] = 'Missing Persons';
            $page_data['control'] = 'user';
            $this->load->view('NonKyc/common/header',$page_data); 
            $this->load->view('NonKyc/missingpersons');
            $this->load->view('NonKyc/common/footer');   
        }else{
            redirect(base_url().'login','refresh');
        }
    }
    
    function sendMissingLoginOtp()
    {
        $getIfAlready = $this->db->query('select * from missingtransactions where mobileNumber="'.$_POST['mobile'].'"')->result_array();
        if(count($getIfAlready) > 0)
        {
            // $otp = '1234';
            $string = '0123456789';
            $string_shuffled = str_shuffle($string);
            $otp = substr($string_shuffled, 1, 4);
            $this->sendTextLocalOtp('Guest User',$_POST['mobile'],$otp);
            $update = $this->db->query('update missingtransactions set otp='.$otp.' where Id='.$getIfAlready[0]['Id']);
            if($update)
            {
                $response = array(
                    'status' => 'success'
                );
            }else{
                $response = array(
                    'status' => 'error'
                );
            }
            echo json_encode($response);
        }else{
            // $otp = '1234';
            $string = '0123456789';
            $string_shuffled = str_shuffle($string);
            $otp = substr($string_shuffled, 1, 4);
            $this->sendTextLocalOtp('Guest User',$_POST['mobile'],$otp);
            $insertdata = array(
                'otp' => $otp,
                'mobileNumber' => $_POST['mobile'],
                'dateCreated' => date('Y-m-d H:i:s')
            );
            $insert = $this->db->insert('missingtransactions',$insertdata);
            if($insert)
            {
                $response = array(
                    'status' => 'success'
                );
            }else{
                $response = array(
                    'status' => 'error'
                );
            }
            echo json_encode($response);
        }
    }
    
    function facematch($para1 = '')
    {
        if($para1 == 'do_upload')
        {
            $name = $_FILES["file1"]["name"];
            $ext = end((explode(".", $name)));
            $mainphoto = 'upload/facematch/mainphoto/'.time().''.rand(0,10000).'.'.$ext;
            move_uploaded_file($_FILES['file1']['tmp_name'], $mainphoto);    
            $insertdata = array(
                'mainPhoto' => $mainphoto
            );
            
            if($this->db->insert('facematch',$insertdata))
            {
                $lastId = $this->db->insert_id();
                $otherImages = array();
                for($i=0;$i<count($_FILES['file2']['name']);$i++)
                {
                    $name = $_FILES["file2"]["name"][$i];
                    $ext = end((explode(".", $name)));
                    $filename = 'upload/facematch/substitutes/'.time().''.rand(0,10000).'.'.$ext;
                    move_uploaded_file($_FILES['file2']['tmp_name'][$i], $filename);
                    array_push($otherImages,$filename);
                }
                if(count($otherImages) == count($_FILES['file2']['name']))
                {
                    $otherconf = array();
                    for($i=0;$i<count($otherImages);$i++)
                    {
                        $curl = curl_init();
                        curl_setopt_array($curl, array(
                          CURLOPT_URL => 'fmatch.shammtech.in',
                          CURLOPT_RETURNTRANSFER => true,
                          CURLOPT_ENCODING => '',
                          CURLOPT_MAXREDIRS => 10,
                          CURLOPT_TIMEOUT => 0,
                          CURLOPT_FOLLOWLOCATION => true,
                          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                          CURLOPT_CUSTOMREQUEST => 'POST',
                          CURLOPT_POSTFIELDS => 'image1='.base_url().''.$mainphoto.'&image2='.base_url().''.$otherImages[$i],
                          CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/x-www-form-urlencoded'
                          ),
                        ));
                        
                        $response = json_decode(curl_exec($curl),true);
                        if($response['message'] != 'Internal Server Error')
                        {
                            $response['url'] = base_url().''. $otherImages[$i];
                            array_push($otherconf,$response);
                            curl_close($curl);   
                        }else
                        {
                            $finalResponse = array(
                                'status' => 'error',
                                'message' => $response['message']
                            );
                            echo json_encode($finalResponse);   
                            die();
                        }
        
                    }
                    $updatedata = array(
                        'otherPhotos' => json_encode($otherImages),
                        'result' => json_encode($otherconf)
                    );
                    $this->db->where('Id',$lastId);
                    $update = $this->db->update('facematch',$updatedata);
                    if($update)
                    {
                        $html = '<div class="row">';
                        for($i=0;$i<count($otherconf);$i++)
                        {
                            $html .= '<div class="col-auto mt-3"><img src="'.$otherconf[$i]['url'].'" style="`width:200px;height:200px;`"><h5>Confidence:- '.$otherconf[$i]['confidence'].'%</h5></div>';   
                        }
                        $html .= '</div>';
                        $finalResponse = array(
                            'status' => 'success',
                            'html' => $html,
                            'message' => 'Faces Compared Successfully'
                        );
                        echo json_encode($finalResponse);         
                    }else{
                        $finalResponse = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($finalResponse);       
                    }
                }else{
                    $finalResponse = array(
                        'status' => 'error',
                        'message' => 'Some files not uploaded'
                    );
                    echo json_encode($finalResponse);   
                }
            }else{
                $finalResponse = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($finalResponse);   
            }
        } else {
            if(isset($_SESSION['landingMob']))
            {
                $page_data['title'] = 'Face Match';
                $page_data['control'] = 'user';
                $this->load->view('NonKyc/common/header',$page_data); 
                $this->load->view('NonKyc/facematch');
                $this->load->view('NonKyc/common/footer'); 
            }else{
                redirect(base_url().'login','refresh');
            }
          }
    }

    function upload_vehicle_details()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['vehicles'] = $this->db->query('select * from vehicles where userId='.$_SESSION['user_id'].' and isdeleted=0 and paymentStatus=1')->result_array();
            $page_data['page_name'] = 'upload_vehicle_details';
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect('login','refresh');
        }
    }
    
    function matchregisternew($para1 = '')
    {
        if($para1 == 'do_register')
        {
            unset($_POST['_token']);
            $aadhar = $this->input->post('aadhar_id');
            $credential = array('aadhar_id' => $aadhar,'final_mobile_verification'=>'success');
            $query = $this->db->get_where('user', $credential);
            if ($query->num_rows() > 0) {
                $finalresponse = array(
                    'status' => 'error',
                    'message' => 'Aadhar number already registered in our website'
                );
                echo json_encode($finalresponse);
            } else {
                $curl = curl_init();
                curl_setopt_array($curl, [
                  CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/verify",
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => "",
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 30,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => "POST",
                  CURLOPT_POSTFIELDS => '{"aadhaar_number": '.$_POST['aadhar_id'].',  "consent": "Y"}',
                  CURLOPT_HTTPHEADER => [
                    "Content-Type: application/json",
                    "X-API-Key: ".$this->getSettings(),
                    "X-Auth-Type: API-Key"
                  ],
                ]);
                
                $response1 = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if($response1['status'] == 200)
                {
                    if($response1['data']['code'] == 1018)
                    {
                        if(substr($response1['data']['aadhaar_data']['mobile'] , -3) == substr($_POST['registration_mobile'] , -3))
                        {
                            $curl = curl_init();
                            $postfields = json_encode(array(
                                'aadhaar_number' => $_POST['aadhar_id'],
                                'consent' => 'Y'
                            ));
                            curl_setopt_array($curl, [
                              CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/boson/generate-otp",
                              CURLOPT_RETURNTRANSFER => true,
                              CURLOPT_ENCODING => "",
                              CURLOPT_MAXREDIRS => 10,
                              CURLOPT_TIMEOUT => 30,
                              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                              CURLOPT_CUSTOMREQUEST => "POST",
                              CURLOPT_POSTFIELDS => '{"aadhaar_number": '.$_POST['aadhar_id'].',  "consent": "Y"}',
                              CURLOPT_HTTPHEADER => [
                                "Content-Type: application/json",
                                "X-API-Key: ".$this->getSettings(),
                                "X-Auth-Type: API-Key"
                              ],
                            ]);
                
                            $response2 = json_decode(curl_exec($curl),true);
                            if($response2['status'] == 200)
                            {
                                unset($_POST['consent']);
                                $getIfAlready = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'"')->result_array();
                                if(count($getIfAlready) > 0)
                                {
                                    $this->db->where('aadhar_id',$_POST['aadhar_id']);
                                    $update = $this->db->update('user',$_POST) ;
                                }else{
                                    $insert = $this->db->insert('user',$_POST) ;   
                                }
                                $_SESSION['aadharId'] = $_POST['aadhar_id'];
                                $_SESSION['mob'] = $_POST['registration_mobile'];
                                $_SESSION['transactionId'] = $response2['data']['transaction_id'];
                                $finalresponse = array(
                                    'status' => 'success',
                                    'message' => $response2['data']['message']
                                );
                                echo json_encode($finalresponse);
                            }else
                            {
                                $finalresponse = array(
                                    'status' => 'error',
                                    'message' => $response2['error']['message']
                                );
                                echo json_encode($finalresponse);
                            }
                        }else{
                            $finalresponse = array(
                                'status' => 'error',
                                'message' => 'The Mobile number you have entered does not match with our records.'
                            );
                            echo json_encode($finalresponse);
                        }   
                    }else{
                        $finalresponse = array(
                            'status' => 'error',
                            'message' => $response1['data']['message']
                        );
                        echo json_encode($finalresponse);
                    }
                }else{
                    $finalresponse = array(
                        'status' => 'error',
                        'message' => 'The upstream server of the government is slowed down, please try after some time.'
                    );
                    echo json_encode($finalresponse);
                }
            }
        }
    }
    
    function matchregister($para1 = '')
    {
        if($para1 == 'do_register')
        {
            unset($_POST['_token']);
            $aadhar = $this->input->post('aadhar_id');
            $credential = array('aadhar_id' => $aadhar);
            $query = $this->db->get_where('user', $credential);
            if ($query->num_rows() > 0) {
                $finalresponse = array(
                    'status' => 'error',
                    'message' => 'Aadhar number already registered in our website'
                );
                echo json_encode($finalresponse);
            } else {
                $curl = curl_init();
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'http://142.93.222.228:8080/Uidverifywebsvcv1/VerifyAadhaarNumber',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => 'method=uidvalidatev2&txn_id=1234567&uidnumber='.$_POST['aadhar_id'].'&consent=Y&clientid=SIVA_TEST',
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/x-www-form-urlencoded'
                  ),
                ));
                
                $response1 = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(isset($response1['Succeeded']))
                {
                    if(substr($response1['Succeeded']['Uid_Details']['Data']['mobile_number'] , -3) == substr($_POST['registration_mobile'] , -3))
                    {
                        $curl = curl_init();
                        $postfields = json_encode(array(
                            'aadhaar_number' => $_POST['aadhar_id'],
                            'consent' => 'Y'
                        ));
                        curl_setopt_array($curl, [
                          CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/boson/generate-otp",
                          CURLOPT_RETURNTRANSFER => true,
                          CURLOPT_ENCODING => "",
                          CURLOPT_MAXREDIRS => 10,
                          CURLOPT_TIMEOUT => 30,
                          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                          CURLOPT_CUSTOMREQUEST => "POST",
                          CURLOPT_POSTFIELDS => '{"aadhaar_number": '.$_POST['aadhar_id'].',  "consent": "Y"}',
                          CURLOPT_HTTPHEADER => [
                            "Content-Type: application/json",
                            "X-API-Key: ".$this->getSettings(),
                            "X-Auth-Type: API-Key"
                          ],
                        ]);
            
                        $response2 = json_decode(curl_exec($curl),true);
                        if($response2['status'] == 200)
                        {
                            unset($_POST['consent']);
                            $insert = $this->db->insert('user',$_POST) ;
                            $_SESSION['aadharId'] = $_POST['aadhar_id'];
                            $_SESSION['mob'] = $_POST['registration_mobile'];
                            $_SESSION['transactionId'] = $response2['data']['transaction_id'];
                            $finalresponse = array(
                                'status' => 'success',
                                'message' => $response2['data']['message']
                            );
                            echo json_encode($finalresponse);
                        }else
                        {
                            $finalresponse = array(
                                'status' => 'error',
                                'message' => $response2['error']['message']
                            );
                            echo json_encode($finalresponse);
                        }
                    }else{
                        $finalresponse = array(
                            'status' => 'error',
                            'message' => 'The Mobile number you have entered does not match with our records.'
                        );
                        echo json_encode($finalresponse);
                    }
                }else{
                    $finalresponse = array(
                        'status' => 'error',
                        'message' => $response1['Failed']['ErrorMessage']
                    );
                    echo json_encode($finalresponse);
                }
            }
        }
    }

    function postPersonLogin()
    {
        $getDetail = $this->db->query('select * from missingtransactions where mobileNumber="'.$_POST['mobileNumber'].'"')->result_array();
        if($getDetail[0]['otp'] == $_POST['otp'])
        {
            $this->session->set_userdata('missingloginmob',$_POST['mobileNumber']);
            $response = array(
                'status' => 'success',
                'message' => 'Thank you for verification'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Invalid Otp'
            );
            echo json_encode($response);
        }
    }
    
    function missingvehicledetail()
    {
        $id = (isset($_GET['Id']) ? $_GET['Id'] : $this->uri->segment(3));
        $type = (isset($_GET['type']) ? $_GET['type'] : 0);
        $page_data['missingvehicle'] = $this->db->query('select * from missingvehicle where Id='.$id.' and isFinalSubmitted=1')->result_array();
        if(count($page_data['missingvehicle']) > 0)
        {
            $getVehiclePhotos = $this->db->query('select * from missingvehiclephotos where missingId='.$id)->result_array();
            $page_data['control'] = 'user';
            if($type == 0 && $type == 'without')
            {
                $page_data['title'] = 'MISSING('.date('d-m-Y',strtotime($page_data['missingvehicle'][0]['missingdate'])).')';   
            }else{
                $page_data['title'] = 'MISSING('.date('d-m-Y',strtotime($page_data['missingvehicle'][0]['missingdate'])).')- '.strtoupper($page_data['missingvehicle'][0]['rcNumber']);
            }
            $page_data['id'] = $id;
            if($page_data['missingvehicle'][0]['isFound'] == 0)
            {   
                if($page_data['missingvehicle'][0]['rewardamount']==0)
                {
                      $page_data['metadescription'] = '';     
                      $page_data['ogdescription'] = '';                
                }
                else{
    
                       $page_data['metadescription'] = 'Reward:- Rs. '.$page_data['missingvehicle'][0]['rewardamount'];     
                      $page_data['ogdescription'] = 'Reward:- Rs. '.$page_data['missingvehicle'][0]['rewardamount'];
                }
                $page_data['author'] = 'MISSING and Alert';
                $page_data['keywords'] = 'MISSING and Alert';
                if($type == 0 && $type == 'without')
                {
                    $page_data['ogtitle'] = 'MISSING('.date('d-m-Y',strtotime($page_data['missingvehicle'][0]['missingdate'])).')';   
                }else{
                    $page_data['ogtitle'] = 'MISSING('.date('d-m-Y',strtotime($page_data['missingvehicle'][0]['missingdate'])).')- '.$page_data['missingvehicle'][0]['rcNumber'];
                }
                if($type == 'with')
                {
                    $page_data['ogimage'] = base_url().''. $getVehiclePhotos[0]['photourl'];   
                }else{
                    $page_data['ogimage'] = base_url().'assets/images/M&A app icon.jpg';
                }
               
                $page_data['ogtype'] = 'MISSING Vehicle';
                $page_data['ogurl'] = current_url();
            }else{
                redirect('NonKyc/vehiclecomplaintclosed/'.$id,'refresh');
            }
            if(!$page_data['missingvehicle'][0]['isFound'])
            {
                $this->load->view('NonKyc/common/header',$page_data); 
                $this->load->view('NonKyc/missingvehicledetail');
                $this->load->view('NonKyc/common/footer');   
            }else{
                redirect('NonKyc/vehiclecomplaintclosed/'.$id,'refresh');
            }   
        }else{
            redirect('NonKyc/vehiclecomplaintclosed/'.$id,'refresh');
        }
    }

    function deleteMissingPersonDetail($id)
    {
        $update = $this->db->query('update missingperson set isdeleted=1, isFound=1 where Id='.$id);   
    }
    
    function mergeregister($para1 = '')
    {
        if($para1 == 'do_register')
        {
            unset($_POST['_token']);
            $aadhar = $this->input->post('aadhar_id');
            $credential = array('aadhar_id' => $aadhar);
            $query = $this->db->get_where('user', $credential);
            if ($query->num_rows() > 0) {
                $row = $query->row();
                if($row->final_mobile_verification == 'success')
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Already Verified'
                    );
                    echo json_encode($response);
                }else
                {
                    $ch = curl_init();
                    $curlConfig = array(
                        CURLOPT_URL            => "http://142.93.222.228:8080/Uidverifywebsvcv1/VerifyEmailMobilelink",
                        CURLOPT_POST           => true,
                        CURLOPT_RETURNTRANSFER => true,
                        CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/x-www-form-urlencoded'
                        ),
                        CURLOPT_POSTFIELDS     => 'method=emailnmobilev2&txn_id=94b5c5de-e94d-11ec-8fea-0242ac120002&uidnumber='.$_POST['aadhar_id'].'&consent=Y&clientid=SIVA_TEST&verificationCode=&mobileNumber='.$_POST['registration_mobile'],
                    );
                    curl_setopt_array($ch, $curlConfig);
                    $result = json_decode(curl_exec($ch),true);
                    if(isset($result['Succeeded']))
                    {
                        if($result['Succeeded']['Uid_Details']['responseData']['status'] == 'Success')
                        {
                            if(!$result['Succeeded']['Uid_Details']['responseData']['otpSentSuccessfully'])
                            {
                                $curl = curl_init();
                                curl_setopt_array($curl, [
                                  CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/boson/generate-otp",
                                  CURLOPT_RETURNTRANSFER => true,
                                  CURLOPT_ENCODING => "",
                                  CURLOPT_MAXREDIRS => 10,
                                  CURLOPT_TIMEOUT => 30,
                                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                                  CURLOPT_CUSTOMREQUEST => "POST",
                                  CURLOPT_POSTFIELDS => '{"aadhaar_number": '.$_POST['aadhar_id'].',  "consent": "Y"}',
                                  CURLOPT_HTTPHEADER => [
                                    "Content-Type: application/json",
                                    "X-API-Key: ".$this->getSettings(),
                                    "X-Auth-Type: API-Key"
                                  ],
                                ]);

                                $response = json_decode(curl_exec($curl),true);
                                if($response['status'] == 200)
                                {
                                    $this->db->where('uid',$row->uid);
                                    $this->db->update('user',array('registration_mobile' => $_POST['registration_mobile']));
                                    $_SESSION['aadharId'] = $_POST['aadhar_id'];
                                    $_SESSION['mob'] = $_POST['registration_mobile'];
                                    $_SESSION['transactionId'] = $response['data']['transaction_id'];
                                    $response = array(
                                        'status' => 'success',
                                        'message' => $response['data']['message']
                                    );
                                    echo json_encode($response);
                                }else
                                {
                                    $response = array(
                                        'status' => 'error',
                                        'message' => $response['error']['message']
                                    );
                                    echo json_encode($response);
                                }
                            }else{
                                $this->db->where('uid',$row->uid);
                                $this->db->update('user',array('registration_mobile' => $_POST['registration_mobile']));
                                $_SESSION['aadharId'] = $_POST['aadhar_id'];
                                $_SESSION['mob'] = $_POST['registration_mobile'];
                                $response = array(
                                    'status' => 'success',
                                    'message' => $result['Succeeded']['Uid_Details']['responseData']['message']
                                );
                                echo json_encode($response);
                            }
                        }else
                        {
                            $response = array(
                                'status' => 'failed',
                                'message' => $result['Succeeded']['Uid_Details']['responseData']['message']
                            );
                            echo json_encode($response);
                        }
                    }else{
                        $response = array(
                            'status' => 'failed',
                            'message' => $result['Failed']['ErrorMessage']
                        );
                        echo json_encode($response);
                    }
                    curl_close($ch);
                }
            } else {
                $curl = curl_init();

                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'http://142.93.222.228:8080/Uidverifywebsvcv1/VerifyEmailMobilelink',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => 'method=emailnmobilev2&txn_id=94b5c5de-e94d-11ec-8fea-0242ac120002&uidnumber='.$_POST['aadhar_id'].'&consent=Y&clientid=SIVA_TEST&verificationCode=&mobileNumber='.$_POST['registration_mobile'],
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/x-www-form-urlencoded'
                  ),
                ));
                
                $result = json_decode(curl_exec($curl),true);
                if(isset($result['Succeeded']))
                {
                    if($result['Succeeded']['Uid_Details']['responseData']['status'] == 'Success')
                    {
                        if(!$result['Succeeded']['Uid_Details']['responseData']['otpSentSuccessfully'])
                        {
                            $curl = curl_init();
                            $postfields = json_encode(array(
                                'aadhaar_number' => $_POST['aadhar_id'],
                                'consent' => 'Y'
                            ));
                            curl_setopt_array($curl, [
                              CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/boson/generate-otp",
                              CURLOPT_RETURNTRANSFER => true,
                              CURLOPT_ENCODING => "",
                              CURLOPT_MAXREDIRS => 10,
                              CURLOPT_TIMEOUT => 30,
                              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                              CURLOPT_CUSTOMREQUEST => "POST",
                              CURLOPT_POSTFIELDS => '{"aadhaar_number": '.$_POST['aadhar_id'].',  "consent": "Y"}',
                              CURLOPT_HTTPHEADER => [
                                "Content-Type: application/json",
                                "X-API-Key: ".$this->getSettings(),
                                "X-Auth-Type: API-Key"
                              ],
                            ]);

                            $response = json_decode(curl_exec($curl),true);
                            if($response['status'] == 200)
                            {
                                unset($_POST['consent']);
                                $insert = $this->db->insert('user',$_POST) ;
                                $_SESSION['aadharId'] = $_POST['aadhar_id'];
                                $_SESSION['mob'] = $_POST['registration_mobile'];
                                $_SESSION['transactionId'] = $response['data']['transaction_id'];
                                $response = array(
                                    'status' => 'success',
                                    'message' => $response['data']['message']
                                );
                                echo json_encode($response);
                            }else
                            {
                                $response = array(
                                    'status' => 'error',
                                    'message' => $response['error']['message']
                                );
                                echo json_encode($response);
                            }
                        }else{
                            unset($_POST['consent']);
                            $insert = $this->db->insert('user',$_POST) ;
                            $_SESSION['aadharId'] = $_POST['aadhar_id'];
                            $_SESSION['mob'] = $_POST['registration_mobile'];
                            $response = array(
                                'status' => 'success',
                                'message' => $result['Succeeded']['Uid_Details']['responseData']['message']
                            );
                            echo json_encode($response);
                        }
                    }else
                    {
                        $response = array(
                            'status' => 'failed',
                            'message' => $result['Succeeded']['Uid_Details']['responseData']['message']
                        );
                        echo json_encode($response);
                    }
                }else{
                    $response = array(
                        'status' => 'failed',
                        'message' => $result['Failed']['ErrorMessage']
                    );
                    echo json_encode($response);
                }
                curl_close($curl);
            }
      } else {
        $page_data['lasturl'] = basename($_SERVER['HTTP_REFERER']);
        $page_data['title'] = 'Register';
        $page_data['control'] = 'user';
        $this->load->view('NonKyc/common/header',$page_data); 
        $this->load->view('NonKyc/newregister');
        $this->load->view('NonKyc/common/footer'); 
      }  
    }

    function viewMissingPersonDetail($id)
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['missing'] = $this->db->query('select * from missingperson where Id='.$id)->result_array();
            $page_data['page_name'] = 'viewMissingPersonDetail';
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect('login','refresh');
        }   
    }

    function manage_person_details()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['missing'] = $this->db->query('select * from missingperson where userId='.$_SESSION['user_id'].' and isdeleted=0')->result_array();
            $page_data['page_name'] = 'manage_person_details';
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect('login','refresh');
        }  
    }
    
    function getPreviousDetail()
    {
        $getMissingPreviousDetail = $this->db->query('select * from missingperson where missingaadhar="'.$_POST['aadhar'].'"')->result_array();
        if(count($getMissingPreviousDetail) > 0)
        {
            $getFullDetails = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPreviousDetail[0]['Id'])->result_array();
            $response = array(
                'status' => 'success',
                'name' => $getMissingPreviousDetail[0]['missingname'],
                'dob' => $getFullDetails[0]['dob'],
                'fathername' => $getFullDetails[0]['fatherName'],
                'religion' => $getFullDetails[0]['religion'],
                'gender' => $getFullDetails[0]['gender'],
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error'
            );
            echo json_encode($response);
        }
    }
    
    function deleteDoc()
    {
        $getPaymentDetail = $this->db->query('select * from otherpayment where userId='.$_SESSION['user_id'])->result_array();
        if($_POST['type'] == 'voter')
        {
            $update = $this->db->query('update otherpayment set amount = amount - 50, voterPaymentStatus = NULL, isVoterAdded=0,voterDetails = NULL where userId='.$_SESSION['user_id']);   
            $delete = $this->db->query('delete from voterslist where userId='.$_SESSION['user_id']);
        }
        if($_POST['type'] == 'PAN')
        {
            $update = $this->db->query('update otherpayment set amount = amount - 50, panPaymentStatus = NULL, isPanAdded=0,panDetails = NULL where userId='.$_SESSION['user_id']);   
            $delete = $this->db->query('delete from panlist where userId='.$_SESSION['user_id']);
        }
        if($_POST['type'] == 'driving license')
        {
            $update = $this->db->query('update otherpayment set amount = amount - 50, dlPaymentStatus = NULL, isDlAdded=0,dlDetails = NULL where userId='.$_SESSION['user_id']);   
            $delete = $this->db->query('delete from dllist where userId='.$_SESSION['user_id']);
        }
    }

    function saveMissingFirDetails()
    {
        $getIfAlready = array();
        if(count($getIfAlready) > 0)
        {
            if($getIfAlready[0]['isFinalSubmitted'] == 0)
            {
                $_SESSION['isAvailable'] = '1';
                if($_POST['isRegistered'] == 0)
                {
                    $txnId = $this->getGUIDnoHash(10);
                    $getPreviousDetail = $this->db->query('select * from missingpersondetail where missingId='.$getIfAlready[0]['Id'])->result_array();
                    if(count($getPreviousDetail) > 0)
                    {
                        $updatedata = array(
                            'fatherName' => $_POST['missingfathername'],
                            'dob' => $_POST['missingdob'],
                            'gender' => $_POST['missinggender'],
                            'religion' => $_POST['missingreligioname']
                        );   
                        $this->db->where('missingId',$getIfAlready[0]['Id']);
                        $this->db->update('missingpersondetail',$updatedata);
                    }else{
                        $insertdata = array(
                            'fatherName' => $_POST['missingfathername'],
                            'missingId' => $getIfAlready[0]['Id'],
                            'dob' => $_POST['missingdob'],
                            'gender' => $_POST['missinggender'],
                            'religion' => $_POST['missingreligioname']
                        );   
                        $this->db->insert('missingpersondetail',$insertdata);
                    }
                    $updatedata = array(
                        'isMissingRegistered' => $_POST['isRegistered'],
                        'missingId' => $txnId,
                        'missingreligion' => $_POST['missingreligioname'],
                        'missingdob' => $_POST['missingdob'],
                        'isNominee' => ($_POST['isNominee'] != 'Yes' ? 0 : 1),
                        'missingaadhar' => $_POST['missingaadhar'],
                        'missingname' => $_POST['missingName'],
                        'userId' => $_SESSION['user_id'],
                        'firstate' => ($_POST['firstate'] != '' ? $_POST['firstate'] : NULL),
                        'firdistrict' => ($_POST['firdistrict'] != '' ? $_POST['firdistrict'] : NULL),
                        'fircity' => ($_POST['fircity'] != '' ? $_POST['fircity'] : NULL),
                        'firvillage' => ($_POST['firvillage'] != '' ? $_POST['firvillage'] : NULL),
                        'firpolicethananame' => ($_POST['policeThanaName'] != '' ? $_POST['policeThanaName'] : NULL),
                        'firdate' => ($_POST['firdate'] != '' ? $_POST['firdate'] : NULL),
                        'missingdate' => ($_POST['missingdate'] != '' ? $_POST['missingdate'] : NULL),
                        'firno' => ($_POST['firNumber'] != '' ? $_POST['firNumber'] : NULL),
                    );
                    $this->db->where('Id',$getIfAlready[0]['Id']);
                    $update = $this->db->update('missingperson',$updatedata);
                    if($update)
                    {
                        $string = '0123456789';
                        $string_shuffled = str_shuffle($string);
                        $otp = substr($string_shuffled, 1, 4);
                        $this->sendTextLocalOtp($_SESSION['aadharName'],$_SESSION['loginmob'],$otp);
                        $updatedata = array(
                            'otp' => $otp
                        );
                        $this->db->where('uid',$_SESSION['user_id']);
                        $update = $this->db->update('user',$updatedata);
                        if($update)
                        {
                            $getIfAlready = $this->db->query('select * from missingperson where firno="'.$_POST['firNumber'].'"')->result_array();
                            $_SESSION['isFinalSubmitted'] = false;
                            $_SESSION['missingPersonId'] = $getIfAlready[0]['missingId'];
                            $response = array(
                                'isFinalSubmitted' => false,
                                'status' => 'success',
                                'message' => 'Otp Sent Successfully'
                            );
                            echo json_encode($response);
                        }else
                        {
                            $response = array(
                                'status' => 'error',
                                'message' => 'Something Went Wrong'
                            );
                            echo json_encode($response);
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }   
                }else{
                    $txnId = $this->getGUIDnoHash(10);
                    $updatedata = array(
                        'isMissingRegistered' => $_POST['isRegistered'],
                        'isNominee' => ($_POST['isNominee'] != 'Yes' ? 0 : 1),
                        'missingId' => $txnId,
                        'missingaadhar' => $_POST['missingaadhar'],
                        'missingname' => $_POST['missingName'],
                        'userId' => $_SESSION['user_id'],
                        'firstate' => ($_POST['firstate'] != '' ? $_POST['firstate'] : NULL),
                        'firdistrict' => ($_POST['firdistrict'] != '' ? $_POST['firdistrict'] : NULL),
                        'fircity' => ($_POST['fircity'] != '' ? $_POST['fircity'] : NULL),
                        'firvillage' => ($_POST['firvillage'] != '' ? $_POST['firvillage'] : NULL),
                        'firpolicethananame' => ($_POST['policeThanaName'] != '' ? $_POST['policeThanaName'] : NULL),
                        'firdate' => ($_POST['firdate'] != '' ? $_POST['firdate'] : NULL),
                        'missingdate' => ($_POST['missingdate'] != '' ? $_POST['missingdate'] : NULL),
                        'firno' => ($_POST['firNumber'] != '' ? $_POST['firNumber'] : NULL),
                    );
                    $this->db->where('Id',$getIfAlready[0]['Id']);
                    $update = $this->db->update('missingperson',$updatedata);
                    if($update)
                    {
                        $string = '0123456789';
                        $string_shuffled = str_shuffle($string);
                        $otp = substr($string_shuffled, 1, 4);
                        $this->sendTextLocalOtp($_SESSION['aadharName'],$_SESSION['loginmob'],$otp);
                        $updatedata = array(
                            'otp' => $otp
                        );
                        $this->db->where('uid',$_SESSION['user_id']);
                        $update = $this->db->update('user',$updatedata);
                        if($update)
                        {
                            $getIfAlready = $this->db->query('select * from missingperson where firno="'.$_POST['firNumber'].'"')->result_array();
                            $_SESSION['isFinalSubmitted'] = false;
                            $_SESSION['missingPersonId'] = $getIfAlready[0]['missingId'];
                            $response = array(
                                'isFinalSubmitted' => false,
                                'status' => 'success',
                                'message' => 'Otp Sent Successfully'
                            );
                            echo json_encode($response);
                        }else
                        {
                            $response = array(
                                'status' => 'error',
                                'message' => 'Something Went Wrong'
                            );
                            echo json_encode($response);
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }
            }else{
                $_SESSION['isFinalSubmitted'] = true;
                $getIfAlready = $this->db->query('select * from missingperson where firno="'.$_POST['firNumber'].'"')->result_array();
                $_SESSION['finalId'] = $getIfAlready[0]['missingId'];
                $response = array(
                    'isFinalSubmitted' => true,
                    'status' => 'success',
                );
                echo json_encode($response);
            }
        }else{
            $this->db->query('update unknown_person set isFound=1 where aadharNumber="'.$_POST['missingaadhar'].'" and awsEventName="All"');
            $_SESSION['isAvailable'] = '0';
            $txnId = $this->getGUIDnoHash(10);
            if($_POST['isRegistered'] == 0)
            {
                $updatedata = array(
                    'isMissingRegistered' => $_POST['isRegistered'],
                    'isNominee' => ($_POST['isNominee'] != 'Yes' ? 0 : 1),
                    'missingaadhar' => $_POST['missingaadhar'],
                    'missingname' => $_POST['missingName'],
                    'userId' => $_SESSION['user_id'],
                    'missingId' => $txnId,
                    'firstate' => ($_POST['firstate'] != '' ? $_POST['firstate'] : NULL),
                    'firdistrict' => ($_POST['firdistrict'] != '' ? $_POST['firdistrict'] : NULL),
                    'fircity' => ($_POST['fircity'] != '' ? $_POST['fircity'] : NULL),
                    'firvillage' => ($_POST['firvillage'] != '' ? $_POST['firvillage'] : NULL),
                    'firpolicethananame' => ($_POST['policeThanaName'] != '' ? $_POST['policeThanaName'] : NULL),
                    'firdate' => ($_POST['firdate'] != '' ? $_POST['firdate'] : NULL),
                    'missingdate' => ($_POST['missingdate'] != '' ? $_POST['missingdate'] : NULL),
                    'missingdob' => $_POST['missingdob'],
                    'missinggender'=> $_POST['missinggender'],
                    'missingreligion' => $_POST['missingreligioname'],
                    'firno' => ($_POST['firNumber'] != '' ? $_POST['firNumber'] : NULL),
                );
                $insert = $this->db->insert('missingperson',$updatedata);
                if($insert)
                {
                    $insertdata = array(
                        'fatherName' => $_POST['missingfathername'],
                        'missingId' => $this->db->insert_id(),
                        'dob' => $_POST['missingdob'],
                        'gender' => $_POST['missinggender'],
                        'religion' => $_POST['missingreligioname']
                    );   
                    $this->db->insert('missingpersondetail',$insertdata);
                    $string = '0123456789';
                    $string_shuffled = str_shuffle($string);
                    $otp = substr($string_shuffled, 1, 4);
                    $this->sendTextLocalOtp($_SESSION['aadharName'],$_SESSION['loginmob'],$otp);
                    $updatedata = array(
                        'otp' => $otp
                    );
                    $this->db->where('uid',$_SESSION['user_id']);
                    $update = $this->db->update('user',$updatedata);
                    if($update)
                    {
                        $_SESSION['isFinalSubmitted'] = false;
                        $_SESSION['missingPersonId'] = $txnId;
                        $response = array(
                            'isFinalSubmitted' => false,
                            'status' => 'success',
                            'message' => 'Otp Sent Successfully'
                        );
                        echo json_encode($response);
                    }else
                    {
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }   
            }else{
                $facePhoto = NULL;
                $imageId = NULL;
                $getIfPersonAvailable = $this->db->query('select * from user where aadhar_id="'.$_POST['missingaadhar'].'"')->result_array();
                if(count($getIfPersonAvailable) > 0)
                {
                    if($getIfPersonAvailable[0]['facematchphoto'] != NULL)
                    {
                        $contents = file_get_contents($getIfPersonAvailable[0]['facematchphoto']);
                        $imageId = 'Missing_'.time().''.rand(0,10000);
                        $mainphoto = 'upload/missingperson/facematch/'.$imageId.'.jpeg';
                        file_put_contents($mainphoto, $contents);
                        $curl = curl_init();
                        $postdata = json_encode(array(
                            "collection_id" => "shivaguptabcakhoji4",
                            "image_id" => $imageId,
                            "image_url" => base_url().''.$mainphoto
                        ));
                        curl_setopt_array($curl, array(
                            CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                            CURLOPT_RETURNTRANSFER => true,
                            CURLOPT_ENCODING => '',
                            CURLOPT_MAXREDIRS => 10,
                            CURLOPT_TIMEOUT => 0,
                            CURLOPT_FOLLOWLOCATION => true,
                            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                            CURLOPT_CUSTOMREQUEST => 'POST',
                            CURLOPT_POSTFIELDS => $postdata,
                            CURLOPT_HTTPHEADER => array(
                                'Content-Type: application/json',
                                'Authorization: '.$this->getSettings('facematchtoken')
                            ),
                        ));
                        
                        $response = json_decode(curl_exec($curl),true);
                        curl_close($curl);
                        if(count($response) > 0)
                        {
                            if($response['status'] == 200)
                            {
                                if($response['face_count'] == 1)
                                {
                                    $facePhoto = $mainphoto;
                                }
                            }
                        }
                    }
                }
                $updatedata = array(
                    'facematchphoto' => $facePhoto,
                    'awsEventName' => 'All',
                    'imageId' => $imageId, 
                    'isMissingRegistered' => $_POST['isRegistered'],
                    'isNominee' => ($_POST['isNominee'] != 'Yes' ? 0 : 1),
                    'missingaadhar' => $_POST['missingaadhar'],
                    'missingname' => $_POST['missingName'],
                    'userId' => $_SESSION['user_id'],
                    'missingId' => $txnId,
                    'firstate' => ($_POST['firstate'] != '' ? $_POST['firstate'] : NULL),
                    'firdistrict' => ($_POST['firdistrict'] != '' ? $_POST['firdistrict'] : NULL),
                    'fircity' => ($_POST['fircity'] != '' ? $_POST['fircity'] : NULL),
                    'firvillage' => ($_POST['firvillage'] != '' ? $_POST['firvillage'] : NULL),
                    'firpolicethananame' => ($_POST['policeThanaName'] != '' ? $_POST['policeThanaName'] : NULL),
                    'firdate' => ($_POST['firdate'] != '' ? $_POST['firdate'] : NULL),
                    'missingdate' => ($_POST['missingdate'] != '' ? $_POST['missingdate'] : NULL),
                    'firno' => ($_POST['firNumber'] != '' ? $_POST['firNumber'] : NULL),
                );
                $insert = $this->db->insert('missingperson',$updatedata);
                if($insert)
                {
                    $string = '0123456789';
                    $string_shuffled = str_shuffle($string);
                    $otp = substr($string_shuffled, 1, 4);
                    $sendStatus = $this->sendMessage91Otp($_SESSION['aadharName'],$_SESSION['loginmob'],$otp,$this->config->item('login_template_id'));
                    if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                        $response = [
                            'status' => 'error',
                            'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                        ];
                        echo json_encode($response);
                        die();
                    }
                    $updatedata = array(
                        'otp' => $otp
                    );
                    $this->db->where('uid',$_SESSION['user_id']);
                    $update = $this->db->update('user',$updatedata);
                    if($update)
                    {
                        $_SESSION['isFinalSubmitted'] = false;
                        $_SESSION['missingPersonId'] = $txnId;
                        $response = array(
                            'isFinalSubmitted' => false,
                            'status' => 'success',
                            'message' => 'Otp Sent Successfully'
                        );
                        echo json_encode($response);
                    }else
                    {
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }
        }
    }

    function updateMissingStepFirDetail()
    {
        // $getIfAlready = $this->db->query('select * from missingperson where firno="'.$_POST['firNumber'].'"')->result_array();
        $getIfAlready = array();
        if(count($getIfAlready) > 0)
        {
            if($getIfAlready[0]['isFinalSubmitted'] == 0)
            {
                $_SESSION['isAvailable'] = '1';
                if($_POST['isRegistered'] == 0)
                {
                    $txnId = $this->getGUIDnoHash(10);
                    $getPreviousDetail = $this->db->query('select * from missingpersondetail where missingId='.$getIfAlready[0]['Id'])->result_array();
                    if(count($getPreviousDetail) > 0)
                    {
                        $updatedata = array(
                            'fatherName' => $_POST['missingfathername'],
                            'dob' => $_POST['missingdob'],
                            'gender' => $_POST['missinggender'],
                            'religion' => $_POST['missingreligioname']
                        );   
                        $this->db->where('missingId',$getIfAlready[0]['Id']);
                        $this->db->update('missingpersondetail',$updatedata);
                    }else{
                        $insertdata = array(
                            'fatherName' => $_POST['missingfathername'],
                            'missingId' => $getIfAlready[0]['Id'],
                            'dob' => $_POST['missingdob'],
                            'gender' => $_POST['missinggender'],
                            'religion' => $_POST['missingreligioname']
                        );   
                        $this->db->insert('missingpersondetail',$insertdata);
                    }
                    $updatedata = array(
                        'isMissingRegistered' => $_POST['isRegistered'],
                        'missingId' => $txnId,
                        'missingreligion' => $_POST['missingreligioname'],
                        'missingdob' => $_POST['missingdob'],
                        'isNominee' => ($_POST['isNominee'] != 'Yes' ? 0 : 1),
                        'missingaadhar' => $_POST['missingaadhar'],
                        'missingname' => $_POST['missingName'],
                        'userId' => $_SESSION['user_id'],
                        'firstate' => ($_POST['firstate'] != '' ? $_POST['firstate'] : NULL),
                        'firdistrict' => ($_POST['firdistrict'] != '' ? $_POST['firdistrict'] : NULL),
                        'fircity' => ($_POST['fircity'] != '' ? $_POST['fircity'] : NULL),
                        'firvillage' => ($_POST['firvillage'] != '' ? $_POST['firvillage'] : NULL),
                        'firpolicethananame' => ($_POST['policeThanaName'] != '' ? $_POST['policeThanaName'] : NULL),
                        'firdate' => ($_POST['firdate'] != '' ? $_POST['firdate'] : NULL),
                        'missingdate' => ($_POST['missingdate'] != '' ? $_POST['missingdate'] : NULL),
                        'firno' => ($_POST['firNumber'] != '' ? $_POST['firNumber'] : NULL),
                    );
                    $this->db->where('Id',$getIfAlready[0]['Id']);
                    $update = $this->db->update('missingperson',$updatedata);
                    if($update)
                    {
                        $string = '0123456789';
                        $string_shuffled = str_shuffle($string);
                        $otp = substr($string_shuffled, 1, 4);
                        $sendStatus = $this->sendMessage91Otp($_SESSION['aadharName'],$_SESSION['loginmob'],$otp,$this->config->item('login_template_id'));
                        if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                            $response = [
                                'status' => 'error',
                                'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                            ];
                            echo json_encode($response);
                            die();
                        }
                        $updatedata = array(
                            'otp' => $otp
                        );
                        $this->db->where('uid',$_SESSION['user_id']);
                        $update = $this->db->update('user',$updatedata);
                        if($update)
                        {
                            $getIfAlready = $this->db->query('select * from missingperson where firno="'.$_POST['firNumber'].'"')->result_array();
                            $_SESSION['isFinalSubmitted'] = false;
                            $_SESSION['missingPersonId'] = $getIfAlready[0]['missingId'];
                            $response = array(
                                'isFinalSubmitted' => false,
                                'status' => 'success',
                                'message' => 'Otp Sent Successfully'
                            );
                            echo json_encode($response);
                        }else
                        {
                            $response = array(
                                'status' => 'error',
                                'message' => 'Something Went Wrong'
                            );
                            echo json_encode($response);
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }   
                }else{
                    $txnId = $this->getGUIDnoHash(10);
                    $updatedata = array(
                        'isMissingRegistered' => $_POST['isRegistered'],
                        'isNominee' => ($_POST['isNominee'] != 'Yes' ? 0 : 1),
                        'missingId' => $txnId,
                        'missingaadhar' => $_POST['missingaadhar'],
                        'missingname' => $_POST['missingName'],
                        'userId' => $_SESSION['user_id'],
                        'firstate' => ($_POST['firstate'] != '' ? $_POST['firstate'] : NULL),
                        'firdistrict' => ($_POST['firdistrict'] != '' ? $_POST['firdistrict'] : NULL),
                        'fircity' => ($_POST['fircity'] != '' ? $_POST['fircity'] : NULL),
                        'firvillage' => ($_POST['firvillage'] != '' ? $_POST['firvillage'] : NULL),
                        'firpolicethananame' => ($_POST['policeThanaName'] != '' ? $_POST['policeThanaName'] : NULL),
                        'firdate' => ($_POST['firdate'] != '' ? $_POST['firdate'] : NULL),
                        'missingdate' => ($_POST['missingdate'] != '' ? $_POST['missingdate'] : NULL),
                        'firno' => ($_POST['firNumber'] != '' ? $_POST['firNumber'] : NULL),
                    );
                    $this->db->where('Id',$getIfAlready[0]['Id']);
                    $update = $this->db->update('missingperson',$updatedata);
                    if($update)
                    {
                        $string = '0123456789';
                        $string_shuffled = str_shuffle($string);
                        $otp = substr($string_shuffled, 1, 4);
                        $sendStatus = $this->sendMessage91Otp($_SESSION['aadharName'],$_SESSION['loginmob'],$otp,$this->config->item('login_template_id'));
                        if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                            $response = [
                                'status' => 'error',
                                'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                            ];
                            echo json_encode($response);
                            die();
                        }
                        $updatedata = array(
                            'otp' => $otp
                        );
                        $this->db->where('uid',$_SESSION['user_id']);
                        $update = $this->db->update('user',$updatedata);
                        if($update)
                        {
                            $getIfAlready = $this->db->query('select * from missingperson where firno="'.$_POST['firNumber'].'"')->result_array();
                            $_SESSION['isFinalSubmitted'] = false;
                            $_SESSION['missingPersonId'] = $getIfAlready[0]['missingId'];
                            $response = array(
                                'isFinalSubmitted' => false,
                                'status' => 'success',
                                'message' => 'Otp Sent Successfully'
                            );
                            echo json_encode($response);
                        }else
                        {
                            $response = array(
                                'status' => 'error',
                                'message' => 'Something Went Wrong'
                            );
                            echo json_encode($response);
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }
            }else{
                $_SESSION['isFinalSubmitted'] = true;
                $getIfAlready = $this->db->query('select * from missingperson where firno="'.$_POST['firNumber'].'"')->result_array();
                $_SESSION['finalId'] = $getIfAlready[0]['missingId'];
                $response = array(
                    'isFinalSubmitted' => true,
                    'status' => 'success',
                );
                echo json_encode($response);
            }
        }else{
            $getIfLapataAvailable = $this->db->query('select * from unknown_person where awsEventName="All" and isFound=0 and aadharNumber="'.$_POST['missingaadhar'].'" and expiryDate >= "'.date('Y-m-d h:i:s').'"')->result_array();
            if(count($getIfLapataAvailable) > 0)
            {
                $finalresponse = array(
                    'status' => 'lapata'
                );
                echo json_encode($finalresponse);
            }else{
                $_SESSION['isAvailable'] = '0';
                $txnId = $this->getGUIDnoHash(10);
                if($_POST['isRegistered'] == 0)
                {
                    $updatedata = array(
                        'isMissingRegistered' => $_POST['isRegistered'],
                        'isNominee' => ($_POST['isNominee'] != 'Yes' ? 0 : 1),
                        'missingaadhar' => $_POST['missingaadhar'],
                        'missingname' => $_POST['missingName'],
                        'userId' => $_SESSION['user_id'],
                        'missingId' => $txnId,
                        'firstate' => ($_POST['firstate'] != '' ? $_POST['firstate'] : NULL),
                        'firdistrict' => ($_POST['firdistrict'] != '' ? $_POST['firdistrict'] : NULL),
                        'fircity' => ($_POST['fircity'] != '' ? $_POST['fircity'] : NULL),
                        'firvillage' => ($_POST['firvillage'] != '' ? $_POST['firvillage'] : NULL),
                        'firpolicethananame' => ($_POST['policeThanaName'] != '' ? $_POST['policeThanaName'] : NULL),
                        'firdate' => ($_POST['firdate'] != '' ? $_POST['firdate'] : NULL),
                        'missingdate' => ($_POST['missingdate'] != '' ? $_POST['missingdate'] : NULL),
                        'missingdob' => $_POST['missingdob'],
                        'missinggender'=> $_POST['missinggender'],
                        'missingreligion' => $_POST['missingreligioname'],
                        'firno' => ($_POST['firNumber'] != '' ? $_POST['firNumber'] : NULL),
                    );
                    $insert = $this->db->insert('missingperson',$updatedata);
                    if($insert)
                    {
                        $insertdata = array(
                            'fatherName' => $_POST['missingfathername'],
                            'missingId' => $this->db->insert_id(),
                            'dob' => $_POST['missingdob'],
                            'gender' => $_POST['missinggender'],
                            'religion' => $_POST['missingreligioname']
                        );   
                        $this->db->insert('missingpersondetail',$insertdata);
                        $string = '0123456789';
                        $string_shuffled = str_shuffle($string);
                        $otp = substr($string_shuffled, 1, 4);
                        $this->sendTextLocalOtp($_SESSION['aadharName'],$_SESSION['loginmob'],$otp);
                        $updatedata = array(
                            'otp' => $otp
                        );
                        $this->db->where('uid',$_SESSION['user_id']);
                        $update = $this->db->update('user',$updatedata);
                        if($update)
                        {
                            $_SESSION['isFinalSubmitted'] = false;
                            $_SESSION['missingPersonId'] = $txnId;
                            $response = array(
                                'isFinalSubmitted' => false,
                                'status' => 'success',
                                'message' => 'Otp Sent Successfully'
                            );
                            echo json_encode($response);
                        }else
                        {
                            $response = array(
                                'status' => 'error',
                                'message' => 'Something Went Wrong'
                            );
                            echo json_encode($response);
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }   
                }else{
                    $facePhoto = NULL;
                    $imageId = NULL;
                    $getIfPersonAvailable = $this->db->query('select * from user where aadhar_id="'.$_POST['missingaadhar'].'"')->result_array();
                    if(count($getIfPersonAvailable) > 0)
                    {
                        if($getIfPersonAvailable[0]['facematchphoto'] != NULL)
                        {
                            $contents = file_get_contents($getIfPersonAvailable[0]['facematchphoto']);
                            $imageId = 'Missing_'.time().''.rand(0,10000);
                            $mainphoto = 'upload/missingperson/facematch/'.$imageId.'.jpeg';
                            file_put_contents($mainphoto, $contents);
                            $curl = curl_init();
                            $postdata = json_encode(array(
                                "collection_id" => "shivaguptabcakhoji4",
                                "image_id" => $imageId,
                                "image_url" => base_url().''.$mainphoto
                            ));
                            curl_setopt_array($curl, array(
                                CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                                CURLOPT_RETURNTRANSFER => true,
                                CURLOPT_ENCODING => '',
                                CURLOPT_MAXREDIRS => 10,
                                CURLOPT_TIMEOUT => 0,
                                CURLOPT_FOLLOWLOCATION => true,
                                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                                CURLOPT_CUSTOMREQUEST => 'POST',
                                CURLOPT_POSTFIELDS => $postdata,
                                CURLOPT_HTTPHEADER => array(
                                    'Content-Type: application/json',
                                    'Authorization: '.$this->getSettings('facematchtoken')
                                ),
                            ));
                            
                            $response = json_decode(curl_exec($curl),true);
                            curl_close($curl);
                            if(count($response) > 0)
                            {
                                if($response['status'] == 200)
                                {
                                    if($response['face_count'] == 1)
                                    {
                                        $facePhoto = $mainphoto;
                                    }
                                }
                            }
                        }
                    }
                    $updatedata = array(
                        'facematchphoto' => $facePhoto,
                        'awsEventName' => 'All',
                        'imageId' => $imageId, 
                        'isMissingRegistered' => $_POST['isRegistered'],
                        'isNominee' => ($_POST['isNominee'] != 'Yes' ? 0 : 1),
                        'missingaadhar' => $_POST['missingaadhar'],
                        'missingname' => $_POST['missingName'],
                        'userId' => $_SESSION['user_id'],
                        'missingId' => $txnId,
                        'firstate' => ($_POST['firstate'] != '' ? $_POST['firstate'] : NULL),
                        'firdistrict' => ($_POST['firdistrict'] != '' ? $_POST['firdistrict'] : NULL),
                        'fircity' => ($_POST['fircity'] != '' ? $_POST['fircity'] : NULL),
                        'firvillage' => ($_POST['firvillage'] != '' ? $_POST['firvillage'] : NULL),
                        'firpolicethananame' => ($_POST['policeThanaName'] != '' ? $_POST['policeThanaName'] : NULL),
                        'firdate' => ($_POST['firdate'] != '' ? $_POST['firdate'] : NULL),
                        'missingdate' => ($_POST['missingdate'] != '' ? $_POST['missingdate'] : NULL),
                        'firno' => ($_POST['firNumber'] != '' ? $_POST['firNumber'] : NULL),
                    );
                    $insert = $this->db->insert('missingperson',$updatedata);
                    if($insert)
                    {
                        $string = '0123456789';
                        $string_shuffled = str_shuffle($string);
                        $otp = substr($string_shuffled, 1, 4);
                        $this->sendTextLocalOtp($_SESSION['aadharName'],$_SESSION['loginmob'],$otp);
                        $updatedata = array(
                            'otp' => $otp
                        );
                        $this->db->where('uid',$_SESSION['user_id']);
                        $update = $this->db->update('user',$updatedata);
                        if($update)
                        {
                            $_SESSION['isFinalSubmitted'] = false;
                            $_SESSION['missingPersonId'] = $txnId;
                            $response = array(
                                'isFinalSubmitted' => false,
                                'status' => 'success',
                                'message' => 'Otp Sent Successfully'
                            );
                            echo json_encode($response);
                        }else
                        {
                            $response = array(
                                'status' => 'error',
                                'message' => 'Something Went Wrong'
                            );
                            echo json_encode($response);
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }
            }
        }
    }

    function checkMissingAadharDetails()
    {
        $aadhar = '';
        $name = '';
        if(isset($_POST['isRegistered']))
        {
            $getIfAlready = $this->db->query('select * from user where aadhar_id='.$_POST['missingaadhar'])->result_array();
            if(count($getIfAlready) > 0)
            {
                $aadhar = $getIfAlready[0]['aadhar_id'];
                $name = $getIfAlready[0]['aadharname'];
                $insertdata = array(
                    'userId' => $_SESSION['user_id'],
                    'missingaadhar' => $_POST['missingaadhar'],
                    'missingname' => $_POST['missingname'],
                    'missingdob' => $getIfAlready[0]['dob'],
                    'missinggender' => $getIfAlready[0]['gender'],
                    'isMissingRegistered' => (isset($_POST['isRegistered']) ? 1 : 0)
                );
                $insert = $this->db->insert('missingperson',$insertdata);
                if($insert)
                {
                    $_SESSION['missingNewId'] = $this->db->insert_id();
                    $html = '';
                    $getMissingPersonDetails = $this->db->query('select * from missingperson where Id='.$_SESSION['missingNewId'])->result_array();
                    $html .= '<div class="row"><div class="col-lg-12"><hr><h5 style="font-weight:bold;text-align:center;">Enter Some Missing Person Details</h5><hr></div></div>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Aadhar Number</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly value="'.$getMissingPersonDetails[0]['missingaadhar'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Missing Person Name</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly value="'.$getMissingPersonDetails[0]['missingname'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Date of Birth</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" name="dob" required readonly value="'.$getMissingPersonDetails[0]['missingdob'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Gender</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly required name="gender" value="'.$getMissingPersonDetails[0]['missinggender'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Enter Religion</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" name="religion" required></div></div><hr>';
                    $html .= '<button type="submit" class="btn btn-success d-inline w-auto disabled-on-loading" style="background: darkblue!important;" id="okbtn"> Next</button>';
                    $response = array(
                        'html' => $html,
                        'status' => 'success',
                        'message' => 'Please provide some additional details'
                    );
                    echo json_encode($response);
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message'=> 'No user detail found in our records'
                );
                echo json_encode($response);
            }
        }else{
            $curl = curl_init();
            $txnId = $this->getGUIDnoHash();
            curl_setopt_array($curl, array(
                CURLOPT_URL => 'http://142.93.222.228:8080/Uidverifywebsvcv1/VerifyAadhaarNumber',
                CURLOPT_RETURNTRANSFER => true,
                CURLOPT_ENCODING => '',
                CURLOPT_MAXREDIRS => 10,
                CURLOPT_TIMEOUT => 0,
                CURLOPT_FOLLOWLOCATION => true,
                CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                CURLOPT_CUSTOMREQUEST => 'POST',
                CURLOPT_POSTFIELDS => 'method=uidvalidatev2&txn_id='.$txnId.'&uidnumber='.$_POST['missingaadhar'].'&consent=Y&clientid=SIVA_TEST',
                CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/x-www-form-urlencoded'
                ),
            ));

            $result = json_decode(curl_exec($curl),true);
            if(isset($result['Succeeded']))
            {
                if($result['Succeeded']['statusMessage'] == 'Success')
                {
                    $insertdata = array(
                        'userId' => $_SESSION['user_id'],
                        'missingaadhar' => $_POST['missingaadhar'],
                        'missingname' => $_POST['missingName'],
                        'missinggender' => $result['Succeeded']['data'][0]['name'],
                        'isMissingRegistered' => (isset($_POST['isRegistered']) ? 1 : 0)
                    );
                    $insert = $this->db->insert('missingperson',$insertdata);
                    if($insert)
                    {
                        $_SESSION['missingNewId'] = $this->db->insert_id();
                        $html = '';
                        $getMissingPersonDetails = $this->db->query('select * from missingperson where Id='.$_SESSION['missingNewId'])->result_array();
                        $html .= '<div class="row"><div class="col-lg-12"><hr><h5 style="font-weight:bold;text-align:center;">Enter Some Missing Person Details</h5><hr></div></div>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Aadhar Number</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly value="'.$getMissingPersonDetails[0]['missingaadhar'].'"></div></div><hr>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Missing Person Name</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly value="'.$getMissingPersonDetails[0]['missingname'].'"></div></div><hr>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Date of Birth</div><div class="col-lg-9 col-md-8"><input type="date" required class="form-control" name="dob"></div></div><hr>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Gender</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" required name="gender" readonly value="'.$getMissingPersonDetails[0]['missinggender'].'"></div></div><hr>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Enter Religion</div><div class="col-lg-9 col-md-8"><input type="text" required class="form-control" name="religion"></div></div><hr>';
                        $html .= '<button type="button" class="btn btn-success d-inline w-auto disabled-on-loading" style="background: darkblue!important;" id="okbtn"> Next</button>';
                        $response = array(
                            'html' => $html,
                            'status' => 'success',
                            'message' => 'Please provide some additional details'
                        );
                        echo json_encode($response);
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }else{
                    $response = array(
                        'status' => 'failed',
                        'message' => $result['Succeeded']['statusMessage']
                    );
                    echo json_encode($response);
                }
            }else{
                $response = array(
                    'status' => 'failed',
                    'message' => $result['Failed']['ErrorMessage']
                );
                echo json_encode($response);
            }
        }
    }

    function upload_missing_vehicle_details()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['missing'] = $this->db->query('select * from missingvehicle where userId='.$_SESSION['user_id'].' and isdeleted=0')->result_array();
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            if($page_data['pn'] == 1)
            {
                unset($_SESSION['missingVehicleId']);
            }
            $page_data['page_name'] = 'upload_missing_vehicle_details';
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect('login','refresh');
        }   
    }
    
    function edit_missing_vehicle_details($id)
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['id'] = $id;
            $page_data['missing'] = $this->db->query('select * from missingvehicle where Id='.$id)->result_array();
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page_name'] = 'edit_missing_vehicle_details';
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect('login','refresh');
        }
    }
    
    function view_missing_vehicle_details($id)
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['missing'] = $this->db->query('select * from missingvehicle where Id='.$id)->result_array();
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page_name'] = 'view_missing_vehicle_details';
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect('login','refresh');
        }
    }

    function checkMissingVehicleDetails()
    {
        $vehicleType = '';
        $rcNumber = '';
        $getIfAlready = $this->db->query('select * from vehicles where rcNumber="'.$_POST['rcNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and paymentStatus=1 and isdeleted=0')->result_array();
        if(count($getIfAlready) > 0)
        {
            $getIfAlreadyMissing = $this->db->query('select * from missingvehicle where rcNumber="'.$_POST['rcNumber'].'"')->result_array();
            if(count($getIfAlreadyMissing) == 0)
            {
                $vehicleType = $getIfAlready[0]['vehicleType'];
                $rcNumber = $getIfAlready[0]['rcNumber'];
                $photos = array();
                $getLatestUserPhotos = json_decode($getIfAlready[0]['vehiclePhoto'],true);   
                if(count($getLatestUserPhotos) > 0)
                {
                    foreach($getLatestUserPhotos as $k=>$v)
                    {
                        $split = explode('upload/vehicle/photo/',$v);
                        $newurl = 'upload/missingvehicle/'.$split[1];
                        copy($v, $newurl);
                        array_push($photos,$newurl);
                    }
                }
                $txnId = $this->getGUIDnoHash(10);
                $insertdata = array(
                    'missingId' => $txnId,
                    'missingdate' => $_POST['missingdate'],
                    'photos' => json_encode($photos),
                    'userId' => $_SESSION['user_id'],
                    'vehicleType' => $_POST['vehicleType'],
                    'rcNumber' => $_POST['rcNumber'],
                    'chasisNumber' => $getIfAlready[0]['chassis_number'],
                    'engineNumber' => $getIfAlready[0]['engine_number'],
                    'companyName' => $getIfAlready[0]['company'],
                    'modelNumber' => $getIfAlready[0]['maker_model'],
                    'isMissingRegistered' => 1,
                    'ownerName' => $getIfAlready[0]['personname'],
                    'fathercurrentaddress' => $getIfAlready[0]['present_address']
                );
                $insert = $this->db->insert('missingvehicle',$insertdata);
                if($insert)
                {
                    $_SESSION['longMissingVehicleId'] = $txnId;
                    $_SESSION['missingVehicleId'] = $this->db->insert_id();
                    $getLatestUserPhotos = json_decode($getIfAlready[0]['vehiclePhoto'],true);   
                    if(count($getLatestUserPhotos) > 0)
                    {
                        foreach($getLatestUserPhotos as $k=>$v)
                        {
                            $split = explode('upload/vehicle/photo/',$v);
                            $newurl = 'upload/missingvehicle/'.$split[1];
                            copy($v, $newurl);
                            $insertdata = array(
                                'photourl' => $newurl,
                                'missingId' => $_SESSION['missingVehicleId']
                            );
                            $this->db->insert('missingvehiclephotos',$insertdata);      
                        }
                    }
                    $html = '';
                    $getMissingVehicleDetails = $this->db->query('select * from missingvehicle where Id='.$_SESSION['missingVehicleId'])->result_array();
                    $html .= '<div class="row"><div class="col-lg-12"><hr><h5 style="font-weight:bold;text-align:center;">Enter Some Missing Vehicle Details</h5><hr></div></div>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Owner Name</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly value="'.$getMissingVehicleDetails[0]['ownerName'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Vehicle Type</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly value="'.$getMissingVehicleDetails[0]['vehicleType'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Vehicle No.</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" name="rcNumber" required readonly value="'.$getMissingVehicleDetails[0]['rcNumber'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Chassis Number</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly required name="chassisNumber" value="'.$getMissingVehicleDetails[0]['chasisNumber'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Engine Number</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly required name="engineNumber" value="'.$getMissingVehicleDetails[0]['engineNumber'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Company Name</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly required name="companyName" value="'.$getMissingVehicleDetails[0]['companyName'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Model Number</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly required name="modelNumber" value="'.$getMissingVehicleDetails[0]['modelNumber'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Present Address</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" required name="presentAddress"></div></div><hr>';
                    $html .= '<button type="submit" class="btn btn-success d-inline w-auto disabled-on-loading" style="background: darkblue!important;" id="okbtn"> Next</button>';
                    $response = array(
                        'html' => $html,
                        'status' => 'success',
                        'message' => 'Vehicle Complaint Created'
                    );
                    echo json_encode($response);
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }   
            }else{
                if($getIfAlreadyMissing[0]['isFinalSubmitted'] == 1 && $getIfAlreadyMissing[0]['isFound'] == 0 && $getIfAlreadyMissing[0]['isdeleted'] == 0)
                {
                    $response = array(
                        'status' => 'error',
                        'message' => $_POST['rcNumber'].' same already in missing complaint'
                    );
                    echo json_encode($response);   
                }else if($getIfAlreadyMissing[0]['isFinalSubmitted'] == 1 && $getIfAlreadyMissing[0]['isFound'] == 1 && $getIfAlreadyMissing[0]['isdeleted'] == 0)
                {
                    $response = array(
                        'status' => 'closed'
                    );
                    echo json_encode($response);      
                }else if($getIfAlreadyMissing[0]['isFinalSubmitted'] == 1 && $getIfAlreadyMissing[0]['isFound'] == 1 && $getIfAlreadyMissing[0]['isdeleted'] == 1)
                {
                    $vehicleType = $getIfAlready[0]['vehicleType'];
                    $rcNumber = $getIfAlready[0]['rcNumber'];
                    $photos = array();
                    $getLatestUserPhotos = json_decode($getIfAlready[0]['vehiclePhoto'],true);   
                    if(count($getLatestUserPhotos) > 0)
                    {
                        foreach($getLatestUserPhotos as $k=>$v)
                        {
                            $split = explode('upload/vehicle/photo/',$v);
                            $newurl = 'upload/missingvehicle/'.$split[1];
                            copy($v, $newurl);
                            array_push($photos,$newurl);
                        }
                    }
                    $txnId = $this->getGUIDnoHash(10);
                    $insertdata = array(
                        'missingId' => $txnId,
                        'missingdate' => $_POST['missingdate'],
                        'photos' => json_encode($photos),
                        'userId' => $_SESSION['user_id'],
                        'vehicleType' => $_POST['vehicleType'],
                        'rcNumber' => $_POST['rcNumber'],
                        'chasisNumber' => $getIfAlready[0]['chassis_number'],
                        'engineNumber' => $getIfAlready[0]['engine_number'],
                        'companyName' => $getIfAlready[0]['company'],
                        'modelNumber' => $getIfAlready[0]['maker_model'],
                        'isMissingRegistered' => 1,
                        'ownerName' => $getIfAlready[0]['personname'],
                        'fathercurrentaddress' => $getIfAlready[0]['present_address']
                    );
                    $insert = $this->db->insert('missingvehicle',$insertdata);
                    if($insert)
                    {
                        $_SESSION['longMissingVehicleId'] = $txnId;
                        $_SESSION['missingVehicleId'] = $this->db->insert_id();
                        $getLatestUserPhotos = json_decode($getIfAlready[0]['vehiclePhoto'],true);   
                        if(count($getLatestUserPhotos) > 0)
                        {
                            foreach($getLatestUserPhotos as $k=>$v)
                            {
                                $split = explode('upload/vehicle/photo/',$v);
                                $newurl = 'upload/missingvehicle/'.$split[1];
                                copy($v, $newurl);
                                $insertdata = array(
                                    'photourl' => $newurl,
                                    'missingId' => $_SESSION['missingVehicleId']
                                );
                                $this->db->insert('missingvehiclephotos',$insertdata);      
                            }
                        }
                        $html = '';
                        $getMissingVehicleDetails = $this->db->query('select * from missingvehicle where Id='.$_SESSION['missingVehicleId'])->result_array();
                        $html .= '<div class="row"><div class="col-lg-12"><hr><h5 style="font-weight:bold;text-align:center;">Enter Some Missing Vehicle Details</h5><hr></div></div>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Owner Name</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly value="'.$getMissingVehicleDetails[0]['ownerName'].'"></div></div><hr>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Vehicle Type</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly value="'.$getMissingVehicleDetails[0]['vehicleType'].'"></div></div><hr>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Vehicle No.</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" name="rcNumber" required readonly value="'.$getMissingVehicleDetails[0]['rcNumber'].'"></div></div><hr>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Chassis Number</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly required name="chassisNumber" value="'.$getMissingVehicleDetails[0]['chasisNumber'].'"></div></div><hr>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Engine Number</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly required name="engineNumber" value="'.$getMissingVehicleDetails[0]['engineNumber'].'"></div></div><hr>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Company Name</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly required name="companyName" value="'.$getMissingVehicleDetails[0]['companyName'].'"></div></div><hr>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Model Number</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly required name="modelNumber" value="'.$getMissingVehicleDetails[0]['modelNumber'].'"></div></div><hr>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Present Address</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" required name="presentAddress"></div></div><hr>';
                        $html .= '<button type="submit" class="btn btn-success d-inline w-auto disabled-on-loading" style="background: darkblue!important;" id="okbtn"> Next</button>';
                        $response = array(
                            'html' => $html,
                            'status' => 'success',
                            'message' => 'Vehicle Complaint Created'
                        );
                        echo json_encode($response);
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }   
                }else{
                    $response = array(
                        'status' => 'closed'
                    );
                    echo json_encode($response);         
                }
            }
        }else{
            $response = array(
                'status' => 'error',
                'message'=> 'No vehicle detail found in our records'
            );
            echo json_encode($response);
        }
    }

    function updateMissingVehicleStep2Detail()
    {
        $updatedata = array(
            'fathercurrentaddress' => $_POST['presentAddress']
        );   
        $this->db->where('Id',$_SESSION['missingVehicleId']);
        $update = $this->db->update('missingvehicle',$updatedata);
        if($update)
        {
            $finalresponse = array(
                'status' => 'success',
                'message' => 'Details Updated Successfully'
            );
            echo json_encode($finalresponse);   
        }else{
            $finalresponse = array(
                'message' => 'Something Went Wrong',
                'status' => 'error'
            );
            echo json_encode($finalresponse);   
        }
    }

    function manage_missing_vehicle_details()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['missing'] = $this->db->query('select * from missingvehicle where userId='.$_SESSION['user_id'].' and isdeleted=0')->result_array();
            $page_data['page_name'] = 'manage_missing_vehicle_details';
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect('login','refresh');
        }
    }

    function updateMissingVehicleStepFirDetail()
    {
        $updatedata = array(
            'firstate' => $_POST['firstate'],
            'firdistrict' => $_POST['firdistrict'],
            'fircity' => $_POST['fircity'],
            'firvillage' => $_POST['firvillage'],
            'firpolicethananame' => $_POST['policeThanaName'],
            'firdate' => $_POST['firdate'],
            'firno' => $_POST['firNumber'],
        );
        $this->db->where('Id',$_SESSION['missingVehicleId']);
        $update = $this->db->update('missingvehicle',$updatedata);
        if($update)
        {
            $response = array(
                'status' => 'success',
                'message' => 'Please provide some additional details'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }
    }

    function updateMissingVehicleStep3Detail()
    {
        $photo = array();
        for($i=0;$i<count($_FILES['vehiclePhoto']['name']);$i++)
        {
            $name = $_FILES["vehiclePhoto"]["name"][$i];
            $ext = end((explode(".", $name)));
            $filename = 'upload/missingvehicle/photo/'.time().''.rand(0,10000).'.'.$ext;
            move_uploaded_file($_FILES['vehiclePhoto']['tmp_name'][$i], $filename);
            $image=  imagecreatefromjpeg($filename);
            ob_start();
            imagejpeg($image,NULL,100);
            $cont=  ob_get_contents();
            ob_end_clean();
            imagedestroy($image);
            $content =  imagecreatefromstring($cont);
            $newImagePath = 'upload/missingvehicle/photo/'.time().''.rand(0,10000).'.webp';
            imagewebp($content,$newImagePath);
            imagedestroy($content);
            array_push($photo,$newImagePath);
            unlink($filename);
        }
        $doc = array();
        for($i=1;$i<=$_POST['docCount'];$i++)
        {
            $name = $_FILES["docFile".$i]["name"];
            $ext = end((explode(".", $name)));
            $filename = 'upload/missingvehicle/doc/'.time().''.rand(0,10000).'.'.$ext;
            move_uploaded_file($_FILES['docFile'.$i]['tmp_name'], $filename);
            array_push($doc,array('docFile' => $filename,'docName'=>$_POST['vehicleDocName'.$i]));   
        }
        $updatedata = array(
            'photos' => json_encode($photo),
            'vehicleDoc' => json_encode($doc)
        );
        $this->db->where('Id',$_SESSION['missingVehicleId']);
        $update = $this->db->update('missingvehicle',$updatedata);
        if($update)
        {
            $response = array(
                'status' => 'success',
                'message' => 'Please provide some additional details'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }
    }
    
    function updateMissingVehicleStatus()
    {
        $updatedata = array(
            'isFound' => $_POST['status'],
        );
        $this->db->where('Id',$_POST['Id']);
        $update = $this->db->update('missingvehicle',$updatedata);
    }
    
    function updateMissingVehicleStep5Detail()
    {
        if(isset($_POST['id']))
        {
            $updatedata = array(
                'currentCity' => $_POST['currentCity'],
                'currentState' => $_POST['currentState'],
                'otherDetail' => $_POST['otherDetail']
            );
            $this->db->where('Id',$_POST['id']);
            $update = $this->db->update('missingvehicle',$updatedata);
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'Other Details Added Successfully'
                );
                echo json_encode($response);
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }   
        }else{
            $updatedata = array(
                'currentCity' => $_POST['currentCity'],
                'currentState' => $_POST['currentState'],
                'otherDetail' => $_POST['otherDetail']
            );
            $this->db->where('Id',$_SESSION['missingVehicleId']);
            $update = $this->db->update('missingvehicle',$updatedata);
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'Other Details Added Successfully'
                );
                echo json_encode($response);
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }      
        }
    }

    function saveVehicleReward()
    {
        if(isset($_POST['id']))
        {
            $updatedata = array(
                'expiryDate' => date('d-m-Y',strtotime('+1 month')),
                'rewardamount' => $_POST['rewardAmount'],
                'finalAmount' => $_POST['totalAmount'],
                'paymentId' => $_POST['paymentId'],
                'paymentStatus' => 'Success',
                'isFinalSubmitted' => 1,
            );
            $this->db->where('Id',$_POST['id']);
            $update = $this->db->update('missingvehicle',$updatedata);
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'Application No. Generated And Details Uploaded Successfully'
                );
                echo json_encode($response);
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }else{
            $updatedata = array(
                'expiryDate' => date('d-m-Y',strtotime('+1 month')),
                'rewardamount' => $_POST['rewardAmount'],
                'finalAmount' => $_POST['totalAmount'],
                'paymentId' => $_POST['paymentId'],
                'paymentStatus' => 'Success',
                'isFinalSubmitted' => 1,
            );
            $this->db->where('Id',$_SESSION['missingVehicleId']);
            $update = $this->db->update('missingvehicle',$updatedata);
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'Application No. Generated And Details Uploaded Successfully'
                );
                echo json_encode($response);
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }   
        }
    }

    function updateMissingVehicleStep4Detail()
    {
        $updatedata = array(
            'mobile1' => $_POST['mob1'],
            'mobile2' => $_POST['mob2'],
            'mobile3' => $_POST['mob3'],
        );
        $this->db->where('Id',$_SESSION['missingVehicleId']);
        $update = $this->db->update('missingvehicle',$updatedata);
        if($update)
        {
            $response = array(
                'status' => 'success',
                'message' => 'Please provide some additional details'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }
    }

    function upload_person_details()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['missing'] = $this->db->query('select * from missingperson where userId='.$_SESSION['user_id'].' and isdeleted=0')->result_array();
            $page_data['page_name'] = 'upload_person_details';
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect('login','refresh');
        }   
    }

    function addVoter()
    {
        $curl = curl_init();
        $postdata = json_encode(array(
            'voter_id' => $_POST['voterNumber'],
            'consent' => 'Y'
        ));
        curl_setopt_array($curl, [
            CURLOPT_URL => "https://api.gridlines.io/voter-api/boson/fetch",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $postdata,
            CURLOPT_HTTPHEADER => [
                "Content-Type: application/json",
                "X-API-Key: ".$this->getSettings(),
                "X-Auth-Type: API-Key"
            ],
        ]);

        $response = json_decode(curl_exec($curl),true);
        if($response['status'] == 200)
        {
            if($response['data']['code'] == 1000)
            {
                if(isset($response['data']['voter_data']['name']))
                {
                    if(strtolower(trim($response['data']['voter_data']['name'])) == strtolower(trim($_SESSION['aadharName'])))
                    {
                        $insertdata = array(
                            'voterNumber' => $_POST['voterNumber'],
                            'userId' => $_SESSION['user_id'],
                            'personname' => (isset($response['data']['voter_data']['name']) ? $response['data']['voter_data']['name'] : NULL),
                            'fathername' => (isset($response['data']['voter_data']['father_name']) ? $response['data']['voter_data']['father_name'] : NULL),
                            'gender' => (isset($response['data']['voter_data']['gender']) ? $response['data']['voter_data']['gender'] : NULL),
                            'age' => (isset($response['data']['voter_data']['age']) ? $response['data']['voter_data']['age'] : NULL),
                            'district' => (isset($response['data']['voter_data']['district']) ? $response['data']['voter_data']['district'] : NULL),
                            'state' => (isset($response['data']['voter_data']['state']) ? $response['data']['voter_data']['state'] : NULL),
                            'assembly_constituency_number' => (isset($response['data']['voter_data']['assembly_constituency_number']) ? $response['data']['voter_data']['assembly_constituency_number'] : NULL),
                            'assembly_constituency_name' => (isset($response['data']['voter_data']['assembly_constituency_name']) ? $response['data']['voter_data']['assembly_constituency_name'] : NULL),
                            'parliamentary_constituency_name' => (isset($response['data']['voter_data']['parliamentary_consituency_name']) ? $response['data']['voter_data']['parliamentary_consituency_name'] : NULL),
                            'part_number' => (isset($response['data']['voter_data']['part_number']) ? $response['data']['voter_data']['part_number'] : NULL),
                            'part_name' => (isset($response['data']['voter_data']['part_name']) ? $response['data']['voter_data']['part_name'] : NULL),
                            'serial_number' => (isset($response['data']['voter_data']['serial_number']) ? $response['data']['voter_data']['serial_number'] : NULL),
                            'polling_station' => (isset($response['data']['voter_data']['polling_station']) ? $response['data']['voter_data']['polling_station'] : NULL)
                        );
                        $insert = $this->db->insert('voterslist',$insertdata);
                        if($insert)
                        {
                            $updatedata = array(
                                'voterDetails' => $this->db->insert_id(),
                            );
                            $this->db->where('userId',$_SESSION['user_id']);
                            $this->db->update('otherpayment',$updatedata);
                            $finalresponse = array(
                                'status' => 'success',
                                'message' => 'Details Added Successfully'
                            );
                            echo json_encode($finalresponse);   
                        }else{
                            $finalresponse = array(
                                'message' => 'Something Went Wrong',
                                'status' => 'error'
                            );
                            echo json_encode($finalresponse);   
                        }       
                    }else{
                        $finalresponse = array(
                            'message' => 'Owner name is not matching with aadhar name',
                            'status' => 'error'
                        );
                        echo json_encode($finalresponse);   
                    }
                }
            }else
            {
                $finalresponse = array(
                    'message' => $response['data']['message'],
                    'status' => 'error'
                );
                echo json_encode($finalresponse);
            }
        }else{
            $finalresponse = array(
                'message' => $response['error']['message'],
                'status' => 'error'
            );
            echo json_encode($finalresponse);
        }
        curl_close($curl);
    }

    function markVehicleAsDeleted()
    {
        $updatedata = array(
            'isdeleted' => 1
        );
        $this->db->where('Id',$_SESSION['vehicleId']);
        $update = $this->db->update('vehicles',$updatedata);
        if ($update) {
            $response = array(
                'status' => 'success'
            );
        }else{
            $response = array(
                'status' => 'error'
            );
        }
        echo json_encode($response);

    }
    
    function deleteVehicleById()
    {
        if($_POST['setting'] == 1)
        {
            $getPreviousDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
            if($getPreviousDetail[0]['otp'] == $_POST['otp'])
            {
                $getVehicleDetail = $this->db->query('select * from vehicles where Id='.$_POST['Id'])->result_array();
                $getMissingVehicleDetails = $this->db->query('select * from missingvehicle where rcNumber="'.$getVehicleDetail[0]['rcNumber'].'"')->result_array();
                if(count($getMissingVehicleDetails) > 0)
                {
                    foreach($getMissingVehicleDetails as $k=>$v)
                    {
                        $getOldImageData = $this->db->query('select * from missingvehiclephotos where missingId='.$v['Id'])->result_array();
                        if(count($getOldImageData) > 0)
                        {
                            foreach($getOldImageData as $k=>$v)
                            {
                                unlink($v['photourl']);
                            }
                            $deleteold = $this->db->query('delete from missingvehiclephotos where missingId='.$v['Id']);
                            $photos = array();
                            $getLatestUserPhotos = $this->db->query('select * from missingvehiclephotos where missingId='.$v['Id'])->result_array();   
                            if(count($getLatestUserPhotos) > 0)
                            {
                                foreach($getLatestUserPhotos as $k=>$v)
                                {
                                    array_push($photos,$v['photourl']);
                                }
                            }
                            $updatetdata = array(
                                'photos' => json_encode($photos),
                            );
                            $this->db->where('Id',$v['Id']);
                            $this->db->update('missingvehicle',$updatetdata);
                        }   
                        $this->db->where('Id',$v['Id']);
                        $this->db->delete('missingvehicle');       
                    }
                }
                $this->db->where('Id',$_POST['Id']);
                $update = $this->db->delete('vehicles');
                if ($update) {
                    $getFaceMatchDetail = $this->db->query('select * from vehicleFaceMatch where vehicleId='.$_POST['Id'])->result_array();
                    if(count($getFaceMatchDetail) > 0)
                    {
                        foreach($getFaceMatchDetail as $k=>$v)
                        {
                            unlink($v['facematchphoto']);
                            $this->db->where('Id',$v['Id']);
                            $this->db->delete('vehicleFaceMatch');
                        }
                    }
                    $getDocsDetail = $this->db->query('select * from newVehicleDocs where vehicleId='.$_POST['Id'])->result_array();
                    if(count($getDocsDetail) > 0)
                    {
                        foreach($getDocsDetail as $k=>$v)
                        {
                            unlink($v['documentFile']);
                            $this->db->where('Id',$v['Id']);
                            $this->db->delete('newVehicleDocs');
                        }
                    }
                    $response = array(
                        'status' => 'success',
                        'message' => 'Vehicle Deleted Successfully'
                    );
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                }
                echo json_encode($response);   
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Invalid OTP'
                );
                echo json_encode($response);   
            }   
        }else{
            $getVehicleDetail = $this->db->query('select * from vehicles where Id='.$_POST['Id'])->result_array();
            $getMissingVehicleDetails = $this->db->query('select * from missingvehicle where rcNumber="'.$getVehicleDetail[0]['rcNumber'].'"')->result_array();
            if(count($getMissingVehicleDetails) > 0)
            {
                foreach($getMissingVehicleDetails as $k=>$v)
                {
                    $getOldImageData = $this->db->query('select * from missingvehiclephotos where missingId='.$v['Id'])->result_array();
                    if(count($getOldImageData) > 0)
                    {
                        foreach($getOldImageData as $k=>$v)
                        {
                            unlink($v['photourl']);
                        }
                        $deleteold = $this->db->query('delete from missingvehiclephotos where missingId='.$v['Id']);
                        $photos = array();
                        $getLatestUserPhotos = $this->db->query('select * from missingvehiclephotos where missingId='.$v['Id'])->result_array();   
                        if(count($getLatestUserPhotos) > 0)
                        {
                            foreach($getLatestUserPhotos as $k=>$v)
                            {
                                array_push($photos,$v['photourl']);
                            }
                        }
                        $updatetdata = array(
                            'photos' => json_encode($photos),
                        );
                        $this->db->where('Id',$v['Id']);
                        $this->db->update('missingvehicle',$updatetdata);
                    }   
                    $this->db->where('Id',$v['Id']);
                    $this->db->delete('missingvehicle');       
                }
            }
            $this->db->where('Id',$_POST['Id']);
            $update = $this->db->delete('vehicles');
            if ($update) {
                $getFaceMatchDetail = $this->db->query('select * from vehicleFaceMatch where vehicleId='.$_POST['Id'])->result_array();
                if(count($getFaceMatchDetail) > 0)
                {
                    foreach($getFaceMatchDetail as $k=>$v)
                    {
                        unlink($v['facematchphoto']);
                        $this->db->where('Id',$v['Id']);
                        $this->db->delete('vehicleFaceMatch');
                    }
                }
                $getDocsDetail = $this->db->query('select * from newVehicleDocs where vehicleId='.$_POST['Id'])->result_array();
                if(count($getDocsDetail) > 0)
                {
                    foreach($getDocsDetail as $k=>$v)
                    {
                        unlink($v['documentFile']);
                        $this->db->where('Id',$v['Id']);
                        $this->db->delete('newVehicleDocs');
                    }
                }
                $response = array(
                    'status' => 'success',
                    'message' => 'Vehicle Deleted Successfully'
                );
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
            }
            echo json_encode($response);   
        }
    }
    
    function sendDeleteVehicleOtp()
    {
        $string = '0123456789';
        $string_shuffled = str_shuffle($string);
        $otp = substr($string_shuffled, 1, 4);
        $this->sendTextLocalOtp($_SESSION['aadharname'],$_SESSION['loginmob'],$otp);
        $updatedata = array(
            'otp' => $otp
        );
        $this->db->where('uid',$_SESSION['user_id']);
        $this->db->update('user',$updatedata);
        echo substr_replace($_SESSION['loginmob'],'xxxxxx',0,7);   
    }

    function getGUIDnoHash($limit=20){
            mt_srand((double)microtime()*10000);
            $charid = md5(uniqid(rand(), true));
            $c = unpack("C*",$charid);
            $c = implode("",$c);

            return substr($c,0,$limit);
    }
    
    function uploadVehicleLatestPhoto()
    {
        if(isset($_POST['id']))
        {
            $getMissingId = $this->db->query('select * from missingvehicle where Id='.$_POST['id'])->result_array();
            $filename = $_FILES["file"]["name"];
            $ext = end((explode(".", $filename)));
            $filename = 'upload/missingvehicle/'.time().''.rand(0,10000).'.'.$ext;
            move_uploaded_file($_FILES['file']['tmp_name'], $filename);
            if($_POST['isUploaded'] == 0)
            {
                $insertdata = array(
                    'photourl' => $filename,
                    'missingId' => $getMissingId[0]['Id']
                );
                $this->db->insert('missingvehiclephotos',$insertdata);
            }else{
                $updatetdata = array(
                    'photourl' => $filename,
                );
                $this->db->where('Id',$_POST['isUploaded']);
                $this->db->update('missingvehiclephotos',$updatetdata);
            }
            $photos = array();
            $getLatestUserPhotos = $this->db->query('select * from missingvehiclephotos where missingId='.$_POST['id'])->result_array();   
            if(count($getLatestUserPhotos) > 0)
            {
                foreach($getLatestUserPhotos as $k=>$v)
                {
                    array_push($photos,$v['photourl']);
                }
            }
            $updatetdata = array(
                'photos' => json_encode($photos),
            );
            $this->db->where('Id',$_POST['id']);
            $this->db->update('missingvehicle',$updatetdata);
            $response = array(
                'status' => 'success',
                'message' => 'Photo Uploaded Successfully'
            );
            echo json_encode($response);     
        }else{
            $getMissingId = $this->db->query('select * from missingvehicle where Id='.$_SESSION['missingVehicleId'])->result_array();
            $filename = $_FILES["file"]["name"];
            $ext = end((explode(".", $filename)));
            $filename = 'upload/missingvehicle/'.time().''.rand(0,10000).'.'.$ext;
            move_uploaded_file($_FILES['file']['tmp_name'], $filename);
            if($_POST['isUploaded'] == 0)
            {
                $insertdata = array(
                    'photourl' => $filename,
                    'missingId' => $getMissingId[0]['Id']
                );
                $this->db->insert('missingvehiclephotos',$insertdata);
            }else{
                $updatetdata = array(
                    'photourl' => $filename,
                );
                $this->db->where('Id',$_POST['isUploaded']);
                $this->db->update('missingvehiclephotos',$updatetdata);
            }
            $photos = array();
            $getLatestUserPhotos = $this->db->query('select * from missingvehiclephotos where missingId='.$_SESSION['missingVehicleId'])->result_array();   
            if(count($getLatestUserPhotos) > 0)
            {
                foreach($getLatestUserPhotos as $k=>$v)
                {
                    array_push($photos,$v['photourl']);
                }
            }
            $updatetdata = array(
                'photos' => json_encode($photos),
            );
            $this->db->where('Id',$_SESSION['missingVehicleId']);
            $this->db->update('missingvehicle',$updatetdata);
            $response = array(
                'status' => 'success',
                'message' => 'Photo Uploaded Successfully'
            );
            echo json_encode($response);  
        }
    }
    
    function uploadPersonLatestPhoto()
    {
        $getMissingId = $this->db->query('select * from missingperson where missingId='.$_SESSION['missingPersonId'])->result_array();
        $filename = $_FILES["file"]["name"];
        $ext = end((explode(".", $filename)));
        $newImagePath = 'upload/missingperson/'.time().''.rand(0,10000).'.'.$ext;
        move_uploaded_file($_FILES['file']['tmp_name'], $newImagePath);
        if($_POST['isUploaded'] == 0)
        {
            $insertdata = array(
                'photourl' => $newImagePath,
                'missingId' => $getMissingId[0]['Id']
            );
            $this->db->insert('missingpersonphotos',$insertdata);
        }else{
            $updatedata = array(
                'photourl' => $newImagePath,
            );
            $this->db->where('Id',$_POST['isUploaded']);
            $this->db->update('missingpersonphotos',$updatedata);
        }
        $response = array(
            'status' => 'success',
            'message' => 'Photo Uploaded Successfully'
        );
        echo json_encode($response);   
    }
    
    function uploadPersonalLatestPhoto()
    {
        $data = $_POST["file"];
        $image_array_1 = explode(";", $data);
        $split1 = explode('data:image/',$image_array_1[0]);
        $image_array_2 = explode(",", $image_array_1[1]);
        $data = base64_decode($image_array_2[1]);
        $imageId = time().''.rand(0,10000);
        $mainphoto = 'upload/profile/'.$imageId.'.'.$split1[1];
        file_put_contents($mainphoto, $data);
        if($_POST['isUploaded'] == 0)
        {
            $insertdata = array(
                'photourl' => $mainphoto,
                'userId' => $_SESSION['user_id']
            );
            $this->db->insert('userphotos',$insertdata);
        }else{
            $updatetdata = array(
                'photourl' => $mainphoto,
            );
            $this->db->where('Id',$_POST['isUploaded']);
            $this->db->update('userphotos',$updatetdata);
        }
        $response = array(
            'status' => 'success',
            'message' => 'Photo Uploaded Successfully'
        );
        echo json_encode($response);
    }

    function addDl()
    {
        $curl = curl_init();
        $_POST['dob'] = $_POST['year'].'-'.$_POST['month'].'-'.$_POST['date'];
        $postdata = json_encode(array(
            'driving_license_number' => $_POST['dlNumber'],
            'date_of_birth' => date('Y-m-d',strtotime($_POST['dob'])),
            'consent' => 'Y'
        ));
        curl_setopt_array($curl, [
            CURLOPT_URL => "https://api.gridlines.io/dl-api/fetch",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => $postdata,
            CURLOPT_HTTPHEADER => [
                "Content-Type: application/json",
                "X-API-Key: ".$this->getSettings(),
                "X-Auth-Type: API-Key"
            ],
        ]);

        $response = json_decode(curl_exec($curl),true);
        if($response['status'] == 200)
        {
            if($response['data']['code'] == 1000)
            {
                $dlphoto = '';
                if(isset($response['data']['driving_license_data']['name']))
                {
                    if(strtolower($response['data']['driving_license_data']['name']) == strtolower($_SESSION['aadharName']))
                    {
                        if(isset($response['data']['driving_license_data']['photo_base64']))
                        {
                            $decoded=base64_decode($response['data']['driving_license_data']['photo_base64']);
                            $olddlphoto = 'upload/dl/'.time().'.JPG';
                            file_put_contents($olddlphoto,$decoded);
                            $image=  imagecreatefromjpeg($olddlphoto);
                            ob_start();
                            imagejpeg($image,NULL,100);
                            $cont=  ob_get_contents();
                            ob_end_clean();
                            imagedestroy($image);
                            $content =  imagecreatefromstring($cont);
                            $dlphoto = 'upload/dl/'.time().''.rand(0,10000).'.webp';
                            imagewebp($content,$dlphoto);
                            imagedestroy($content);
                            unlink($olddlphoto);
                        }
                        $insertdata = array(
                            'dlNumber' => $_POST['dlNumber'],
                            'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                            'userId' => $_SESSION['user_id'],
                            'personname' => (isset($response['data']['driving_license_data']['name']) ? $response['data']['driving_license_data']['name'] : NULL),
                            'document_id' => (isset($response['data']['driving_license_data']['document_id']) ? $response['data']['driving_license_data']['document_id'] : NULL),
                            'dependent_name' => (isset($response['data']['driving_license_data']['dependent_name']) ? $response['data']['driving_license_data']['dependent_name'] : NULL),
                            'address' => (isset($response['data']['driving_license_data']['address']) ? $response['data']['driving_license_data']['address'] : NULL),
                            'pincode' => (isset($response['data']['driving_license_data']['pincode']) ? $response['data']['driving_license_data']['pincode'] : NULL),
                            'non_transport_issue_date' => (isset($response['data']['driving_license_data']['validity']['non_transport']['issue_date']) ? $response['data']['driving_license_data']['validity']['non_transport']['issue_date'] : NULL),
                            'non_transport_expiry_date' => (isset($response['data']['driving_license_data']['validity']['non_transport']['expriy_date']) ? $response['data']['driving_license_data']['validity']['non_transport']['expiry_date'] : NULL),
                            'transport_issue_date' => (isset($response['data']['driving_license_data']['validity']['transport']['issue_date']) ? $response['data']['driving_license_data']['validity']['transport']['issue_date'] : NULL),
                            'transport_expiry_date' => (isset($response['data']['driving_license_data']['validity']['transport']['expriy_date']) ? $response['data']['driving_license_data']['validity']['transport']['expiry_date'] : NULL),
                            'rto_state' => (isset($response['data']['driving_license_data']['rto_details']['state']) ? $response['data']['driving_license_data']['rto_details']['state'] : NULL),
                            'rto_authority' => (isset($response['data']['driving_license_data']['rto_details']['authority']) ? $response['data']['driving_license_data']['rto_details']['authority'] : NULL),
                            'blood_group' => (isset($response['data']['driving_license_data']['blood_group']) ? $response['data']['driving_license_data']['blood_group'] : NULL),
                            'photo_base64' => (isset($response['data']['driving_license_data']['photo_base64']) ? $dlphoto : NULL)
                        );
                        $insert = $this->db->insert('dllist',$insertdata);
                        if($insert)
                        {
                            $updatedata = array(
                                'dlDetails' => $this->db->insert_id(),
                            );
                            $this->db->where('userId',$_SESSION['user_id']);
                            $this->db->update('otherpayment',$updatedata);
                            $finalresponse = array(
                                'status' => 'success',
                                'message' => 'Details Added Successfully'
                            );
                            echo json_encode($finalresponse);   
                        }else{
                            $finalresponse = array(
                                'message' => 'Something Went Wrong',
                                'status' => 'error'
                            );
                            echo json_encode($finalresponse);   
                        }       
                    }else{
                        $finalresponse = array(
                            'status' => 'error',
                            'message' => 'Owner name does not match with aadhar name'
                        );
                        echo json_encode($finalresponse);
                    }
                }else{
                    $finalresponse = array(
                        'status' => 'error',
                        'message' => 'Owner name does not match with aadhar name'
                    );
                    echo json_encode($finalresponse);
                }
            }else
            {
                $finalresponse = array(
                    'message' => $response['data']['message'],
                    'status' => 'error'
                );
                echo json_encode($finalresponse);
            }
        }else{
            $finalresponse = array(
                'message' => $response['error']['message'],
                'status' => 'error'
            );
            echo json_encode($finalresponse);
        }
        curl_close($curl);
    }

    function addPan()
    {
        $curl = curl_init();
        $txnId = $this->getGUIDnoHash();
        curl_setopt_array($curl, array(
          CURLOPT_URL => 'http://142.93.222.228:8080/API/verify/Getpandetails',
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => '',
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 0,
          CURLOPT_FOLLOWLOCATION => true,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => 'POST',
          CURLOPT_POSTFIELDS =>'{"method":"panvalidate","txn_id":'.$txnId.',"clientid":"SIVA_TEST","pan":"'.$_POST['panNumber'].'"}',
          CURLOPT_HTTPHEADER => array(
            'Content-Type: application/json'
          ),
        ));

        $result = json_decode(curl_exec($curl),true);
        if(isset($result['Succeeded']))
        {
            if($result['Succeeded']['statusMessage'] == 'Success')
            {
                if(isset($result['Succeeded']['data'][0]['name']))
                {
                    if($result['Succeeded']['data'][0]['name'] == $_SESSION['aadharName'])
                    {
                        $insertdata = array(
                            'txnId' => $txnId,
                            'userId' => $_SESSION['user_id'],
                            'fullname' => (isset($result['Succeeded']['data'][0]['name']) ? $result['Succeeded']['data'][0]['name'] : ($result['Succeeded']['data'][0]['first_name'] .' '. $result['Succeeded']['data'][0]['middle_name'].' '.$result['Succeeded']['data'][0]['last_name'])),
                            'panNumber' => $result['Succeeded']['data'][0]['number'],
                            'type_of_holder' => $result['Succeeded']['data'][0]['type_of_holder'],
                            'type_of_holder_code' => $result['Succeeded']['data'][0]['type_of_holder_code'],
                            'is_individual' => $result['Succeeded']['data'][0]['is_individual'],
                            'is_valid' => $result['Succeeded']['data'][0]['is_valid'],
                            'first_name' => $result['Succeeded']['data'][0]['first_name'],
                            'middle_name' => $result['Succeeded']['data'][0]['middle_name'],
                            'last_name' => $result['Succeeded']['data'][0]['last_name'],
                            'title' => $result['Succeeded']['data'][0]['title'],
                            'pan_status' => $result['Succeeded']['data'][0]['pan_status'],
                            'pan_status_code' => $result['Succeeded']['data'][0]['pan_status_code'],
                            'last_updated_on' => $result['Succeeded']['data'][0]['last_updated_on'],
                            'aadhaar_seeding_status' => $result['Succeeded']['data'][0]['aadhaar_seeding_status'],
                            'aadhaar_seeding_status_code' => $result['Succeeded']['data'][0]['aadhaar_seeding_status_code'],
                        );
                        $insert = $this->db->insert('panlist',$insertdata);
                        if($insert)
                        {
                            $updatedata = array(
                                'panDetails' => $this->db->insert_id(),
                            );
                            $this->db->where('userId',$_SESSION['user_id']);
                            $this->db->update('otherpayment',$updatedata);
                            $response = array(
                                'status' => 'success',
                                'message' => 'Pan Added Successfully'
                            );
                            echo json_encode($response);
                        }else{
                            $response = array(
                                'status' => 'error',
                                'message' => 'Something Went Wrong'
                            );
                            echo json_encode($response);
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Pan Name does not matched with aadhar name'
                        );
                        echo json_encode($response);
                    }
                }else
                {
                    $panName = $result['Succeeded']['data'][0]['first_name'].' '.$result['Succeeded']['data'][0]['middle_name'].' '.$result['Succeeded']['data'][0]['last_name'];
                    if($panName == $_SESSION['aadharName'])
                    {
                        $insertdata = array(
                            'txnId' => $txnId,
                            'userId' => $_SESSION['user_id'],
                            'fullname' => (isset($result['Succeeded']['data'][0]['name']) ? $result['Succeeded']['data'][0]['name'] : ($result['Succeeded']['data'][0]['first_name'] .' '. $result['Succeeded']['data'][0]['middle_name'].' '.$result['Succeeded']['data'][0]['last_name'])),
                            'panNumber' => $result['Succeeded']['data'][0]['number'],
                            'type_of_holder' => $result['Succeeded']['data'][0]['type_of_holder'],
                            'type_of_holder_code' => $result['Succeeded']['data'][0]['type_of_holder_code'],
                            'is_individual' => $result['Succeeded']['data'][0]['is_individual'],
                            'is_valid' => $result['Succeeded']['data'][0]['is_valid'],
                            'first_name' => $result['Succeeded']['data'][0]['first_name'],
                            'middle_name' => $result['Succeeded']['data'][0]['middle_name'],
                            'last_name' => $result['Succeeded']['data'][0]['last_name'],
                            'title' => $result['Succeeded']['data'][0]['title'],
                            'pan_status' => $result['Succeeded']['data'][0]['pan_status'],
                            'pan_status_code' => $result['Succeeded']['data'][0]['pan_status_code'],
                            'last_updated_on' => $result['Succeeded']['data'][0]['last_updated_on'],
                            'aadhaar_seeding_status' => $result['Succeeded']['data'][0]['aadhaar_seeding_status'],
                            'aadhaar_seeding_status_code' => $result['Succeeded']['data'][0]['aadhaar_seeding_status_code'],
                        );
                        $insert = $this->db->insert('panlist',$insertdata);
                        if($insert)
                        {
                            $updatedata = array(
                                'panDetails' => $this->db->insert_id(),
                            );
                            $this->db->where('userId',$_SESSION['user_id']);
                            $this->db->update('otherpayment',$updatedata);
                            $response = array(
                                'status' => 'success',
                                'message' => 'Pan Added Successfully'
                            );
                            echo json_encode($response);
                        }else{
                            $response = array(
                                'status' => 'error',
                                'message' => 'Something Went Wrong'
                            );
                            echo json_encode($response);
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Pan Name does not matched with aadhar name'
                        );
                        echo json_encode($response);
                    }
                }
            }else{
                $response = array(
                    'status' => 'failed',
                    'message' => $result['Succeeded']['statusMessage']
                );
                echo json_encode($response);
            }
        }else{
            $response = array(
                'status' => 'failed',
                'message' => $result['Failed']['statusMessage']
            );
            echo json_encode($response);
        }
        curl_close($curl);
    }
    
    function addNewPan()
    {
        $curl = curl_init();
        $txnId = $this->getGUIDnoHash();
        $postdata = json_encode(array(
            'pan_number' => $_POST['panNumber'],
            'consent' => 'Y'
        ));
        $curl = curl_init();
        curl_setopt_array($curl, [
          CURLOPT_URL => "https://api.gridlines.io/pan-api/fetch-detailed",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "POST",
          CURLOPT_POSTFIELDS => $postdata,
          CURLOPT_HTTPHEADER => [
            "Content-Type: application/json",
            "X-API-Key: ".$this->getSettings(),
            "X-Auth-Type: API-Key"
          ],
        ]);

        $result = json_decode(curl_exec($curl),true);
        if($result['status'] == 200)
        {
            if($result['data']['code'] == 1000)
            {
                if(isset($result['data']['pan_data']['name']))
                {
                    if(strtolower($result['data']['pan_data']['name']) == strtolower($_SESSION['aadharName']))
                    {
                        $insertdata = array(
                            'txnId' => $txnId,
                            'userId' => $_SESSION['user_id'],
                            'fullname' => (isset($result['data']['pan_data']['name']) ? $result['data']['pan_data']['name'] : ($result['data']['pan_data']['first_name'] .' '. $result['data']['pan_data']['middle_name'].' '.$result['data']['pan_data']['last_name'])),
                            'panNumber' => $result['data']['pan_data']['document_id'],
                            'type_of_holder' => ($result['data']['pan_data']['category'] == 'P' ? 'Person' : 'Individual'),
                            'type_of_holder_code' => $result['data']['pan_data']['category'],
                            'is_valid' => true,
                            'first_name' => $result['data']['pan_data']['first_name'],
                            'middle_name' => $result['data']['pan_data']['middle_name'],
                            'last_name' => $result['data']['pan_data']['last_name'],
                            'aadhaar_seeding_status' => $result['data']['pan_data']['aadhaar_linked'],
                        );
                        $insert = $this->db->insert('panlist',$insertdata);
                        if($insert)
                        {
                            $updatedata = array(
                                'panDetails' => $this->db->insert_id(),
                            );
                            $this->db->where('userId',$_SESSION['user_id']);
                            $this->db->update('otherpayment',$updatedata);
                            $response = array(
                                'status' => 'success',
                                'message' => 'Pan Added Successfully'
                            );
                            echo json_encode($response);
                        }else{
                            $response = array(
                                'status' => 'error',
                                'message' => 'Something Went Wrong'
                            );
                            echo json_encode($response);
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Pan Name does not matched with aadhar name'
                        );
                        echo json_encode($response);
                    }
                }else{
                    $panName = $result['data']['pan_data']['first_name'].' '.$result['data']['pan_data']['middle_name'].' '.$result['data']['pan_data']['last_name'];
                    if(strtolower($panName) == strtolower($_SESSION['aadharName']))
                    {
                        $insertdata = array(
                            'txnId' => $txnId,
                            'userId' => $_SESSION['user_id'],
                            'fullname' => (isset($result['data']['pan_data']['name']) ? $result['data']['pan_data']['name'] : ($result['data']['pan_data']['first_name'] .' '. $result['data']['pan_data']['middle_name'].' '.$result['data']['pan_data']['last_name'])),
                            'panNumber' => $result['data']['pan_data']['document_id'],
                            'type_of_holder' => ($result['data']['pan_data']['category'] == 'P' ? 'Person' : 'Individual'),
                            'type_of_holder_code' => $result['data']['pan_data']['category'],
                            'is_valid' => true,
                            'first_name' => $result['data']['pan_data']['first_name'],
                            'middle_name' => $result['data']['pan_data']['middle_name'],
                            'last_name' => $result['data']['pan_data']['last_name'],
                            'aadhaar_seeding_status' => $result['data']['pan_data']['aadhaar_linked'],
                        );
                        $insert = $this->db->insert('panlist',$insertdata);
                        if($insert)
                        {
                            $updatedata = array(
                                'panDetails' => $this->db->insert_id(),
                            );
                            $this->db->where('userId',$_SESSION['user_id']);
                            $this->db->update('otherpayment',$updatedata);
                            $response = array(
                                'status' => 'success',
                                'message' => 'Pan Added Successfully'
                            );
                            echo json_encode($response);
                        }else{
                            $response = array(
                                'status' => 'error',
                                'message' => 'Something Went Wrong'
                            );
                            echo json_encode($response);
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Pan Name does not matched with aadhar name'
                        );
                        echo json_encode($response);
                    }
                }
            }else{
                $finalresponse = array(
                    'status' => 'error',
                    'message' => $result['data']['message']
                );    
                echo json_encode($finalresponse);
            }
        }else{
            $finalresponse = array(
                'status' => 'error',
                'message' => $result['error']['message']
            );    
            echo json_encode($finalresponse);
        }
        curl_close($curl);
    }

    function updateotherPayment()
    {
        $getPreviousDetail = $this->db->query('select * from otherpayment where userId='.$_SESSION['user_id'])->result_array();
        $updatedata = array(
            'amount' => $getPreviousDetail[0]['amount'] + $_POST['totalAmount'],
            'isPanAdded' => (($getPreviousDetail[0]['isPanAdded'] != 1 ? $_POST['pan'] : 1)),
            'isVoterAdded' => (($getPreviousDetail[0]['isVoterAdded'] != 1 ? $_POST['voter'] : 1)),
            'isDlAdded' => (($getPreviousDetail[0]['isDlAdded'] != 1 ? $_POST['dl'] : 1)),
            'voterPaymentStatus' => (($getPreviousDetail[0]['isVoterAdded'] != 1 ? (($_POST['voter'] ) ? 'Success' : 'Pending') : 'Success')),
            'panPaymentStatus' => (($getPreviousDetail[0]['isPanAdded'] != 1 ? (($_POST['pan'] ) ? 'Success' : 'Pending') : 'Success')),
            'dlPaymentStatus' => (($getPreviousDetail[0]['isDlAdded'] != 1 ? (($_POST['dl'] ) ? 'Success' : 'Pending') : 'Success')),
        );
        $this->db->where('Id',$getPreviousDetail[0]['Id']);
        $update = $this->db->update('otherpayment',$updatedata);
        if($update)
        {
            $response = array(
                'status' => 'success'
            );
        }else{
            $response = array(
                'status' => 'error'
            );
        }
        echo json_encode($response);
    }

    function otherPayment()
    {
        $insertdata = array(
            'userId' => $_SESSION['user_id'],
            'amount' => $_POST['totalAmount'],
            'isPanAdded' => $_POST['pan'],
            'isVoterAdded' => $_POST['voter'],
            'isDlAdded' => $_POST['dl'],
            'voterPaymentStatus' => ($_POST['voter'] ? 'Success' : 'Pending'),
            'panPaymentStatus' => ($_POST['pan'] ? 'Success' : 'Pending'),
            'dlPaymentStatus' => ($_POST['dl'] ? 'Success' : 'Pending')
        );
        $insert = $this->db->insert('otherpayment',$insertdata);
        if($insert)
        {
            $response = array(
                'status' => 'success'
            );
        }else{
            $response = array(
                'status' => 'error'
            );
        }
        echo json_encode($response);
    }

    function upload_additional_details()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['otherdetail'] = $this->db->query('select * from otherpayment where userId='.$_SESSION['user_id'])->result_array();
            $page_data['page_name'] = 'upload_additional_details';
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect('login','refresh');
        }   
    }

    function editVehicle($id)
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['id'] = $id;
            $page_data['vehicles'] = $this->db->query('select * from vehicles where Id='.$id)->result_array();
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page_name'] = 'editVehicle';
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect('login','refresh');
        }   
    }
    
    function getVehicleHtml()
    {
        $html = '';
        $getVehicleDetails = $this->db->query('select * from vehicles where Id='.$_SESSION['vehicleId'])->result_array();
        $html .= '<div class="form-group mb-3"><img src="'.base_url().'assets/images/verified.webp" style="height:50px;width:100px;border: 2px solid #bdbdbd;border-radius:15px;"></div>';
        $html .= '<div class="row mx-0"><div class="col-lg-6 col-md-4 label ">Owner Name</div><div class="col-lg-6 col-md-8">'.$getVehicleDetails[0]['personname'].'</div></div><hr>';
        $html .= '<div class="row mx-0"><div class="col-lg-6 col-md-4 label">Vehicle Type</div><div class="col-lg-6 col-md-8">'.$getVehicleDetails[0]["vehicleType"].'</div></div><hr>';
        $html .= '<div class="row mx-0"><div class="col-lg-6 col-md-4 label">Vehicle No.</div><div class="col-lg-6 col-md-8 text-uppercase text-success">'.$getVehicleDetails[0]['rcNumber'].'</div></div><hr>';
        $html .= '<div class="row mx-0"><div class="col-lg-6 col-md-4 label">Chassis Number</div><div class="col-lg-6 col-md-8">'.$getVehicleDetails[0]['chassis_number'].'</div></div><hr>';
        $html .= '<div class="row mx-0"><div class="col-lg-6 col-md-4 label">Engine Number</div><div class="col-lg-6 col-md-8">'.$getVehicleDetails[0]['engine_number'].'</div></div><hr>';
        $html .= '<div class="row mx-0"><div class="col-lg-6 col-md-4 label">Company Name</div><div class="col-lg-6 col-md-8">'.$getVehicleDetails[0]['company'].'</div></div><hr>';
        $html .= '<div class="row mx-0"><div class="col-lg-6 col-md-4 label">Model Number</div><div class="col-lg-6 col-md-8">'.$getVehicleDetails[0]['maker_model'].'</div></div><hr>';
        $html .= '<div class="row mx-0"><div class="col-lg-6 col-md-4 label">Present Address</div><div class="col-lg-6 col-md-8">'.$getVehicleDetails[0]['present_address'].'</div></div><hr>';
        $html .= '<div class="row mx-0"><div class="col-lg-6 col-sm-12 col-md-auto mb-3"><a href="javascript:void(0)" class="btn btn-success btn-style-green w-100" id="okbtn" onclick="showVehicleDoc()">Continue</a></div><div class="col-lg-6 col-sm-12 col-md-auto mb-3"><a href="javascript:void(0)" class="btn btn-danger btn-style-red w-100" id="resetbtn" onclick="confirmCancel(this)">Cancel</a></div></div>';
        echo $html;
    }

    function editFunnelMissingDetails()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'editFunnelMissingDetails';
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            if(isset($_GET['appNo']))
            {
                $page_data['data'] = $this->db->query('select * from funnel_missing where Application_no="'.$_GET['appNo'].'"')->result_array();
            }else{
                $page_data['data'] = $this->db->query('select * from funnel_missing where Application_no="'.$_GET['id'].'"')->result_array();
            }
            $page_data['gold'] = $this->db->query('select * from funnelpersongold where goldHUID != "" and funnelId='.$page_data['data'][0]['id'])->result_array();
            // $page_data['data'] = array();
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        }
    }
    
    function editLapataDetails()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'editLapataDetails';
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            if($page_data['pn'] == 4)
            {
                if(strpos($_SERVER['HTTP_REFERER'],'paymentWithoutExpiries') !== false || strpos($_SERVER['HTTP_REFERER'],'paymentExpiries') !== false)
                {
                    $_SESSION['previous_url'] = 'editLapataDetails';
                }
            }
			if(isset($_GET['appNo']))
			{
				$page_data['data'] = $this->db->query('select * from unknown_person where Application_no="'.$_GET['appNo'].'"')->result_array();
			}else{
				$page_data['data'] = $this->db->query('select * from unknown_person where Application_no="'.$_GET['id'].'"')->result_array();
			}
            $page_data['gold'] = $this->db->query('select * from unknownPersonGold where goldHUID != "" and unknownId='.$page_data['data'][0]['id'])->result_array();
            // $page_data['data'] = array();
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        }
    }

    function manage_unknown_details()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'manage_unknown_details';
            if(!isset($_GET['appNo']))
            {
                $page_data['data'] = $this->db->query('select * from unknown_person where isKyc=0 and isFinalSubmitted=1 and awsEventName="Unknown" and userId='.$_SESSION['user_id'])->result_array();
            }else{
                $page_data['data'] = $this->db->query('select * from unknown_person where isKyc=0 and Application_no="'.$_GET['appNo'].'" and awsEventName="Unknown" and userId='.$_SESSION['user_id'])->result_array();
            }
            $page_data['rows'] = count($page_data['data']);
            $page_rows = 15;
         
            $last = ceil($page_data['rows']/$page_rows);
         
            if($last < 1){
                $last = 1;
            }
         
            $pagenum = 1;
         
            if(isset($_GET['pn'])){
                $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
            }
         
            if ($pagenum < 1) { 
                $pagenum = 1; 
            } 
            else if ($pagenum > $last) { 
                $pagenum = $last; 
            }
         
            $this->db->where('isKyc',0);
            $this->db->where('isFinalSubmitted',1);
            $this->db->where('awsEventName','Unknown');
            $this->db->where('userId',$_SESSION['user_id']);
            $this->db->order_by('dateCreated','desc');
            if(!isset($_GET['appNo']))
            {

            }else{
                $this->db->where('Application_no',$_GET['appNo']);
            }
            $this->db->limit($page_rows,($pagenum - 1) * $page_rows);
            $page_data['data'] = $this->db->get('unknown_person')->result_array();
            $page_data['paginationCtrls'] = '';     
            if($last != 1){
                if ($pagenum > 1) {
                    $previous = $pagenum - 1;
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_unknown_details?pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
             
                    for($i = $pagenum-4; $i < $pagenum; $i++){
                        if($i > 0){
                            $paginationCtrls .= '<a href="'.base_url().'NonKyc/manage_unknown_details?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                        }
                    }
                }
             
                $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
             
                for($i = $pagenum+1; $i <= $last; $i++){
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_unknown_details?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                    if($i >= $pagenum+4){
                        break;
                    }
                }
             
                if ($pagenum != $last) {
                    $next = $pagenum + 1;
                    $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manage_unknown_details?pn='.$next.'" class="btn btn-default">Next</a> ';
                }
            }
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        }   
    }

    function manage_unknown_details_new()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'manage_unknown_details_new';
            if(!isset($_GET['appNo']))
            {
                $page_data['data'] = $this->db->query('select * from unknown_person where isKyc=0 and isFinalSubmitted=1 and awsEventName="Unknown" and userId='.$_SESSION['user_id'])->result_array();
            }else{
                $page_data['data'] = $this->db->query('select * from unknown_person where isKyc=0 and Application_no="'.$_GET['appNo'].'" and awsEventName="Unknown" and userId='.$_SESSION['user_id'])->result_array();
            }
            $page_data['rows'] = count($page_data['data']);
            $page_rows = 15;
         
            $last = ceil($page_data['rows']/$page_rows);
         
            if($last < 1){
                $last = 1;
            }
         
            $pagenum = 1;
         
            if(isset($_GET['pn'])){
                $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
            }
         
            if ($pagenum < 1) { 
                $pagenum = 1; 
            } 
            else if ($pagenum > $last) { 
                $pagenum = $last; 
            }
         
            $this->db->where('isKyc',0);
            $this->db->where('isFinalSubmitted',1);
            $this->db->where('awsEventName','Unknown');
            $this->db->where('userId',$_SESSION['user_id']);
            $this->db->order_by('dateCreated','desc');
            if(!isset($_GET['appNo']))
            {

            }else{
                $this->db->where('Application_no',$_GET['appNo']);
            }
            $this->db->limit($page_rows,($pagenum - 1) * $page_rows);
            $page_data['data'] = $this->db->get('unknown_person')->result_array();
            $page_data['paginationCtrls'] = '';     
            if($last != 1){
                if ($pagenum > 1) {
                    $previous = $pagenum - 1;
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_unknown_details_new?pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
             
                    for($i = $pagenum-4; $i < $pagenum; $i++){
                        if($i > 0){
                            $paginationCtrls .= '<a href="'.base_url().'NonKyc/manage_unknown_details_new?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                        }
                    }
                }
             
                $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
             
                for($i = $pagenum+1; $i <= $last; $i++){
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_unknown_details_new?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                    if($i >= $pagenum+4){
                        break;
                    }
                }
             
                if ($pagenum != $last) {
                    $next = $pagenum + 1;
                    $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manage_unknown_details_new?pn='.$next.'" class="btn btn-default">Next</a> ';
                }
            }
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        }   
    }

    function editUnknownDetailsNew()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'editUnknownDetailsNew';
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            if($page_data['pn'] == 4)
            {
                if(strpos($_SERVER['HTTP_REFERER'],'view_expiry_unknown') !== false)
                {
                    $_SESSION['previous_url'] = 'editUnknownDetailsNew';
                }
            }
            $page_data['data'] = $this->db->query('select * from unknown_person where Application_no="'.$_GET['id'].'"')->result_array();
            $page_data['gold'] = $this->db->query('select * from unknownPersonGold where goldHUID != "" and unknownId='.$page_data['data'][0]['id'])->result_array();
            // $page_data['data'] = array();
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        }
    }

    function editUnknownDetails()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'editUnknownDetails';
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            if($page_data['pn'] == 4)
            {
                if(strpos($_SERVER['HTTP_REFERER'],'view_expiry_unknown') !== false)
                {
                    $_SESSION['previous_url'] = 'editUnknownDetails';
                }
            }
            $page_data['data'] = $this->db->query('select * from unknown_person where Application_no="'.$_GET['id'].'"')->result_array();
            $page_data['gold'] = $this->db->query('select * from unknownPersonGold where goldHUID != "" and unknownId='.$page_data['data'][0]['id'])->result_array();
            // $page_data['data'] = array();
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        }
    }
    
    function manage_lapata()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'manage_lapata';
            if(!isset($_GET['appNo']))
            {
                $page_data['data'] = $this->db->query('select * from unknown_person where isFinalSubmitted=1 and isKyc=0 and awsEventName="All" and userId='.$_SESSION['user_id'].' order by dateCreated desc')->result_array();
            }else{
                $page_data['data'] = $this->db->query('select * from unknown_person where isFinalSubmitted=1 and isKyc=0 and Application_no="'.$_GET['appNo'].'" and awsEventName="All" and userId='.$_SESSION['user_id'])->result_array();
            }
            $page_data['rows'] = count($page_data['data']);
            $page_rows = 15;
         
            $last = ceil($page_data['rows']/$page_rows);
         
            if($last < 1){
                $last = 1;
            }
         
            $pagenum = 1;
         
            if(isset($_GET['pn'])){
                $pagenum = preg_replace('#[^0-9]#', '', $_GET['pn']);
            }
         
            if ($pagenum < 1) { 
                $pagenum = 1; 
            } 
            else if ($pagenum > $last) { 
                $pagenum = $last; 
            }
            
            $this->db->where('isKyc',0);
            $this->db->where('isFinalSubmitted',1);
            $this->db->where('awsEventName','All');
            $this->db->where('userId',$_SESSION['user_id']);
            $this->db->order_by('dateCreated','desc');
            if(!isset($_GET['appNo']))
            {

            }else{
                $this->db->where('Application_no',$_GET['appNo']);
            }
            $this->db->limit($page_rows,($pagenum - 1) * $page_rows);
            $page_data['data'] = $this->db->get('unknown_person')->result_array();
            $page_data['paginationCtrls'] = '';     
            if($last != 1){
                if ($pagenum > 1) {
                    $previous = $pagenum - 1;
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_lapata?pn='.$previous.'" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
             
                    for($i = $pagenum-4; $i < $pagenum; $i++){
                        if($i > 0){
                            $paginationCtrls .= '<a href="'.base_url().'NonKyc/manage_lapata?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                        }
                    }
                }
             
                $page_data['paginationCtrls'] .= ''.$pagenum.' &nbsp; ';
             
                for($i = $pagenum+1; $i <= $last; $i++){
                    $page_data['paginationCtrls'] .= '<a href="'.base_url().'NonKyc/manage_lapata?pn='.$i.'" class="btn btn-default">'.$i.'</a> &nbsp; ';
                    if($i >= $pagenum+4){
                        break;
                    }
                }
             
                if ($pagenum != $last) {
                    $next = $pagenum + 1;
                    $page_data['paginationCtrls'] .= ' &nbsp; &nbsp; <a href="'.base_url().'NonKyc/manage_lapata?pn='.$next.'" class="btn btn-default">Next</a> ';
                }
            }
            $this->load->view('nonkyc/index', $page_data);
        } else {
            redirect(base_url(),'refresh');
        } 
    }

    function create_vehicle()
    {
        $getIfAlreadyAvailable = $this->db->query('select * from vehicles where userId='.$_SESSION['user_id'].' and rcNumber="'.$_POST['rcNumber'].'" and isDeleted != 1')->result_array();
        if(count($getIfAlreadyAvailable) > 0)
        {
            $getUserDetail = $this->db->query('select * from user where uid='.$getIfAlreadyAvailable[0]['userId'])->result_array();
            $finalresponse = array(
                'message' => 'This vehicle number(<b class="text-danger">'.strtoupper($_POST['rcNumber']).'</b>) is already added in your account',
                'status' => 'Already Available'
            );
            echo json_encode($finalresponse);   
        }else{
            $postdata = json_encode(array(
                'rc_number' => $_POST['rcNumber'],
                'consent' => 'Y'
            ));
            $curl = curl_init();
            curl_setopt_array($curl, [
              CURLOPT_URL => "https://api.gridlines.io/rc-api/fetch-detailed",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => $postdata,
              CURLOPT_HTTPHEADER => [
                "Content-Type: application/json",
                "X-API-Key: ".$this->getSettings(),
                "X-Auth-Type: API-Key"
              ],
            ]);

            $response = json_decode(curl_exec($curl),true);
            if($response['status'] == 200)
            {
                if($response['data']['code'] == 1000)
                {
                    $mobile = '';
                    if(isset($response['data']['rc_data']['owner_data']['present_address']))
                    {
                        $split = explode('MOB.',$response['data']['rc_data']['owner_data']['present_address'],10);
                        $split1 = explode(',',$split[1]);
                        $mobile = $split1[0];
                    }
                    $isOwnerOk = true;
                    if(isset($response['data']['rc_data']['owner_data']['name']))
                    {
                        if(strtoupper($response['data']['rc_data']['owner_data']['name']) != $_POST['ownerName'])
                        {
                            $isOwnerOk = false;
                        }
                    }
                    if($isOwnerOk)
                    {
                        if(isset($response['data']['rc_data']['vehicle_data']['chassis_number']))
                        {
                            $getIfAlreadyAvailable = $this->db->query('select * from vehicles where chassis_number="'.$response['data']['rc_data']['vehicle_data']['chassis_number'].'" and engine_number="'.$response['data']['rc_data']['vehicle_data']['engine_number'].'" and isDeleted != 1 and paymentStatus=1')->result_array();   
                        }else{
                            $getIfAlreadyAvailable = array();
                        }
                        if(count($getIfAlreadyAvailable) > 0)
                        {
                            $getUserDetail = $this->db->query('select * from user where uid='.$getIfAlreadyAvailable[0]['userId'])->result_array();
                            $isChassis = 0;
                            $isEngine = 0;
                            if($getIfAlreadyAvailable[0]['chassis_number'] == $response['data']['rc_data']['vehicle_data']['chassis_number'])
                            {
                                $isChassis = 1;
                            }
                            if($getIfAlreadyAvailable[0]['engine_number'] == $response['data']['rc_data']['vehicle_data']['engine_number'])
                            {
                                $isEngine = 1;
                            }
                            if($isChassis && $isEngine)
                            {
                                $finalresponse = array(
                                    'message' => 'Your Vehicle Engine Number(<b class="text-danger">'.$getIfAlreadyAvailable[0]['engine_number'].')</b> and Chassis Number(<b class="text-danger">'.$getIfAlreadyAvailable[0]['chassis_number'].'</b>) already registered by-<br><br>Owner Name - '.$getIfAlreadyAvailable[0]['personname'].', '.$getUserDetail[0]['state'].', '.$getUserDetail[0]['district'].'<br><br> Vehicle No.- '.$getIfAlreadyAvailable[0]['rcNumber'],
                                    'status' => 'Already Available'
                                );
                                echo json_encode($finalresponse);   
                            }else if($isChassis && !$isEngine)
                            {
                                $finalresponse = array(
                                    'message' => 'Your Vehicle Chassis Number(<b class="text-danger">'.$getIfAlreadyAvailable[0]['chassis_number'].'</b>) already registered by-<br><br>Owner Name - '.$getIfAlreadyAvailable[0]['personname'].', '.$getUserDetail[0]['state'].', '.$getUserDetail[0]['district'].'<br><br> Vehicle No.- '.$getIfAlreadyAvailable[0]['rcNumber'],
                                    'status' => 'Already Available'
                                );
                                echo json_encode($finalresponse);   
                            }else if(!$isChassis && $isEngine)
                            {
                                $finalresponse = array(
                                    'message' => 'Your Vehicle Engine Number(<b class="text-danger">'.$getIfAlreadyAvailable[0]['engine_number'].'</b>) already registered by-<br><br>Owner Name - '.$getIfAlreadyAvailable[0]['personname'].', '.$getUserDetail[0]['state'].', '.$getUserDetail[0]['district'].'<br><br> Vehicle No.- '.$getIfAlreadyAvailable[0]['rcNumber'],
                                    'status' => 'Already Available'
                                );
                                echo json_encode($finalresponse);   
                            }
                        }else{
                            
                            $personname = '';
                            if(isset($response['data']['rc_data']['owner_data']['name']))
                            {
                                $personname = $response['data']['rc_data']['owner_data']['name'];
                                $explode = (explode(' ',$personname,2)[0]);
                                if(strlen($explode) <= 3)
                                {
                                    if(strtolower($explode) == 'mr')
                                    {
                                        $personname = $explode[1];
                                    }else if(strtolower($explode) == 'mrs')
                                    {
                                        $personname = $explode[1];
                                    }else if(strtolower($explode) == 'm/s')
                                    {
                                        $personname = $explode[1];
                                    }else if(strtolower($explode) == 'ms')
                                    {
                                        $personname = $explode[1];
                                    }else{
                                        $personname = $explode[1];
                                    }   
                                }
                            }
                            if((isset($response['data']['rc_data']['issue_date'])))
                            {
                                // if($_POST['issueDate'] == ($response['data']['rc_data']['issue_date']))
                                // {
                                    $insertdata = array(
                                        'aadharNumber' => $_SESSION['aadhar_id'],
                                        'vehicleType'=> $_POST['vehicleType'],
                                        'userId' => $_SESSION['user_id'],
                                        'serial' => (isset($response['data']['rc_data']['owner_data']['serial']) ? $response['data']['rc_data']['owner_data']['serial'] : NULL),
                                        'personname' => (isset($response['data']['rc_data']['owner_data']['name']) ? $personname : NULL),
                                        'present_address' => (isset($response['data']['rc_data']['owner_data']['present_address']) ? $response['data']['rc_data']['owner_data']['present_address'] : NULL),
                                        'permanent_address' => (isset($response['data']['rc_data']['owner_data']['permanent_address']) ? $response['data']['rc_data']['owner_data']['permanent_address'] : NULL),
                                        'issue_date' => (isset($response['data']['rc_data']['issue_date']) ? $response['data']['rc_data']['issue_date'] : NULL),
                                        'expiry_date' => (isset($response['data']['rc_data']['expiry_date']) ? $response['data']['rc_data']['expiry_date'] : NULL),
                                        'registered_at' => (isset($response['data']['rc_data']['registered_at']) ? $response['data']['rc_data']['registered_at'] : NULL),
                                        'status' => (isset($response['data']['rc_data']['status']) ? $response['data']['rc_data']['status'] : NULL),
                                        'norms_type' => (isset($response['data']['rc_data']['norms_type']) ? $response['data']['rc_data']['norms_type'] : NULL),
                                        'tax_end_date' => (isset($response['data']['rc_data']['tax_end_date']) ? $response['data']['rc_data']['tax_end_date'] : NULL),
                                        'mobile' => (isset($response['data']['rc_data']['owner_data']['mobile']) ? $response['data']['rc_data']['owner_data']['mobile'] : $mobile),
                                        'puccNumber' => (isset($response['data']['rc_data']['pucc_data']['pucc_number']) ? $response['data']['rc_data']['pucc_data']['pucc_number'] : NULL),
                                        'pucc_expiry_date' => (isset($response['data']['rc_data']['pucc_data']['expiry_date']) ? $response['data']['rc_data']['pucc_data']['expiry_date'] : NULL),
                                        'policy_number' => (isset($response['data']['rc_data']['insurance_data']['policy_number']) ? $response['data']['rc_data']['insurance_data']['policy_number'] : NULL),
                                        'company' => (isset($response['data']['rc_data']['insurance_data']['company']) ? $response['data']['rc_data']['insurance_data']['company'] : NULL),
                                        'insurance_expiry_date' => (isset($response['data']['rc_data']['insurance_data']['expiry_date']) ? $response['data']['rc_data']['insurance_data']['expiry_date'] : NULL),
                                        'category' => (isset($response['data']['rc_data']['vehicle_data']['category']) ? $response['data']['rc_data']['vehicle_data']['category'] : NULL),
                                        'category_description' => (isset($response['data']['rc_data']['vehicle_data']['category_description']) ? $response['data']['rc_data']['vehicle_data']['category_description'] : NULL),
                                        'chassis_number' => (isset($response['data']['rc_data']['vehicle_data']['chassis_number']) ? $response['data']['rc_data']['vehicle_data']['chassis_number'] : NULL),
                                        'engine_number' => (isset($response['data']['rc_data']['vehicle_data']['engine_number']) ? $response['data']['rc_data']['vehicle_data']['engine_number'] : NULL),
                                        'maker_description' => (isset($response['data']['rc_data']['vehicle_data']['maker_description']) ? $response['data']['rc_data']['vehicle_data']['maker_description'] : NULL),
                                        'maker_model' => (isset($response['data']['rc_data']['vehicle_data']['maker_model']) ? $response['data']['rc_data']['vehicle_data']['maker_model'] : NULL),
                                        'fuel_type' => (isset($response['data']['rc_data']['vehicle_data']['fuel_type']) ? $response['data']['rc_data']['vehicle_data']['fuel_type'] : NULL),
                                        'color' => (isset($response['data']['rc_data']['vehicle_data']['color']) ? $response['data']['rc_data']['vehicle_data']['color'] : NULL),
                                        'cubic_capacity' => (isset($response['data']['rc_data']['vehicle_data']['cubic_capacity']) ? $response['data']['rc_data']['vehicle_data']['cubic_capacity'] : NULL),
                                        'rcNumber' => strtoupper($_POST['rcNumber']),
                                        'isVerified'=>1,
                                    );
                                    $insert = $this->db->insert('vehicles',$insertdata);
                                    if($insert)
                                    {
                                        $html = '';
                                        $_SESSION['vehicleId'] = $this->db->insert_id();
                                        $getVehicleDetails = $this->db->query('select * from vehicles where Id='.$_SESSION['vehicleId'])->result_array();
                                        $html .= '<div class="form-group mb-3"><img src="'.base_url().'assets/images/verified.webp" style="height:50px;width:100px;border: 2px solid #bdbdbd;border-radius:15px;"></div>';
                                        $html .= '<div class="row mx-0"><div class="col-lg-6 col-md-4 label ">Owner Name</div><div class="col-lg-6 col-md-8">'.$getVehicleDetails[0]['personname'].'</div></div><hr>';
                                        $html .= '<div class="row mx-0"><div class="col-lg-6 col-md-4 label">Vehicle Type</div><div class="col-lg-6 col-md-8">'.$getVehicleDetails[0]["vehicleType"].'</div></div><hr>';
                                        $html .= '<div class="row mx-0"><div class="col-lg-6 col-md-4 label">Vehicle No.</div><div class="col-lg-6 col-md-8 text-uppercase text-success">'.$getVehicleDetails[0]['rcNumber'].'</div></div><hr>';
                                        $html .= '<div class="row mx-0"><div class="col-lg-6 col-md-4 label">Chassis Number</div><div class="col-lg-6 col-md-8">'.$getVehicleDetails[0]['chassis_number'].'</div></div><hr>';
                                        $html .= '<div class="row mx-0"><div class="col-lg-6 col-md-4 label">Engine Number</div><div class="col-lg-6 col-md-8">'.$getVehicleDetails[0]['engine_number'].'</div></div><hr>';
                                        $html .= '<div class="row mx-0"><div class="col-lg-6 col-md-4 label">Company Name</div><div class="col-lg-6 col-md-8">'.$getVehicleDetails[0]['company'].'</div></div><hr>';
                                        $html .= '<div class="row mx-0"><div class="col-lg-6 col-md-4 label">Model Number</div><div class="col-lg-6 col-md-8">'.$getVehicleDetails[0]['maker_model'].'</div></div><hr>';
                                        $html .= '<div class="row mx-0"><div class="col-lg-6 col-md-4 label">Present Address</div><div class="col-lg-6 col-md-8">'.$getVehicleDetails[0]['present_address'].'</div></div><hr>';
                                        $html .= '<div class="row mx-0"><div class="col-lg-6 col-sm-12 col-md-auto mb-3"><a href="javascript:void(0)" class="btn btn-success btn-style-green w-100" id="okbtn" onclick="showVehicleDoc()">Continue</a></div><div class="col-lg-6 col-sm-12 col-md-auto mb-3"><a href="javascript:void(0)" class="btn btn-danger btn-style-red w-100" id="resetbtn" onclick="confirmCancel(this)">Cancel</a></div></div>';
                                        $finalresponse = array(
                                            'html' => $html,
                                            'status' => 'success'
                                        );
                                        echo json_encode($finalresponse);   
                                    }else{
                                        $finalresponse = array(
                                            'message' => 'Something Went Wrong',
                                            'status' => 'error'
                                        );
                                        echo json_encode($finalresponse);   
                                    }
                                //}
                                // else{
                                //     $finalresponse = array(
                                //         'message' => 'Issue date is invalid',
                                //         'status' => 'error'
                                //     );
                                //     echo json_encode($finalresponse);
                                // }   
                            }
                        }
                    }else{
                        $finalresponse = array(
                            'message' => 'Owner name is not matched',
                            'status' => 'error'
                        );
                        echo json_encode($finalresponse);       
                    }
                }else
                {
                    $finalresponse = array(
                        'message' => $response['data']['message'],
                        'status' => 'error'
                    );
                    echo json_encode($finalresponse);
                }
            }else{
                $finalresponse = array(
                    'message' => $response['error']['message'],
                    'status' => 'error'
                );
                echo json_encode($finalresponse);
            }
            curl_close($curl);
        }
    }
    
    public function index(){
        if(isset($_SESSION['landingMob'])){
			$getDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
			if($getDetail[0]['finalStepStatus'] == 'success')
			{
				$page_data['page_name'] = 'dashboard';
				$page_data['title'] = 'Dashboard';
				$this->load->view('nonkyc/index', $page_data);
			}else{
				redirect(base_url().'step1-guest','refresh');
			}
          } else {
             redirect('login','refresh');
          }
    }

    function funnel_box()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'funnel_box';
            $page_data['title'] = 'funnel_box';
            $this->load->view('nonkyc/index', $page_data);
          } else {
             redirect('mobile-login','refresh');
          }
    }

    function deleteFunnelFamilyPhoto($id)
    {
        if($_GET['id'])
        {
            $getOldData = $this->db->query('select * from funnelfamilyphotos where Id='.$id)->result_array();
            if(count($getOldData) > 0)
            {
                foreach($getOldData as $k=>$v)
                {
                    unlink($v['photourl']);
                }
                $deleteold = $this->db->query('delete from funnelfamilyphotos where Id='.$id);
            }   
        }else{
            $getOldData = $this->db->query('select * from funnelfamilyphotos where Id='.$id)->result_array();
            if(count($getOldData) > 0)
            {
                foreach($getOldData as $k=>$v)
                {
                    unlink($v['photourl']);
                }
                $deleteold = $this->db->query('delete from funnelfamilyphotos where Id='.$id);
            }
        }
    }

    function deleteFaceMatchFromProfile()
    {
        if($_POST['index'] == 1)
        {
            $getPrevious = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
            unlink($getPrevious[0]['facematchphoto1']);
            $this->db->query('update user set facematchphoto1=NULL,imageId1=NULL where uid='.$_SESSION['user_id']);
        }else{
            $getPrevious = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
            unlink($getPrevious[0]['facematchphoto2']);
            $this->db->query('update user set facematchphoto2=NULL,imageId2=NULL where uid='.$_SESSION['user_id']);
        }
    }

    function deleteFunnelFamilyPersonMobile()
    {
        if(isset($_POST['id']))
        {
            $getDetail = $this->db->query('select * from funnelfamily where id='.$_POST['id'])->result_array();
            if($_POST['setting'] == 1)
            {
                if($getDetail[0]['otp'] == $_POST['otp'])
                {
                    if($_POST['index'] == 2)
                    {
                        $update = $this->db->query('update funnelfamily set well2=NULL where id='.$_POST['id']);   
                    }else if($_POST['index'] == 3)
                    {
                        $update = $this->db->query('update funnelfamily set well3=NULL where id='.$_POST['id']);   
                    }
                    else{
                        $update = $this->db->query('update funnelfamily set well1=NULL where id='.$_POST['id']);   
                    }
                    if($update)
                    {
                        $response = array(
                            'status' => 'success',
                            'message' => 'Mobile Number Deleted Successfully'
                        );
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                    }
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Invalid OTP'
                    );
                    echo json_encode($response);   
                }   
            }else{
                if($_POST['index'] == 2)
                {
                    $update = $this->db->query('update funnelfamily set well2=NULL where id='.$_POST['id']);   
                }else if($_POST['index'] == 3)
                {
                    $update = $this->db->query('update funnelfamily set well3=NULL where id='.$_POST['id']);   
                }
                else{
                    $update = $this->db->query('update funnelfamily set well1=NULL where id='.$_POST['id']);   
                }
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Mobile Number Deleted Successfully'
                    );
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                }
                echo json_encode($response);   
            }   
        }else{
            $getDetail = $this->db->query('select * from funnelfamily where id='.$_SESSION['funnelFamId'])->result_array();
            if($_POST['index'] == 2)
            {
                $update = $this->db->query('update funnelfamily set well2=NULL where id='.$_SESSION['funnelFamId']);   
            }else if($_POST['index'] == 3)
            {
                $update = $this->db->query('update funnelfamily set well3=NULL where id='.$_SESSION['funnelFamId']);   
            }
            else{
                $update = $this->db->query('update funnelfamily set well1=NULL where id='.$_SESSION['funnelFamId']);   
            }
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'Mobile Number Deleted Successfully'
                );
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
            }
            echo json_encode($response);   
        }
    }

    function deleteFaceMatchFromFunnelFamily()
    {
        if($_POST['index'] == 1)
        {
            $getPrevious = $this->db->query('select * from funnelfamily where id='.$_POST['id'])->result_array();
            unlink($getPrevious[0]['Photo1']);
            $this->db->query('update funnelfamily set Photo1=NULL,imageId1=NULL where id='.$_POST['id']);
        }else{
            $getPrevious = $this->db->query('select * from funnelfamily where id='.$_POST['id'])->result_array();
            unlink($getPrevious[0]['Photo2']);
            $this->db->query('update funnelfamily set Photo2=NULL,imageId2=NULL where id='.$_POST['id']);
        }
    }

    function deleteFaceMatchFromLapata()
    {
        if($_POST['index'] == 1)
        {
            $getPrevious = $this->db->query('select * from unknown_person where id='.$_POST['id'])->result_array();
            unlink($getPrevious[0]['Photo1']);
            $this->db->query('update unknown_person set Photo1=NULL,imageId1=NULL where id='.$_POST['id']);
        }else{
            $getPrevious = $this->db->query('select * from unknown_person where id='.$_POST['id'])->result_array();
            unlink($getPrevious[0]['Photo2']);
            $this->db->query('update unknown_person set Photo2=NULL,imageId2=NULL where id='.$_POST['id']);
        }   
    }

    function checkPersonOtp()
    {
        $getPreviousDetail = $this->db->query('select * from checkperson where Id="'.$_SESSION['checkId'].'"')->result_array();
        if($getPreviousDetail[0]['otp'] == $_POST['otp'])
        {
            $response = array(
                'status' => 'success',
            );
            echo json_encode($response);    
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Otp Invalid',
            );
            echo json_encode($response);
        }
    }
    
    function resendCheckVehicleOtp()
    {
        // $otp = '1234';
        $string = '0123456789';
        $string_shuffled = str_shuffle($string);
        $otp = substr($string_shuffled, 1, 4);
        $this->sendTextLocalOtp($_POST['mobile'],$_POST['mobile'],$otp);
        $this->db->where('Id',$_SESSION['checkVehicleId']);
        $update = $this->db->update('searchVehicle',array('otp'=>$otp));
        if($update)
        {
            $response = array(
                'status' => 'success',
                'message' => 'OTP Sent Successfully'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }
    }

    function resendCheckOtp()
    {
        // $otp = '1234';
        $string = '0123456789';
        $string_shuffled = str_shuffle($string);
        $otp = substr($string_shuffled, 1, 4);
        $sendStatus = $this->sendMessage91Otp($_POST['mobile'],$_POST['mobile'],$otp,$this->config->item('login_template_id'));
        if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
            $response = [
                'status' => 'error',
                'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
            ];
            echo json_encode($response);
            die();
        }
        $this->db->where('Id',$_SESSION['checkId']);
        $update = $this->db->update('checkperson',array('otp'=>$otp));
        if($update)
        {
            $response = array(
                'status' => 'success',
                'message' => 'OTP Sent Successfully'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }
    }
    
    function checkVehicle2($para = '')
    {
        if(isset($_SESSION['landingMob']))
        {
            if($para == '')
            {
                if(isset($_SESSION['checkVehicleId']))
                {
                    $page_data['checkDetail'] = $this->db->query('select * from searchVehicle where Id='.$_SESSION['checkVehicleId'])->result_array();
                    if($page_data['checkDetail'][0]['searchType'] == 'vehicleNumber')
                    {
                        $page_data['vehicledetail'] = $this->db->query('select * from vehicles where rcNumber="'.$page_data['checkDetail'][0]['idNumber'].'"')->result_array();   
                    }
                    if($page_data['checkDetail'][0]['searchType'] == 'chassisNumber')
                    {
                        $page_data['vehicledetail'] = $this->db->query('select * from vehicles where chassis_number="'.$page_data['checkDetail'][0]['idNumber'].'"')->result_array();   
                    }
                    if($page_data['checkDetail'][0]['searchType'] == 'engineNumber')
                    {
                        $page_data['vehicledetail'] = $this->db->query('select * from vehicles where engine_number="'.$page_data['checkDetail'][0]['idNumber'].'"')->result_array();
                    }
                    $page_data['control'] = 'user';
                    $page_data['title'] = 'Search Vehicle Detail';
                    $this->load->view('NonKyc/common/header',$page_data); 
                    $this->load->view('NonKyc/checkVehicle2');
                    $this->load->view('NonKyc/common/footer');    
                }else{
                    redirect($this->getSettings('noVehicleId'),'refresh');
                }
            }else
            {

            }
        }else{
            redirect(base_url().'login','refresh');
        }
    }

    function checkstep2($para = '')
    {
        if(isset($_SESSION['landingMob']))
        {
            if($para == '')
            {
                if(isset($_SESSION['checkId']))
                {
                    $page_data['checkDetail'] = $this->db->query('select * from checkperson where Id='.$_SESSION['checkId'])->result_array();
                    if($page_data['checkDetail'][0]['idType'] == 'aadhar')
                    {
                        $page_data['persondetail'] = $this->db->query('select * from user where aadhar_id="'.$page_data['checkDetail'][0]['idNumber'].'"')->result_array();   
                    }
                    if($page_data['checkDetail'][0]['idType'] == 'pan')
                    {
                        $getDetail = $this->db->query('select * from panlist where panNumber="'.$page_data['checkDetail'][0]['idNumber'].'"')->result_array();
                        $page_data['persondetail'] = $this->db->query('select * from user where uid='.$getDetail[0]['userId'])->result_array();   
                    }
                    if($page_data['checkDetail'][0]['idType'] == 'voter')
                    {
                        $getDetail = $this->db->query('select * from voterslist where voterNumber="'.$page_data['checkDetail'][0]['idNumber'].'"')->result_array();
                        $page_data['persondetail'] = $this->db->query('select * from user where uid='.$getDetail[0]['userId'])->result_array();   
                    }
                    if($page_data['checkDetail'][0]['idType'] == 'dl')
                    {
                        $getDetail = $this->db->query('select * from dllist where dlNumber="'.$page_data['checkDetail'][0]['idNumber'].'"')->result_array();
                        $page_data['persondetail'] = $this->db->query('select * from user where uid='.$getDetail[0]['userId'])->result_array();   
                    }
                    $page_data['control'] = 'user';
                    $page_data['title'] = 'Search Person Detail';
                    $this->load->view('NonKyc/common/header',$page_data); 
                    $this->load->view('NonKyc/checkstep2');
                    $this->load->view('NonKyc/common/footer'); 
                }else{
                    redirect($this->getSettings('noVehicleId'),'refresh');
                }
            }else
            {

            }   
        }else{
            redirect(base_url().'login','refresh');
        }
    }
    
    function completeFaceMatchResults()
    {
        if(isset($_SESSION['landingMob']))
        {
            if(isset($_SESSION['searchFaceIdAfterLogin']))
            {
                $page_data['control'] = 'user';
                $page_data['title'] = 'Face Match Results';
                $page_data['page_name'] = 'completeFaceMatchResults';
                $this->load->view('nonkyc/index', $page_data); 
            }else{
                redirect('NonKyc/search_person_details?pn=7','refresh');
            }
        }else{
            redirect(base_url().'login','refresh');
        }
    }
    
    function completeWithoutFaceMatchResults()
    {
        if(isset($_SESSION['landingMob']))
        {
            if(isset($_SESSION['searchFaceId']))
            {
                $getDetails = $this->db->query('select * from searchfilterhistory where Id='.$_SESSION['searchFaceId'])->result_array();
                if($getDetails[0]['matchedUserIds'] != NULL)
                {
                    // $page_data['userIds'] = explode(',',$getDetails[0]['matchedUserIds']);   
                    $page_data['userIds'] = array();
                }else{
                    $page_data['userIds'] = array();
                }
                if($getDetails[0]['matchedMissingIds'] != NULL)
                {
                    $page_data['missingIds'] = explode(',',$getDetails[0]['matchedMissingIds']);   
                }else{
                    $page_data['missingIds'] = array();
                }
                $page_data['control'] = 'user';
                $page_data['title'] = 'Without Face Match Results';
                $this->load->view('NonKyc/common/header',$page_data); 
                $this->load->view('NonKyc/completeWithoutFaceMatchResults');
                $this->load->view('NonKyc/common/footer'); 
            }else{
                redirect('NonKyc/searchFacePerson','refresh');
            }
        }else{
            redirect(base_url().'login','refresh');
        }
    }
    
    function searchFacePerson($para = '')
    {
        if($para == '')
        {
            if(isset($_SESSION['landingMob']))
            {
                $page_data['control'] = 'user';
                $page_data['pn'] = 1;
                if(isset($_GET['pn']))
                {
                    $page_data['pn'] = $_GET['pn'];    
                }
                $page_data['title'] = 'Search By Person';
                $this->load->view('NonKyc/common/header',$page_data); 
                $this->load->view('NonKyc/searchFacePerson');
                $this->load->view('NonKyc/common/footer'); 
            }else{
                redirect(base_url().'login','refresh');
            }
        }else
        {
            if($para == 'step1')
            {
                $getFinalId = $this->db->query('select max(Id) as Id from searchfilterhistory')->result_array();
                if($getFinalId[0]['Id'] != NULL)
                {
                    $_SESSION['searchFaceId'] = $getFinalId[0]['Id'] + 1;
                }else{
                    $_SESSION['searchFaceId'] = 1;
                }
                $_SESSION['searchType'] = $_POST['type'];
                $insertdata = array(
                    'Id' => $_SESSION['searchFaceId'],
                    'type' => $_POST['type'],
                );
                $insert = $this->db->insert('searchfilterhistory',$insertdata);
            }
            if($para == 'step2')
            {
                $getPreviousDetail = $this->db->query('select * from searchfilterhistory where Id='.$_SESSION['searchFaceId'])->result_array();
                if($getPreviousDetail[0]['otp'] == $_POST['otp'])
                {
                    $updatedata = array(
                        'mobileNumber' => $_POST['mobileNumber'],
                    );
                    $this->db->where('Id',$_SESSION['searchFaceId']);
                    $update = $this->db->update('searchfilterhistory',$updatedata);
                    $response['status'] = 'success';
                }else{
                    $response['status'] = 'error';
                    $response['message'] = 'Invalid OTP';
                }
                echo json_encode($response);
            }
            if($para == 'step3')
            {
                $getPreviousDetail = $this->db->query('select * from searchfilterhistory where Id='.$_SESSION['searchFaceId'])->result_array();
                $data = $_POST["mainPhotoSelected"];
                $image_array_1 = explode(";", $data);
                
                $image_array_2 = explode(",", $image_array_1[1]);
                
                $data = base64_decode($image_array_2[1]);
                
                $newImagePath = 'upload/searchFacePerson/'.time().''.rand(0,10000).'.webp';
                
                file_put_contents($newImagePath, $data);
                $updatedata = array(
                    'mainPhoto' => $newImagePath
                );
                $this->db->where('Id',$_SESSION['searchFaceId']);
                $update = $this->db->update('searchfilterhistory',$updatedata);
                unlink($filename);
                echo json_encode($response);
            }
            if($para == 'step4')
            {
                if($_POST['state'] != 'All')
                {
                    $this->db->where('fatherstate',$_POST['state']);   
                    if($_POST['district'] != '' || $_POST['district'] != 'All')
                    {
                        $this->db->where('fatherdistrict',$_POST['district']);   
                    }
                    if($_POST['city'] != '' || $_POST['city'] != 'All')
                    {
                        $this->db->like('fathercity',$_POST['city'],'both');   
                    }
                }
                $this->db->like('missinggender',$_POST['gender'],'after');
                if($_POST['religion'] != '')
                {
                    $this->db->where('missingreligion',$_POST['religion']);
                }
                if($_POST['personName'] != '')
                {
                    $this->db->like('missingname',$_POST['personName'],'both');
                }
                $this->db->where('isFound =',0);
                $getMissingPerson = $this->db->get('missingperson')->result_array();
                $id = array();
                if(count($getMissingPerson) > 0)
                {
                    foreach($getMissingPerson as $k=>$v)
                    {
                        if($_POST['height'] != '')
                        {
                            $subcategories = array($_POST['height'],$_POST['age']);   
                        }else{
                            $subcategories = array($_POST['age']);
                        }
                        $this->db->where_in('userSubCategory',$subcategories);
                        $this->db->where('personId',$v['Id']);
                        $this->db->from('userproperty');
                        $getCategorialData = $this->db->get()->result_array();
                        array_push($id,$v['Id']);
                    }
                    $updatedata = array(
                        'matchedMissingIds' => implode(',',$id)
                    );
                    $this->db->where('Id',$_SESSION['searchFaceId']);
                    $update = $this->db->update('searchfilterhistory',$updatedata);
                }
                $this->db->like('gender',$_POST['gender'],'after');
                if($_POST['religion'] != '')
                {
                    $this->db->where('religion',$_POST['religion']);
                }
                if($_POST['personName'] != '')
                {
                    $this->db->like('aadharname',$_POST['personName'],'both');
                }
                $getUserDetail = $this->db->get('user')->result_array();
                $userId = array();
                $finalResponse = array(
                    'status' => 'success',
                    'count' => (count($userId) + count($id))
                );
                echo json_encode($finalResponse);
            }
        }
    }
    
    function sendCheckVehicleOtp()
    {
        $string = '0123456789';
        $string_shuffled = str_shuffle($string);
        $otp = substr($string_shuffled, 1, 4);
        $this->sendTextLocalOtp($_POST['mobile'],$_POST['mobile'],$otp);
        $getFinalId = $this->db->query('select max(Id) as Id from searchVehicle')->result_array();
        if($getFinalId[0]['Id'] != NULL)
        {
            $_SESSION['checkVehicleId'] = $getFinalId[0]['Id'] + 1;
        }else{
            $_SESSION['checkVehicleId'] = 1;
        }
        $insert = $this->db->insert('searchVehicle',array('otp' => $otp,'Id' => $_SESSION['checkVehicleId']));
        if($insert)
        {
            $response = array(
                'status' => 'success',
                'message' => 'OTP Sent Successfully'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }
    }
    
    function sendCheckOtp()
    {
        $string = '0123456789';
        $string_shuffled = str_shuffle($string);
        $otp = substr($string_shuffled, 1, 4);
        $sendStatus = $this->sendMessage91Otp($_POST['mobile'],$_POST['mobile'],$otp,$this->config->item('login_template_id'));
        if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
            $response = [
                'status' => 'error',
                'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
            ];
            echo json_encode($response);
            die();
        }
        $getFinalId = $this->db->query('select max(Id) as Id from checkperson')->result_array();
        if($getFinalId[0]['Id'] != NULL)
        {
            $_SESSION['checkId'] = $getFinalId[0]['Id'] + 1;
        }else{
            $_SESSION['checkId'] = 1;
        }
        $insert = $this->db->insert('checkperson',array('otp' => $otp,'Id' => $_SESSION['checkId']));
        if($insert)
        {
            $response = array(
                'status' => 'success',
                'message' => 'OTP Sent Successfully'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }
    }
    
    function checkInactiveVehicleIdAfterLoginOld()
    {
        $data = $_POST["photo"];
        $image_array_1 = explode(";", $data);
        $split1 = explode('data:image/',$image_array_1[0]);
        $image_array_2 = explode(",", $image_array_1[1]);
        $data = base64_decode($image_array_2[1]);
        $imageId = time().''.rand(0,10000);
        $newImagePath = 'upload/searchVehicle/'.$imageId.'.'.$split1[1];
        file_put_contents($newImagePath, $data);
        $config['image_library'] = 'gd2';  
        $config['source_image'] = $newImagePath;  
        $config['create_thumb'] = FALSE;  
        $config['maintain_ratio'] = true;  
        $config['quality'] = '60%';  
        $config['width'] = 320;  
        $config['height'] = 240;  
        $config['new_image'] = $newImagePath;  
        $this->load->library('image_lib', $config);  
        $this->image_lib->resize(); 
        $this->load->library('Image_autorotate',$newImagePath);
        $this->image_lib->clear();
        $personName = '';
        $isVerified = 'No';
        $isVisible = 0;
        $isUserFound = 0;
        $isMissing = 0;
        $isAadharCorrect = 0;
        $idNumber = '';
        $confidence0 = 0;
        $confidence1 = 0;
        $confidence2 = 0;
        $faceResponse = array();
        $personName = '';
        if($_POST['searchType'] == 'vehicleNumber')
        {
            $idNumber = $_POST['idNumber'];
            $getIfVehicleAvailable = $this->db->query('select * from vehicles where rcNumber="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isdeleted!=1 and paymentStatus=1')->result_array();
            $userphoto = '';
            if(count($getIfVehicleAvailable) > 0)
            {
                $getVehiclePhotos = $this->db->query('select * from vehicleFaceMatch where vehicleId='.$getIfVehicleAvailable[0]['Id'])->result_array();
                if(count($getVehiclePhotos) > 0)
                {
                    foreach($getVehiclePhotos as $k=>$v)
                    {
                        $curl = curl_init();
                        curl_setopt_array($curl, array(
                          CURLOPT_URL => 'fmatch.shammtech.in',
                          CURLOPT_RETURNTRANSFER => true,
                          CURLOPT_ENCODING => '',
                          CURLOPT_MAXREDIRS => 10,
                          CURLOPT_TIMEOUT => 0,
                          CURLOPT_FOLLOWLOCATION => true,
                          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                          CURLOPT_CUSTOMREQUEST => 'POST',
                          CURLOPT_POSTFIELDS => 'image1='.base_url().''.$v['facematchphoto'].'&image2='.base_url().''.$newImagePath,
                          CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/x-www-form-urlencoded'
                          ),
                        ));
                        $response = json_decode(curl_exec($curl),true);
                        $response['image'] = base_url().''.$newImagePath;
                        $faceResponse = json_encode($response);
                        if($response['message'] != 'Internal Server Error')
                        {
                            if($k == 0)
                            {
                                $confidence0 = $response['confidence'];      
                            }elseif($k == 1){
                                $confidence1 = $response['confidence'];      
                            }else{
                                $confidence2 = $response['confidence'];      
                            }
                        }   
                    }
                    $getUserDetail = $this->db->query('select * from user where uid='.$getIfVehicleAvailable[0]['userId'])->result_array();
                    $isAadharCorrect = 1;
                    $isVisible = $getIfVehicleAvailable[0]['visibility'];
                    $isVerified = 1;
                    $isUserFound = 1;
                    $personName = $getUserDetail[0]['aadharname'];
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'No Face Match Photo Available'
                    );
                    echo json_encode($response);
                    die();
                }
            }
            $getMissingVehicle = $this->db->query('select * from missingvehicle where rcNumber="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isFound !=1')->result_array();
            if(count($getMissingVehicle) > 0)
            {
                $isAadharCorrect = 1;
                $isMissing = 1;
                $personName = $getMissingVehicle[0]['ownerName'];
            }
            if($confidence0 > 83 || $confidence1 > 83 || $confidence2 > 83)
            {
                $insertdata = array(
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'idNumber' => $_POST['idNumber'],
                    'vehicleType' => $_POST['vehicleType'],
                    'searchType' => $_POST['searchType'],
                );
                $this->db->where('Id',$_SESSION['vehicleLoggedInId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                if($update)
                {
                    if($isAadharCorrect == 1)
                    {
                        $response = array(
                            'status' => 'success',
                            'personName' => $personName,
                            'isAadharCorrect' => $isAadharCorrect,
                            'message' => 'Vehicle Found',
                            'isVisible' => $isVisible,
                            'isMissing' => $isMissing,
                            'isVerified' => $isVerified,
                            'isRegistered' => $isUserFound,
                        );
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $insertdata = array(
                    'inActivePhoto' => $newImagePath,
                    'response' => $faceResponse
                );   
                $this->db->where('Id',$_SESSION['vehicleLoggedInId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['searchType'] == 'engineNumber')
        {
            $idNumber = $_POST['idNumber'];
            $getIfVehicleAvailable = $this->db->query('select * from vehicles where engine_number="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isdeleted!=1 and paymentStatus=1')->result_array();
            $userphoto = '';
            if(count($getIfVehicleAvailable) > 0)
            {
                $getVehiclePhotos = $this->db->query('select * from vehicleFaceMatch where vehicleId='.$getIfVehicleAvailable[0]['Id'])->result_array();
                if(count($getVehiclePhotos) > 0)
                {
                    foreach($getVehiclePhotos as $k=>$v)
                    {
                        $curl = curl_init();
                        curl_setopt_array($curl, array(
                          CURLOPT_URL => 'fmatch.shammtech.in',
                          CURLOPT_RETURNTRANSFER => true,
                          CURLOPT_ENCODING => '',
                          CURLOPT_MAXREDIRS => 10,
                          CURLOPT_TIMEOUT => 0,
                          CURLOPT_FOLLOWLOCATION => true,
                          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                          CURLOPT_CUSTOMREQUEST => 'POST',
                          CURLOPT_POSTFIELDS => 'image1='.base_url().''.$v['facematchphoto'].'&image2='.base_url().''.$newImagePath,
                          CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/x-www-form-urlencoded'
                          ),
                        ));
                        $response = json_decode(curl_exec($curl),true);
                        $response['image'] = base_url().''.$newImagePath;
                        $faceResponse = json_encode($response);
                        if($response['message'] != 'Internal Server Error')
                        {
                            if($k == 0)
                            {
                                $confidence0 = $response['confidence'];      
                            }elseif($k == 1){
                                $confidence1 = $response['confidence'];      
                            }else{
                                $confidence2 = $response['confidence'];      
                            }
                        }   
                    }
                    $getUserDetail = $this->db->query('select * from user where uid='.$getIfVehicleAvailable[0]['userId'])->result_array();
                    $isAadharCorrect = 1;
                    $isVisible = $getIfVehicleAvailable[0]['visibility'];
                    $isVerified = 1;
                    $isUserFound = 1;
                    $personName = $getUserDetail[0]['aadharname'];
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'No Face Match Photo Available'
                    );
                    echo json_encode($response);
                    die();
                }
            }
            $getMissingVehicle = $this->db->query('select * from missingvehicle where engineNumber="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isFound !=1')->result_array();
            if(count($getMissingVehicle) > 0)
            {
                $isAadharCorrect = 1;
                $isMissing = 1;
                $personName = $getMissingVehicle[0]['ownerName'];
            }
            if($confidence0 > 83 || $confidence1 > 83 || $confidence2 > 83)
            {
                $insertdata = array(
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'idNumber' => $_POST['idNumber'],
                    'vehicleType' => $_POST['vehicleType'],
                    'searchType' => $_POST['searchType'],
                );
                $this->db->where('Id',$_SESSION['vehicleLoggedInId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                if($update)
                {
                    if($isAadharCorrect == 1)
                    {
                        $response = array(
                            'status' => 'success',
                            'personName' => $personName,
                            'isAadharCorrect' => $isAadharCorrect,
                            'message' => 'Vehicle Found',
                            'isVisible' => $isVisible,
                            'isMissing' => $isMissing,
                            'isVerified' => $isVerified,
                            'isRegistered' => $isUserFound,
                        );
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $insertdata = array(
                    'inActivePhoto' => $newImagePath,
                    'response' => $faceResponse
                );   
                $this->db->where('Id',$_SESSION['vehicleLoggedInId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['searchType'] == 'chassisNumber')
        {
            $idNumber = $_POST['idNumber'];
            $getIfVehicleAvailable = $this->db->query('select * from vehicles where chassis_number="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isdeleted!=1 and paymentStatus=1')->result_array();
            $userphoto = '';
            if(count($getIfVehicleAvailable) > 0)
            {
                $getVehiclePhotos = $this->db->query('select * from vehicleFaceMatch where vehicleId='.$getIfVehicleAvailable[0]['Id'])->result_array();
                if(count($getVehiclePhotos) > 0)
                {
                    foreach($getVehiclePhotos as $k=>$v)
                    {
                        $curl = curl_init();
                        curl_setopt_array($curl, array(
                          CURLOPT_URL => 'fmatch.shammtech.in',
                          CURLOPT_RETURNTRANSFER => true,
                          CURLOPT_ENCODING => '',
                          CURLOPT_MAXREDIRS => 10,
                          CURLOPT_TIMEOUT => 0,
                          CURLOPT_FOLLOWLOCATION => true,
                          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                          CURLOPT_CUSTOMREQUEST => 'POST',
                          CURLOPT_POSTFIELDS => 'image1='.base_url().''.$v['facematchphoto'].'&image2='.base_url().''.$newImagePath,
                          CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/x-www-form-urlencoded'
                          ),
                        ));
                        $response = json_decode(curl_exec($curl),true);
                        $response['image'] = base_url().''.$newImagePath;
                        $faceResponse = json_encode($response);
                        if($response['message'] != 'Internal Server Error')
                        {
                            if($k == 0)
                            {
                                $confidence0 = $response['confidence'];      
                            }elseif($k == 1){
                                $confidence1 = $response['confidence'];      
                            }else{
                                $confidence2 = $response['confidence'];      
                            }
                        }   
                    }
                    $getUserDetail = $this->db->query('select * from user where uid='.$getIfVehicleAvailable[0]['userId'])->result_array();
                    $isAadharCorrect = 1;
                    $isVisible = $getIfVehicleAvailable[0]['visibility'];
                    $isVerified = 1;
                    $isUserFound = 1;
                    $personName = $getUserDetail[0]['aadharname'];
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'No Face Match Photo Available'
                    );
                    echo json_encode($response);
                    die();
                }
            }
            $getMissingVehicle = $this->db->query('select * from missingvehicle where chasisNumber="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isFound !=1')->result_array();
            if(count($getMissingVehicle) > 0)
            {
                $isAadharCorrect = 1;
                $isMissing = 1;
                $personName = $getMissingVehicle[0]['ownerName'];
            }
            if($confidence0 > 83 || $confidence1 > 83 || $confidence2 > 83)
            {
                $insertdata = array(
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'idNumber' => $_POST['idNumber'],
                    'vehicleType' => $_POST['vehicleType'],
                    'searchType' => $_POST['searchType'],
                );
                $this->db->where('Id',$_SESSION['vehicleLoggedInId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                if($update)
                {
                    if($isAadharCorrect == 1)
                    {
                        $response = array(
                            'status' => 'success',
                            'personName' => $personName,
                            'isAadharCorrect' => $isAadharCorrect,
                            'message' => 'Vehicle Found',
                            'isVisible' => $isVisible,
                            'isMissing' => $isMissing,
                            'isVerified' => $isVerified,
                            'isRegistered' => $isUserFound,
                        );
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $insertdata = array(
                    'inActivePhoto' => $newImagePath,
                    'response' => $faceResponse
                );   
                $this->db->where('Id',$_SESSION['vehicleLoggedInId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }   
    }
    
    function checkInactiveVehicleIdAfterLogin()
    {
        $data = $_POST["photo"];
        $image_array_1 = explode(";", $data);
        $split1 = explode('data:image/',$image_array_1[0]);
        $image_array_2 = explode(",", $image_array_1[1]);
        $data = base64_decode($image_array_2[1]);
        $imageId = time().''.rand(0,10000);
        $newImagePath = 'upload/searchVehicle/'.$imageId.'.'.$split1[1];
        file_put_contents($newImagePath, $data);
        $config['image_library'] = 'gd2';  
        $config['source_image'] = $newImagePath;  
        $config['create_thumb'] = FALSE;  
        $config['maintain_ratio'] = true;  
        $config['quality'] = '60%';  
        $config['width'] = 320;  
        $config['height'] = 240;  
        $config['new_image'] = $newImagePath;  
        $this->load->library('image_lib', $config);  
        $this->image_lib->resize(); 
        $this->load->library('Image_autorotate',$newImagePath);
        $this->image_lib->clear();
        $personName = '';
        $isVerified = 'No';
        $isVisible = 0;
        $isUserFound = 0;
        $isMissing = 0;
        $isAadharCorrect = 0;
        $idNumber = '';
        $confidence0 = 0;
        $confidence1 = 0;
        $confidence2 = 0;
        $faceResponse = array();
        $personName = '';
        if($_POST['searchType'] == 'vehicleNumber')
        {
            $idNumber = $_POST['idNumber'];
            $getIfVehicleAvailable = $this->db->query('select * from vehicles where rcNumber="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isdeleted!=1 and paymentStatus=1')->result_array();
            $userphoto = '';
            if(count($getIfVehicleAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcavehicle",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        $getVehiclePhotos = $this->db->query('select * from vehicleFaceMatch where vehicleId='.$getIfVehicleAvailable[0]['Id'])->result_array();
                        if(count($getVehiclePhotos) > 0)
                        {
                            foreach($getVehiclePhotos as $k=>$v)
                            {
                                if(in_array($v['imageId'],$faceresponse['output']))
                                {
                                    $confidence0 = 85;
                                }
                            }
                        }
                        if($conifdence0 == 85)
                        {
                            $getUserDetail = $this->db->query('select * from user where uid='.$getIfVehicleAvailable[0]['userId'])->result_array();
                            $isAadharCorrect = 1;
                            $isVisible = $getIfVehicleAvailable[0]['visibility'];
                            $isVerified = 1;
                            $isUserFound = 1;
                            $personName = $getUserDetail[0]['aadharname'];
                        }
                    }
                }
            }
            $getMissingVehicle = $this->db->query('select * from missingvehicle where rcNumber="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isFound !=1')->result_array();
            if(count($getMissingVehicle) > 0)
            {
                $isAadharCorrect = 1;
                $isMissing = 1;
                $personName = $getMissingVehicle[0]['ownerName'];
            }
            if($confidence0 > 83)
            {
                $insertdata = array(
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'idNumber' => $_POST['idNumber'],
                    'vehicleType' => $_POST['vehicleType'],
                    'searchType' => $_POST['searchType'],
                );
                $this->db->where('Id',$_SESSION['vehicleLoggedInId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                if($update)
                {
                    if($isAadharCorrect == 1)
                    {
                        $response = array(
                            'status' => 'success',
                            'personName' => $personName,
                            'isAadharCorrect' => $isAadharCorrect,
                            'message' => 'Vehicle Found',
                            'isVisible' => $isVisible,
                            'isMissing' => $isMissing,
                            'isVerified' => $isVerified,
                            'isRegistered' => $isUserFound,
                        );
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $insertdata = array(
                    'inActivePhoto' => $newImagePath,
                );   
                $this->db->where('Id',$_SESSION['vehicleLoggedInId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['searchType'] == 'engineNumber')
        {
            $idNumber = $_POST['idNumber'];
            $getIfVehicleAvailable = $this->db->query('select * from vehicles where engine_number="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isdeleted!=1 and paymentStatus=1')->result_array();
            $userphoto = '';
            if(count($getIfVehicleAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcavehicle",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        $getVehiclePhotos = $this->db->query('select * from vehicleFaceMatch where vehicleId='.$getIfVehicleAvailable[0]['Id'])->result_array();
                        if(count($getVehiclePhotos) > 0)
                        {
                            foreach($getVehiclePhotos as $k=>$v)
                            {
                                if(in_array($v['imageId'],$faceresponse['output']))
                                {
                                    $confidence0 = 85;
                                }
                            }
                        }
                        if($conifdence0 == 85)
                        {
                            $getUserDetail = $this->db->query('select * from user where uid='.$getIfVehicleAvailable[0]['userId'])->result_array();
                            $isAadharCorrect = 1;
                            $isVisible = $getIfVehicleAvailable[0]['visibility'];
                            $isVerified = 1;
                            $isUserFound = 1;
                            $personName = $getUserDetail[0]['aadharname'];
                        }
                    }
                }
            }
            $getMissingVehicle = $this->db->query('select * from missingvehicle where engineNumber="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isFound !=1')->result_array();
            if(count($getMissingVehicle) > 0)
            {
                $isAadharCorrect = 1;
                $isMissing = 1;
                $personName = $getMissingVehicle[0]['ownerName'];
            }
            if($confidence0 > 83)
            {
                $insertdata = array(
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'idNumber' => $_POST['idNumber'],
                    'vehicleType' => $_POST['vehicleType'],
                    'searchType' => $_POST['searchType'],
                );
                $this->db->where('Id',$_SESSION['vehicleLoggedInId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                if($update)
                {
                    if($isAadharCorrect == 1)
                    {
                        $response = array(
                            'status' => 'success',
                            'personName' => $personName,
                            'isAadharCorrect' => $isAadharCorrect,
                            'message' => 'Vehicle Found',
                            'isVisible' => $isVisible,
                            'isMissing' => $isMissing,
                            'isVerified' => $isVerified,
                            'isRegistered' => $isUserFound,
                        );
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $insertdata = array(
                    'inActivePhoto' => $newImagePath,
                );   
                $this->db->where('Id',$_SESSION['vehicleLoggedInId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['searchType'] == 'chassisNumber')
        {
            $idNumber = $_POST['idNumber'];
            $getIfVehicleAvailable = $this->db->query('select * from vehicles where chassis_number="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isdeleted!=1 and paymentStatus=1')->result_array();
            $userphoto = '';
            if(count($getIfVehicleAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcavehicle",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        $getVehiclePhotos = $this->db->query('select * from vehicleFaceMatch where vehicleId='.$getIfVehicleAvailable[0]['Id'])->result_array();
                        if(count($getVehiclePhotos) > 0)
                        {
                            foreach($getVehiclePhotos as $k=>$v)
                            {
                                if(in_array($v['imageId'],$faceresponse['output']))
                                {
                                    $confidence0 = 85;
                                }
                            }
                        }
                        if($conifdence0 == 85)
                        {
                            $getUserDetail = $this->db->query('select * from user where uid='.$getIfVehicleAvailable[0]['userId'])->result_array();
                            $isAadharCorrect = 1;
                            $isVisible = $getIfVehicleAvailable[0]['visibility'];
                            $isVerified = 1;
                            $isUserFound = 1;
                            $personName = $getUserDetail[0]['aadharname'];
                        }
                    }
                }
            }
            $getMissingVehicle = $this->db->query('select * from missingvehicle where chasisNumber="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isFound !=1')->result_array();
            if(count($getMissingVehicle) > 0)
            {
                $isAadharCorrect = 1;
                $isMissing = 1;
                $personName = $getMissingVehicle[0]['ownerName'];
            }
            if($confidence0 > 83)
            {
                $insertdata = array(
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'idNumber' => $_POST['idNumber'],
                    'vehicleType' => $_POST['vehicleType'],
                    'searchType' => $_POST['searchType'],
                );
                $this->db->where('Id',$_SESSION['vehicleLoggedInId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                if($update)
                {
                    if($isAadharCorrect == 1)
                    {
                        $response = array(
                            'status' => 'success',
                            'personName' => $personName,
                            'isAadharCorrect' => $isAadharCorrect,
                            'message' => 'Vehicle Found',
                            'isVisible' => $isVisible,
                            'isMissing' => $isMissing,
                            'isVerified' => $isVerified,
                            'isRegistered' => $isUserFound,
                        );
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $insertdata = array(
                    'inActivePhoto' => $newImagePath,
                );   
                $this->db->where('Id',$_SESSION['vehicleLoggedInId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }   
    }
    
    function checkInactiveVehicleId()
    {
        $data = $_POST["photo"];
        $image_array_1 = explode(";", $data);
        $split1 = explode('data:image/',$image_array_1[0]);
        $image_array_2 = explode(",", $image_array_1[1]);
        $data = base64_decode($image_array_2[1]);
        $imageId = time().''.rand(0,10000);
        $newImagePath = 'upload/searchVehicle/'.$imageId.'.'.$split1[1];
        file_put_contents($newImagePath, $data);
        $config['image_library'] = 'gd2';  
        $config['source_image'] = $newImagePath;  
        $config['create_thumb'] = FALSE;  
        $config['maintain_ratio'] = true;  
        $config['quality'] = '60%';  
        $config['width'] = 320;  
        $config['height'] = 240;  
        $config['new_image'] = $newImagePath;  
        $this->load->library('image_lib', $config);  
        $this->image_lib->resize(); 
        $this->load->library('Image_autorotate',$newImagePath);
        $this->image_lib->clear();
        $personName = '';
        $isVerified = 'No';
        $isVisible = 0;
        $isUserFound = 0;
        $isMissing = 0;
        $isAadharCorrect = 0;
        $idNumber = '';
        $confidence0 = 0;
        $confidence1 = 0;
        $confidence2 = 0;
        $faceResponse = array();
        $personName = '';
        if($_POST['searchType'] == 'vehicleNumber')
        {
            $idNumber = $_POST['idNumber'];
            $getIfVehicleAvailable = $this->db->query('select * from vehicles where rcNumber="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isdeleted!=1 and paymentStatus=1')->result_array();
            $userphoto = '';
            if(count($getIfVehicleAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcavehicle",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        $getUserDetail = $this->db->query('select * from user where uid='.$getIfVehicleAvailable[0]['userId'])->result_array();
                        $isAadharCorrect = 1;
                        $isVisible = $getIfVehicleAvailable[0]['visibility'];
                        $isVerified = 1;
                        $isUserFound = 1;
                        $personName = $getUserDetail[0]['aadharname'];
                        $confidence0 = 85;
                    }
                }
            }
            $getMissingVehicle = $this->db->query('select * from missingvehicle where rcNumber="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isFound !=1')->result_array();
            if(count($getMissingVehicle) > 0)
            {
                $isAadharCorrect = 1;
                $isMissing = 1;
                $personName = $getMissingVehicle[0]['ownerName'];
            }
            if($confidence0 > 83)
            {
                $insertdata = array(
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'idNumber' => $_POST['idNumber'],
                    'vehicleType' => $_POST['vehicleType'],
                    'searchType' => $_POST['searchType'],
                );
                $this->db->where('Id',$_SESSION['checkVehicleId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                if($update)
                {
                    if($isAadharCorrect == 1)
                    {
                        $response = array(
                            'status' => 'success',
                            'personName' => $personName,
                            'isAadharCorrect' => $isAadharCorrect,
                            'message' => 'Vehicle Found',
                            'isVisible' => $isVisible,
                            'isMissing' => $isMissing,
                            'isVerified' => $isVerified,
                            'isRegistered' => $isUserFound,
                        );
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $insertdata = array(
                    'inActivePhoto' => $newImagePath,
                );   
                $this->db->where('Id',$_SESSION['checkVehicleId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['searchType'] == 'engineNumber')
        {
            $idNumber = $_POST['idNumber'];
            $getIfVehicleAvailable = $this->db->query('select * from vehicles where engine_number="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isdeleted!=1 and paymentStatus=1')->result_array();
            $userphoto = '';
            if(count($getIfVehicleAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcavehicle",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        $getUserDetail = $this->db->query('select * from user where uid='.$getIfVehicleAvailable[0]['userId'])->result_array();
                        $isAadharCorrect = 1;
                        $isVisible = $getIfVehicleAvailable[0]['visibility'];
                        $isVerified = 1;
                        $isUserFound = 1;
                        $personName = $getUserDetail[0]['aadharname'];
                        $confidence0 = 85;
                    }
                }
            }
            $getMissingVehicle = $this->db->query('select * from missingvehicle where engineNumber="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isFound !=1')->result_array();
            if(count($getMissingVehicle) > 0)
            {
                $isAadharCorrect = 1;
                $isMissing = 1;
                $personName = $getMissingVehicle[0]['ownerName'];
            }
            if($confidence0 > 83)
            {
                $insertdata = array(
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'idNumber' => $_POST['idNumber'],
                    'vehicleType' => $_POST['vehicleType'],
                    'searchType' => $_POST['searchType'],
                );
                $this->db->where('Id',$_SESSION['checkVehicleId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                if($update)
                {
                    if($isAadharCorrect == 1)
                    {
                        $response = array(
                            'status' => 'success',
                            'personName' => $personName,
                            'isAadharCorrect' => $isAadharCorrect,
                            'message' => 'Vehicle Found',
                            'isVisible' => $isVisible,
                            'isMissing' => $isMissing,
                            'isVerified' => $isVerified,
                            'isRegistered' => $isUserFound,
                        );
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $insertdata = array(
                    'inActivePhoto' => $newImagePath,
                );   
                $this->db->where('Id',$_SESSION['checkVehicleId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['searchType'] == 'chassisNumber')
        {
            $idNumber = $_POST['idNumber'];
            $getIfVehicleAvailable = $this->db->query('select * from vehicles where chassis_number="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isdeleted!=1 and paymentStatus=1')->result_array();
            $userphoto = '';
            if(count($getIfVehicleAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcavehicle",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        $getUserDetail = $this->db->query('select * from user where uid='.$getIfVehicleAvailable[0]['userId'])->result_array();
                        $isAadharCorrect = 1;
                        $isVisible = $getIfVehicleAvailable[0]['visibility'];
                        $isVerified = 1;
                        $isUserFound = 1;
                        $personName = $getUserDetail[0]['aadharname'];
                        $confidence0 = 85;
                    }
                }
            }
            $getMissingVehicle = $this->db->query('select * from missingvehicle where chasisNumber="'.$_POST['idNumber'].'" and vehicleType="'.$_POST['vehicleType'].'" and isFound !=1')->result_array();
            if(count($getMissingVehicle) > 0)
            {
                $isAadharCorrect = 1;
                $isMissing = 1;
                $personName = $getMissingVehicle[0]['ownerName'];
            }
            if($confidence0 > 83)
            {
                $insertdata = array(
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'idNumber' => $_POST['idNumber'],
                    'vehicleType' => $_POST['vehicleType'],
                    'searchType' => $_POST['searchType'],
                );
                $this->db->where('Id',$_SESSION['checkVehicleId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                if($update)
                {
                    if($isAadharCorrect == 1)
                    {
                        $response = array(
                            'status' => 'success',
                            'personName' => $personName,
                            'isAadharCorrect' => $isAadharCorrect,
                            'message' => 'Vehicle Found',
                            'isVisible' => $isVisible,
                            'isMissing' => $isMissing,
                            'isVerified' => $isVerified,
                            'isRegistered' => $isUserFound,
                        );
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $insertdata = array(
                    'inActivePhoto' => $newImagePath,
                );   
                $this->db->where('Id',$_SESSION['checkVehicleId']);
                $update = $this->db->update('searchVehicle',$insertdata);
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
    }
    
    function checkInactiveInfoAfterLogin()
    {
        $data = $_POST["photo"];
        $image_array_1 = explode(";", $data);
        $split1 = explode('data:image/',$image_array_1[0]);
        $image_array_2 = explode(",", $image_array_1[1]);
        $data = base64_decode($image_array_2[1]);
        $imageId = time().''.rand(0,10000);
        $newImagePath = 'upload/checkPerson/'.$imageId.'.'.$split1[1];
        
        file_put_contents($newImagePath, $data);
        $config['image_library'] = 'gd2';  
        $config['source_image'] = $newImagePath;  
        $config['create_thumb'] = FALSE;  
        $config['maintain_ratio'] = true;  
        $config['quality'] = '60%';  
        $config['width'] = 320;  
        $config['height'] = 240;  
        $config['new_image'] = $newImagePath;  
        $this->load->library('image_lib', $config);  
        $this->image_lib->resize(); 
        $this->load->library('Image_autorotate',$newImagePath);
        $this->image_lib->clear();
        $personName = '';
        $gender = '';
        $aadhar = '';
        $gender = '';
        $isVerified = 'No';
        $isVisible = 0;
        $age = '';
        $address = '';
        $isUserFound = 0;
        $isMissing = 0;
        $isAadharCorrect = 0;
        $idNumber = '';
        $confidence = 0;
        $faceResponse = array();
        if($_POST['idType'] == 'aadhar')
        {
            $idNumber = $_POST['idNumber'];
            if(strlen($_POST['idNumber']) != 12)
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Aadhar number must be 12 digit number'
                );
                echo json_encode($response);
                return;
            }
            $getIfPersonAvailable = $this->db->query('select * from user where aadhar_id="'.$_POST['idNumber'].'"')->result_array();
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        foreach($faceresponse['output'] as $k=>$v)
                        {
                            if($v == $getIfPersonAvailable[0]['imageId'])
                            {
                                $confidence = 84;
                            }
                        }
                    }
                }
            }
            if($confidence > 83)
            {
                $response = array(
                    'status' => 'success',
                    'id' => $getIfPersonAvailable[0]['uid'],
                );
                echo json_encode($response);   
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['idType'] == 'dl')
        {
            $idNumber = $_POST['idNumber'];
            $getIfAlready = $this->db->query('select * from dllist where dlNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        foreach($faceresponse['output'] as $k=>$v)
                        {
                            if($v == $getIfPersonAvailable[0]['imageId'])
                            {
                                $confidence = 84;
                            }
                        }
                    }
                }
            }
            if($confidence > 83)
            {
                $response = array(
                    'status' => 'success',
                    'id' => $getIfAlready[0]['userId'],
                );
                echo json_encode($response);   
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['idType'] == 'voter')
        {
            $idNumber = $_POST['idNumber'];
            $getIfAlready = $this->db->query('select * from voterslist where voterNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        foreach($faceresponse['output'] as $k=>$v)
                        {
                            if($v == $getIfPersonAvailable[0]['imageId'])
                            {
                                $confidence = 84;
                            }
                        }
                    }
                }
            }
            if($confidence > 83)
            {
                $response = array(
                    'status' => 'success',
                    'id' => $getIfAlready[0]['userId'],
                );
                echo json_encode($response);   
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['idType'] == 'pan')
        {
            $idNumber = $_POST['idNumber'];
            $getIfAlready = $this->db->query('select * from panlist where panNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        foreach($faceresponse['output'] as $k=>$v)
                        {
                            if($v == $getIfPersonAvailable[0]['imageId'])
                            {
                                $confidence = 84;
                            }
                        }
                    }
                }
            }
            if($confidence > 83)
            {
                $response = array(
                    'status' => 'success',
                    'id' => $getIfAlready[0]['userId'],
                );
                echo json_encode($response);   
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['idType'] == 'gold')
        {
            $this->db->where('goldHUIDNumber1', $_POST['idNumber']);
            $this->db->or_where('goldHUIDNumber2', $_POST['idNumber']);
            $this->db->or_where('goldHUIDNumber3', $_POST['idNumber']);
            $getIfPersonAvailable = $this->db->get('user')->result_array();
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        foreach($faceresponse['output'] as $k=>$v)
                        {
                            if($v == $getIfPersonAvailable[0]['imageId'])
                            {
                                $confidence = 84;
                            }
                        }
                    }
                }
            }
            if($confidence > 83)
            {
                $response = array(
                    'status' => 'success',
                    'id' => $getIfPersonAvailable[0]['uid'],
                );
                echo json_encode($response);   
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['idType'] == 'vehicle')
        {
            $idNumber = $_POST['idNumber'];
            $this->db->where('vehicleNumber1', $_POST['idNumber']);
            $this->db->or_where('vehicleNumber2', $_POST['idNumber']);
            $this->db->or_where('vehicleNumber3', $_POST['idNumber']);
            $getIfPersonAvailable = $this->db->get('user')->result_array();
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        foreach($faceresponse['output'] as $k=>$v)
                        {
                            if($v == $getIfPersonAvailable[0]['imageId'])
                            {
                                $confidence = 84;
                            }
                        }
                    }
                }
            }
            if($confidence > 83)
            {
                $response = array(
                    'status' => 'success',
                    'id' => $getIfPersonAvailable[0]['uid'],
                );
                echo json_encode($response);   
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        } 
    }
    
    function checkInactiveInfo()
    {
        $data = $_POST["photo"];
        $image_array_1 = explode(";", $data);
        $split1 = explode('data:image/',$image_array_1[0]);
        $image_array_2 = explode(",", $image_array_1[1]);
        $data = base64_decode($image_array_2[1]);
        $imageId = time().''.rand(0,10000);
        $newImagePath = 'upload/checkPerson/'.$imageId.'.'.$split1[1];
        
        file_put_contents($newImagePath, $data);
        $config['image_library'] = 'gd2';  
        $config['source_image'] = $newImagePath;  
        $config['create_thumb'] = FALSE;  
        $config['maintain_ratio'] = true;  
        $config['quality'] = '60%';  
        $config['width'] = 320;  
        $config['height'] = 240;  
        $config['new_image'] = $newImagePath;  
        $this->load->library('image_lib', $config);  
        $this->image_lib->resize(); 
        $this->load->library('Image_autorotate',$newImagePath);
        $this->image_lib->clear();
        $personName = '';
        $gender = '';
        $aadhar = '';
        $gender = '';
        $isVerified = 'No';
        $isVisible = 0;
        $age = '';
        $address = '';
        $isUserFound = 0;
        $isMissing = 0;
        $isAadharCorrect = 0;
        $idNumber = '';
        $confidence = 0;
        $faceResponse = array();
        if($_POST['idType'] == 'aadhar')
        {
            $idNumber = $_POST['idNumber'];
            if(strlen($_POST['idNumber']) != 12)
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Aadhar number must be 12 digit number'
                );
                echo json_encode($response);
                return;
            }
            $getIfPersonAvailable = $this->db->query('select * from user where aadhar_id="'.$_POST['idNumber'].'"')->result_array();
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        foreach($faceresponse['output'] as $k=>$v)
                        {
                            if($v == $getIfPersonAvailable[0]['imageId'])
                            {
                                $confidence = 84;
                            }
                        }
                    }
                }
            }
            if($confidence > 83)
            {
                $response = array(
                    'status' => 'success',
                    'id' => $getIfPersonAvailable[0]['uid'],
                );
                echo json_encode($response);   
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['idType'] == 'dl')
        {
            $idNumber = $_POST['idNumber'];
            $getIfAlready = $this->db->query('select * from dllist where dlNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        foreach($faceresponse['output'] as $k=>$v)
                        {
                            if($v == $getIfPersonAvailable[0]['imageId'])
                            {
                                $confidence = 84;
                            }
                        }
                    }
                }
            }
            if($confidence > 83)
            {
                $response = array(
                    'status' => 'success',
                    'id' => $getIfAlready[0]['userId'],
                );
                echo json_encode($response);   
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['idType'] == 'voter')
        {
            $idNumber = $_POST['idNumber'];
            $getIfAlready = $this->db->query('select * from voterslist where voterNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        foreach($faceresponse['output'] as $k=>$v)
                        {
                            if($v == $getIfPersonAvailable[0]['imageId'])
                            {
                                $confidence = 84;
                            }
                        }
                    }
                }
            }
            if($confidence > 83)
            {
                $response = array(
                    'status' => 'success',
                    'id' => $getIfAlready[0]['userId'],
                );
                echo json_encode($response);   
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['idType'] == 'pan')
        {
            $idNumber = $_POST['idNumber'];
            $getIfAlready = $this->db->query('select * from panlist where panNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        foreach($faceresponse['output'] as $k=>$v)
                        {
                            if($v == $getIfPersonAvailable[0]['imageId'])
                            {
                                $confidence = 84;
                            }
                        }
                    }
                }
            }
            if($confidence > 83)
            {
                $response = array(
                    'status' => 'success',
                    'id' => $getIfAlready[0]['userId'],
                );
                echo json_encode($response);   
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['idType'] == 'gold')
        {
            $this->db->where('goldHUIDNumber1', $_POST['idNumber']);
            $this->db->or_where('goldHUIDNumber2', $_POST['idNumber']);
            $this->db->or_where('goldHUIDNumber3', $_POST['idNumber']);
            $getIfPersonAvailable = $this->db->get('user')->result_array();
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        foreach($faceresponse['output'] as $k=>$v)
                        {
                            if($v == $getIfPersonAvailable[0]['imageId'])
                            {
                                $confidence = 84;
                            }
                        }
                    }
                }
            }
            if($confidence > 83)
            {
                $response = array(
                    'status' => 'success',
                    'id' => $getIfPersonAvailable[0]['uid'],
                );
                echo json_encode($response);   
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['idType'] == 'vehicle')
        {
            $idNumber = $_POST['idNumber'];
            $this->db->where('vehicleNumber1', $_POST['idNumber']);
            $this->db->or_where('vehicleNumber2', $_POST['idNumber']);
            $this->db->or_where('vehicleNumber3', $_POST['idNumber']);
            $getIfPersonAvailable = $this->db->get('user')->result_array();
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                
                $faceresponse = json_decode(curl_exec($curl),true);
                curl_close($curl);
                if(count($faceresponse) > 0)
                {
                    if(count($faceresponse['output']) > 0)
                    {
                        foreach($faceresponse['output'] as $k=>$v)
                        {
                            if($v == $getIfPersonAvailable[0]['imageId'])
                            {
                                $confidence = 84;
                            }
                        }
                    }
                }
            }
            if($confidence > 83)
            {
                $response = array(
                    'status' => 'success',
                    'id' => $getIfPersonAvailable[0]['uid'],
                );
                echo json_encode($response);   
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
    }

    function openSearchNotification($id)
    {
        if(isset($_SESSION['landingMob']))
        {
            $page_data['notification'] = $this->db->query('select * from searchnotification where Id='.$id)->result_array();
            $page_data['page_name'] = 'openSearchNotification';
            $this->load->view('nonkyc/index', $page_data);
        }
        else 
        {
            redirect('login','refresh');
        }
    }

    function openNotification($id)
    {
        if(isset($_SESSION['landingMob']))
        {
            $this->db->query('update Notification set status="Inactive" where Id='.$id);
            $page_data['notification'] = $this->db->query('select * from Notification where Id='.$id)->result_array();
            $page_data['page_name'] = 'openNotification';
            $this->load->view('nonkyc/index', $page_data);
        }else 
        {
            redirect('login','refresh');
        }
    }
    
    function checkInactiveInfoOld()
    {
        $data = $_POST["photo"];
        $image_array_1 = explode(";", $data);
        $split1 = explode('data:image/',$image_array_1[0]);
        $image_array_2 = explode(",", $image_array_1[1]);
        $data = base64_decode($image_array_2[1]);
        
        $newImagePath = 'upload/checkPerson/'.time().''.rand(0,10000).'.'.$split1[1];
        
        file_put_contents($newImagePath, $data);
        $config['image_library'] = 'gd2';  
        $config['source_image'] = $newImagePath;  
        $config['create_thumb'] = FALSE;  
        $config['maintain_ratio'] = true;  
        $config['quality'] = '60%';  
        $config['width'] = 320;  
        $config['height'] = 240;  
        $config['new_image'] = $newImagePath;  
        $this->load->library('image_lib', $config);  
        $this->image_lib->resize(); 
        $this->load->library('Image_autorotate',$newImagePath);
        $this->image_lib->clear();
        $personName = '';
        $gender = '';
        $aadhar = '';
        $gender = '';
        $isVerified = 'No';
        $isVisible = 0;
        $age = '';
        $address = '';
        $isUserFound = 0;
        $isMissing = 0;
        $isGenderCorrect = 0;
        $isAadharCorrect = 0;
        $isDobCorrect = 0;
        $_POST['dob'] = $_POST['date'].'-'.$_POST['month'].'-'.$_POST['year'];
        $idNumber = '';
        $confidence = 0;
        $faceResponse = array();
        if($_POST['idType'] == 'aadhar')
        {
            $idNumber = $_POST['aadhar_id'];
            if(strlen($_POST['aadhar_id']) != 12)
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Aadhar number must be 12 digit number'
                );
                echo json_encode($response);
                return;
            }
            $getIfPersonAvailable = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'" and gender="'.$_POST['gender'].'" and dob="'.date('Y-m-d',strtotime($_POST['dob'])).'"')->result_array();
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $curl = curl_init();
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'fmatch.shammtech.in',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => 'image1='.base_url().''.$getIfPersonAvailable[0]['facematchphoto'].'&image2='.base_url().''.$newImagePath,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/x-www-form-urlencoded'
                  ),
                ));
                $response = json_decode(curl_exec($curl),true);
                $response['image'] = base_url().''.$newImagePath;
                $faceResponse = json_encode($response);
                if($response['message'] != 'Internal Server Error')
                {
                    $confidence = $response['confidence'];   
                }
                $isVisible = $getIfPersonAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y).'- Years';
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$_POST['aadhar_id'].'" and isFound != 1')->result_array();
            if(count($getMissingPerson) > 0)
            {
                $isAadharCorrect = 1;
                if($getMissingPerson[0]['missinggender'] != NULL)
                {
                    if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                    {
                        $isDobCorrect = 1;
                    }
                    if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                    {
                        $isGenderCorrect = 1;
                        if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                            $isMissing = 1;
                            $personName = $getMissingPerson[0]['missingname'];
                            $gender = $getMissingPerson[0]['missinggender'];
                            $aadhar = $getMissingPerson[0]['missingaadhar'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getMissingPerson[0]['missingdob']);
                            $age = ($from->diff($to)->y).'- Years';
                            if(count($getIfPersonAvailable) > 0)
                            {
                                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                            }else{
                                $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                            }
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $curl = curl_init();
                                curl_setopt_array($curl, array(
                                  CURLOPT_URL => 'fmatch.shammtech.in',
                                  CURLOPT_RETURNTRANSFER => true,
                                  CURLOPT_ENCODING => '',
                                  CURLOPT_MAXREDIRS => 10,
                                  CURLOPT_TIMEOUT => 0,
                                  CURLOPT_FOLLOWLOCATION => true,
                                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                                  CURLOPT_CUSTOMREQUEST => 'POST',
                                  CURLOPT_POSTFIELDS => 'image1='.base_url().''.$getMissingPerson[0]['facematchphoto'].'&image2='.base_url().''.$newImagePath,
                                  CURLOPT_HTTPHEADER => array(
                                    'Content-Type: application/x-www-form-urlencoded'
                                  ),
                                ));
                                $response = json_decode(curl_exec($curl),true);
                                $faceResponse = json_encode($response);
                                if($response['message'] != 'Internal Server Error')
                                {
                                    $confidence = $response['confidence'];   
                                }
                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }else{
                    $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                    if(count($getFullDetail) > 0)
                    {
                        if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                        }
                        if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                        {
                            $isGenderCorrect = 1;
                            if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                                $isMissing = 1; 
                                $personName = $getMissingPerson[0]['missingname'];
                                $gender = $getMissingPerson[0]['missinggender'];
                                $aadhar = $getMissingPerson[0]['missingaadhar'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                $age = ($from->diff($to)->y).'- Years';
                                if(count($getIfPersonAvailable) > 0)
                                {
                                    $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                }else{
                                    $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                }
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }   
                            }
                        }   
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                }
            }else{
                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'"')->result_array();
                if(count($getUserDetail) > 0)
                {
                    $isAadharCorrect = 1;
                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                    {
                        $isDobCorrect = 1;
                    }
                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                    {
                        $isGenderCorrect = 1;
                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                            $isMissing = 0; 
                            $personName = $getUserDetail[0]['aadharname'];
                            $gender = $getUserDetail[0]['gender'];
                            $aadhar = $getUserDetail[0]['aadhar_id'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getUserDetail[0]['dob']);
                            $age = ($from->diff($to)->y).'- Years';
                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }
            }
            if($confidence > 83)
            {
                $insertdata = array(
                    'inActivePhoto' => $newImagePath,
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'gender' => $_POST['gender'],
                    'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                    'idNumber' => $_POST['aadhar_id'],
                    'idType' => $_POST['idType'],
                    'response' => $faceResponse
                );   
                $this->db->where('Id',$_SESSION['checkId']);
                $update = $this->db->update('checkperson',$insertdata);
                if($update)
                {
                    if($confidence > 83)
                    {
                        if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                        {
                            $response = array(
                                'status' => 'success',
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                                'message' => 'Person Found',
                                'isVisible' => $isVisible,
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => $userphoto
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                            );
                            echo json_encode($response);   
                        }   
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Face Not Matched'
                        );
                        echo json_encode($response);    
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $insertdata = array(
                    'inActivePhoto' => $newImagePath,
                    'response' => $faceResponse
                );   
                $this->db->where('Id',$_SESSION['checkId']);
                $update = $this->db->update('checkperson',$insertdata);
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['idType'] == 'dl')
        {
            $idNumber = $_POST['dlNumber'];
            $getIfAlready = $this->db->query('select * from dllist where dlNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $curl = curl_init();
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'fmatch.shammtech.in',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => 'image1='.base_url().''.$getIfPersonAvailable[0]['facematchphoto'].'&image2='.base_url().''.$newImagePath,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/x-www-form-urlencoded'
                  ),
                ));
                $response = json_decode(curl_exec($curl),true);
                if($response['message'] != 'Internal Server Error')
                {
                    $confidence = $response['confidence'];   
                }
                $isVisible = $getIfPersonAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y).'- Years';
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
            }else{
                $getMissingPerson = array();
            }
            if(count($getMissingPerson) > 0)
            {
                $isAadharCorrect = 1;
                if($getMissingPerson[0]['missinggender'] != NULL)
                {
                    if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                    {
                        $isDobCorrect = 1;
                    }
                    if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                    {
                        $isGenderCorrect = 1;
                        if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                            $isMissing = 1;
                            $personName = $getMissingPerson[0]['missingname'];
                            $gender = $getMissingPerson[0]['missinggender'];
                            $aadhar = $getMissingPerson[0]['missingaadhar'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getMissingPerson[0]['missingdob']);
                            $age = ($from->diff($to)->y).'- Years';
                            if(count($getIfPersonAvailable) > 0)
                            {
                                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                            }else{
                                $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                            }
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $curl = curl_init();
                                curl_setopt_array($curl, array(
                                  CURLOPT_URL => 'fmatch.shammtech.in',
                                  CURLOPT_RETURNTRANSFER => true,
                                  CURLOPT_ENCODING => '',
                                  CURLOPT_MAXREDIRS => 10,
                                  CURLOPT_TIMEOUT => 0,
                                  CURLOPT_FOLLOWLOCATION => true,
                                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                                  CURLOPT_CUSTOMREQUEST => 'POST',
                                  CURLOPT_POSTFIELDS => 'image1='.base_url().''.$getMissingPerson[0]['facematchphoto'].'&image2='.base_url().''.$newImagePath,
                                  CURLOPT_HTTPHEADER => array(
                                    'Content-Type: application/x-www-form-urlencoded'
                                  ),
                                ));
                                $response = json_decode(curl_exec($curl),true);
                                if($response['message'] != 'Internal Server Error')
                                {
                                    $confidence = $response['confidence'];   
                                }
                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }else{
                    $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                    if(count($getFullDetail) > 0)
                    {
                        if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                        }
                        if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                        {
                            $isGenderCorrect = 1;
                            if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                                $isMissing = 1; 
                                $personName = $getMissingPerson[0]['missingname'];
                                $gender = $getMissingPerson[0]['missinggender'];
                                $aadhar = $getMissingPerson[0]['missingaadhar'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                $age = ($from->diff($to)->y).'- Years';
                                if(count($getIfPersonAvailable) > 0)
                                {
                                    $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                }else{
                                    $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                }
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }   
                            }
                        }   
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                }
            }else{
                if(count($getIfPersonAvailable) > 0)
                {
                    $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                }else{
                    $getUserDetail = array();
                }
                if(count($getUserDetail) > 0)
                {
                    $isAadharCorrect = 1;
                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                    {
                        $isDobCorrect = 1;
                    }
                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                    {
                        $isGenderCorrect = 1;
                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                            $isMissing = 0; 
                            $personName = $getUserDetail[0]['aadharname'];
                            $gender = $getUserDetail[0]['gender'];
                            $aadhar = $getUserDetail[0]['aadhar_id'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getUserDetail[0]['dob']);
                            $age = ($from->diff($to)->y).'- Years';
                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }
            }
            if($confidence > 83)
            {
                $insertdata = array(
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'gender' => $_POST['gender'],
                    'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                    'idNumber' => $_POST['dlNumber'],
                    'idType' => $_POST['idType'],
                ); 
                $this->db->where('Id',$_SESSION['checkId']);
                $update = $this->db->update('checkperson',$insertdata);
                if($update)
                {
                    if($confidence > 83)
                    {
                        if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                        {
                            $response = array(
                                'status' => 'success',
                                'isVisible' => $isVisible,
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                                'message' => 'Person Found',
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => $userphoto
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                            );
                            echo json_encode($response);   
                        }   
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Face Not Matched'
                        );
                        echo json_encode($response);    
                    }
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['idType'] == 'voter')
        {
            $idNumber = $_POST['voterId'];
            $getIfAlready = $this->db->query('select * from voterslist where voterNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'].' and gender="'.$_POST['gender'].'" and dob="'.date('Y-m-d',strtotime($_POST['dob'])).'"')->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $curl = curl_init();
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'fmatch.shammtech.in',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => 'image1='.base_url().''.$getIfPersonAvailable[0]['facematchphoto'].'&image2='.base_url().''.$newImagePath,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/x-www-form-urlencoded'
                  ),
                ));
                $response = json_decode(curl_exec($curl),true);
                if($response['message'] != 'Internal Server Error')
                {
                    $confidence = $response['confidence'];   
                }
                $isVisible = $getIfPersonAvailable[0]['visibility'];
                $isUserFound = 1;
                $isVerified = 1;
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y).'- Years';
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
            }else{
                $getMissingPerson = array();
            }
            if(count($getMissingPerson) > 0)
            {
                $isAadharCorrect = 1;
                if($getMissingPerson[0]['missinggender'] != NULL)
                {
                    if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                    {
                        $isDobCorrect = 1;
                    }
                    if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                    {
                        $isGenderCorrect = 1;
                        if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                            $isMissing = 1;
                            $personName = $getMissingPerson[0]['missingname'];
                            $gender = $getMissingPerson[0]['missinggender'];
                            $aadhar = $getMissingPerson[0]['missingaadhar'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getMissingPerson[0]['missingdob']);
                            $age = ($from->diff($to)->y).'- Years';
                            if(count($getIfPersonAvailable) > 0)
                            {
                                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                            }else{
                                $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                            }
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $curl = curl_init();
                                curl_setopt_array($curl, array(
                                  CURLOPT_URL => 'fmatch.shammtech.in',
                                  CURLOPT_RETURNTRANSFER => true,
                                  CURLOPT_ENCODING => '',
                                  CURLOPT_MAXREDIRS => 10,
                                  CURLOPT_TIMEOUT => 0,
                                  CURLOPT_FOLLOWLOCATION => true,
                                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                                  CURLOPT_CUSTOMREQUEST => 'POST',
                                  CURLOPT_POSTFIELDS => 'image1='.base_url().''.$getMissingPerson[0]['facematchphoto'].'&image2='.base_url().''.$newImagePath,
                                  CURLOPT_HTTPHEADER => array(
                                    'Content-Type: application/x-www-form-urlencoded'
                                  ),
                                ));
                                $response = json_decode(curl_exec($curl),true);
                                if($response['message'] != 'Internal Server Error')
                                {
                                    $confidence = $response['confidence'];   
                                }
                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }else{
                    $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                    if(count($getFullDetail) > 0)
                    {
                        if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                        }
                        if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                        {
                            $isGenderCorrect = 1;
                            if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                                $isMissing = 1; 
                                $personName = $getMissingPerson[0]['missingname'];
                                $gender = $getMissingPerson[0]['missinggender'];
                                $aadhar = $getMissingPerson[0]['missingaadhar'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                $age = ($from->diff($to)->y).'- Years';
                                if(count($getIfPersonAvailable) > 0)
                                {
                                    $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                }else{
                                    $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                }
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }   
                            }
                        }   
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                }
            }else{
                if(count($getIfPersonAvailable) > 0)
                {
                    $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                }else{
                    $getUserDetail = array();
                }
                if(count($getUserDetail) > 0)
                {
                    $isAadharCorrect = 1;
                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                    {
                        $isDobCorrect = 1;
                    }
                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                    {
                        $isGenderCorrect = 1;
                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                            $isMissing = 0; 
                            $personName = $getUserDetail[0]['aadharname'];
                            $gender = $getUserDetail[0]['gender'];
                            $aadhar = $getUserDetail[0]['aadhar_id'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getUserDetail[0]['dob']);
                            $age = ($from->diff($to)->y).'- Years';
                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }
            }
            if($confidence > 83)
            {
                $insertdata = array(
                    'inActivePhoto' => $newImagePath,
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'gender' => $_POST['gender'],
                    'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                    'idNumber' => $_POST['voterId'],
                    'idType' => $_POST['idType'],
                );   
                $this->db->where('Id',$_SESSION['checkId']);
                $update = $this->db->update('checkperson',$insertdata);
                if($update)
                {
                    if($confidence > 83)
                    {
                        if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                        {
                            $response = array(
                                'status' => 'success',
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                                'message' => 'Person Found',
                                'isVisible' => $isVisible,
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => $userphoto
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                            );
                            echo json_encode($response);   
                        }   
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Face Not Matched'
                        );
                        echo json_encode($response);    
                    }
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }
        if($_POST['idType'] == 'pan')
        {
            $idNumber = $_POST['panNumber'];
            $getIfAlready = $this->db->query('select * from panlist where panNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $curl = curl_init();
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'fmatch.shammtech.in',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => 'image1='.base_url().''.$getIfPersonAvailable[0]['facematchphoto'].'&image2='.base_url().''.$newImagePath,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/x-www-form-urlencoded'
                  ),
                ));
                $response = json_decode(curl_exec($curl),true);
                if($response['message'] != 'Internal Server Error')
                {
                    $confidence = $response['confidence'];   
                }
                $isVisible = $getIfPersonAvailable[0]['visibility'];
                $isUserFound = 1;
                $isVerified = 1;
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y).'- Years';
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
            }else{
                $getMissingPerson = array();
            }
            if(count($getMissingPerson) > 0)
            {
                $isAadharCorrect = 1;
                if($getMissingPerson[0]['missinggender'] != NULL)
                {
                    if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                    {
                        $isDobCorrect = 1;
                    }
                    if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                    {
                        $isGenderCorrect = 1;
                        if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                            $isMissing = 1;
                            $personName = $getMissingPerson[0]['missingname'];
                            $gender = $getMissingPerson[0]['missinggender'];
                            $aadhar = $getMissingPerson[0]['missingaadhar'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getMissingPerson[0]['missingdob']);
                            $age = ($from->diff($to)->y).'- Years';
                            if(count($getIfPersonAvailable) > 0)
                            {
                                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                            }else{
                                $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                            }
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $curl = curl_init();
                                curl_setopt_array($curl, array(
                                  CURLOPT_URL => 'fmatch.shammtech.in',
                                  CURLOPT_RETURNTRANSFER => true,
                                  CURLOPT_ENCODING => '',
                                  CURLOPT_MAXREDIRS => 10,
                                  CURLOPT_TIMEOUT => 0,
                                  CURLOPT_FOLLOWLOCATION => true,
                                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                                  CURLOPT_CUSTOMREQUEST => 'POST',
                                  CURLOPT_POSTFIELDS => 'image1='.base_url().''.$getMissingPerson[0]['facematchphoto'].'&image2='.base_url().''.$newImagePath,
                                  CURLOPT_HTTPHEADER => array(
                                    'Content-Type: application/x-www-form-urlencoded'
                                  ),
                                ));
                                $response = json_decode(curl_exec($curl),true);
                                if($response['message'] != 'Internal Server Error')
                                {
                                    $confidence = $response['confidence'];   
                                }
                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }else{
                    $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                    if(count($getFullDetail) > 0)
                    {
                        if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                        }
                        if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                        {
                            $isGenderCorrect = 1;
                            if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                                $isMissing = 1; 
                                $personName = $getMissingPerson[0]['missingname'];
                                $gender = $getMissingPerson[0]['missinggender'];
                                $aadhar = $getMissingPerson[0]['missingaadhar'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                $age = ($from->diff($to)->y).'- Years';
                                if(count($getIfPersonAvailable) > 0)
                                {
                                    $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                }else{
                                    $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                }
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }   
                            }
                        }   
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                }
            }else{
                if(count($getIfPersonAvailable) > 0)
                {
                    $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                }else{
                    $getUserDetail = array();
                }
                if(count($getUserDetail) > 0)
                {
                    $isAadharCorrect = 1;
                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                    {
                        $isDobCorrect = 1;
                    }
                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                    {
                        $isGenderCorrect = 1;
                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                            $isMissing = 0; 
                            $personName = $getUserDetail[0]['aadharname'];
                            $gender = $getUserDetail[0]['gender'];
                            $aadhar = $getUserDetail[0]['aadhar_id'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getUserDetail[0]['dob']);
                            $age = ($from->diff($to)->y).'- Years';
                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }
            }
            if($confidence > 83)
            {
                $insertdata = array(
                    'inActivePhoto' => $newImagePath,
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'gender' => $_POST['gender'],
                    'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                    'idNumber' => $_POST['panNumber'],
                    'idType' => $_POST['idType'],
                );   
                $this->db->where('Id',$_SESSION['checkId']);
                $update = $this->db->update('checkperson',$insertdata);
                if($update)
                {
                    if($confidence > 83)
                    {
                        if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                        {
                            $response = array(
                                'status' => 'success',
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                                'message' => 'Person Found',
                                'isVisible' => $isVisible,
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => $userphoto
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                            );
                            echo json_encode($response);   
                        }   
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Face Not Matched'
                        );
                        echo json_encode($response);    
                    }
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Face Not Matched'
                );
                echo json_encode($response);    
            }
        }   
    }
    
    function checkPerson($para = '')
    {
        if($para == '')
        {
            if(isset($_SESSION['landingMob']))
            {
                $page_data['control'] = 'user';
                $page_data['title'] = 'Search Person';
                $page_data['pn'] = 1;
                if(isset($_GET['pn']))
                {
                    $page_data['pn'] = $_GET['pn'];    
                }
                $this->load->view('NonKyc/common/header',$page_data); 
                $this->load->view('NonKyc/checkperson');
                $this->load->view('NonKyc/common/footer'); 
            }else{
                redirect(base_url().'login','refresh');
            }
        }else
        {
            if($para == 'step1')
            {
                $getPreviousDetail = $this->db->query('select * from checkperson where Id='.$_SESSION['checkId'])->result_array();
                if($getPreviousDetail[0]['otp'] == $_POST['otp'])
                {
                    $updatedata = array(
                        'personMob' => $_POST['mobileNumber'],
                        'otp' => NULL
                    );
                    $this->db->where('Id',$_SESSION['checkId']);
                    $update = $this->db->update('checkperson',$updatedata);
                    $response['status'] = 'success';
                }else{
                    $response['status'] = 'error';
                    $response['message'] = 'Invalid OTP';
                }
                echo json_encode($response);
            }
            if($para == 'step2')
            {
                $personName = '';
                $gender = '';
                $aadhar = '';
                $gender = '';
                $isVerified = 'No';
                $isVisible = 0;
                $age = '';
                $address = '';
                $isUserFound = 0;
                $isWanted = 0;
                $isMissing = 0;
                $isGenderCorrect = 0;
                $isAadharCorrect = 0;
                $isDobCorrect = 0;
                $_POST['dob'] = $_POST['date'].'-'.$_POST['month'].'-'.$_POST['year'];
                $idNumber = '';
                if($_POST['idType'] == 'aadhar')
                {
                    $idNumber = $_POST['aadhar_id'];
                    if(strlen($_POST['aadhar_id']) != 12)
                    {
                        $response = array(
                            'status' => 'error',
                            'message' => 'Aadhar number must be 12 digit number'
                        );
                        echo json_encode($response);
                        return;
                    }
                    $getIfPersonAvailable = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'" and gender="'.$_POST['gender'].'" and dob="'.date('Y-m-d',strtotime($_POST['dob'])).'"')->result_array();
                    $userphoto = '';
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $isVisible = $getIfPersonAvailable[0]['visibility'];
                        $isVerified = 1;
                        $isUserFound = 1;
                        $personName = $getIfPersonAvailable[0]['aadharname'];
                        $gender = $getIfPersonAvailable[0]['gender'];
                        $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                        $age = ($from->diff($to)->y).'- Years';
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
                    }
                    $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$_POST['aadhar_id'].'" and isFound != 1')->result_array();
                    if(count($getMissingPerson) > 0)
                    {
                        $isAadharCorrect = 1;
                        if($getMissingPerson[0]['missinggender'] != NULL)
                        {
                            if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1;
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getMissingPerson[0]['missinggender'];
                                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    if(count($getIfPersonAvailable) > 0)
                                    {
                                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                    }else{
                                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                    }
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }else{
                            $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                            if(count($getFullDetail) > 0)
                            {
                                if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                }
                                if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                                {
                                    $isGenderCorrect = 1;
                                    if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                        $isMissing = 1; 
                                        $personName = $getMissingPerson[0]['missingname'];
                                        $gender = $getMissingPerson[0]['missinggender'];
                                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                                        $from=new DateTime(date('Y-m-d'));
                                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                        $age = ($from->diff($to)->y).'- Years';
                                        if(count($getIfPersonAvailable) > 0)
                                        {
                                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                        }else{
                                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                        }
                                        if(count($getIfPersonAvailable) == 0)
                                        {
                                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                        }   
                                    }
                                }   
                            }else{
                                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'"')->result_array();
                                if(count($getUserDetail) > 0)
                                {
                                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                    }
                                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                    {
                                        $isGenderCorrect = 1;
                                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                        {
                                            $isDobCorrect = 1;
                                            $isMissing = 1; 
                                            $personName = $getUserDetail[0]['aadharname'];
                                            $gender = $getUserDetail[0]['gender'];
                                            $aadhar = $getUserDetail[0]['aadhar_id'];
                                            $from=new DateTime(date('Y-m-d'));
                                            $to   = new DateTime($getUserDetail[0]['dob']);
                                            $age = ($from->diff($to)->y).'- Years';
                                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                            if(count($getIfPersonAvailable) == 0)
                                            {
                                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                            }   
                                        }
                                    }
                                }
                            }
                        }
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            $isAadharCorrect = 1;
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 0; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'isPersonFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'gender' => $_POST['gender'],
                        'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                        'idNumber' => $_POST['aadhar_id'],
                        'idType' => $_POST['idType'],
                    );
                    $this->db->where('Id',$_SESSION['checkId']);
                    $update = $this->db->update('checkperson',$insertdata);
                    if($update)
                    {
                        if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                        {
                            $response = array(
                                'status' => 'success',
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                                'message' => 'Person Found',
                                'isVisible' => $isVisible,
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => $userphoto
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }
                if($_POST['idType'] == 'dl')
                {
                    $idNumber = $_POST['dlNumber'];
                    $getIfAlready = $this->db->query('select * from dllist where dlNumber="'.$idNumber.'"')->result_array();
                    if(count($getIfAlready) > 0)
                    {
                        $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
                    }else{
                        $getIfPersonAvailable = array();
                    }
                    $userphoto = '';
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $isVisible = $getIfPersonAvailable[0]['visibility'];
                        $isVerified = 1;
                        $isUserFound = 1;
                        $personName = $getIfPersonAvailable[0]['aadharname'];
                        $gender = $getIfPersonAvailable[0]['gender'];
                        $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                        $age = ($from->diff($to)->y).'- Years';
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
                    }
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
                    }else{
                        $getMissingPerson = array();
                    }
                    if(count($getMissingPerson) > 0)
                    {
                        $isAadharCorrect = 1;
                        if($getMissingPerson[0]['missinggender'] != NULL)
                        {
                            if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1;
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getMissingPerson[0]['missinggender'];
                                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    if(count($getIfPersonAvailable) > 0)
                                    {
                                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                    }else{
                                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                    }
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }else{
                            $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                            if(count($getFullDetail) > 0)
                            {
                                if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                }
                                if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                                {
                                    $isGenderCorrect = 1;
                                    if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                        $isMissing = 1; 
                                        $personName = $getMissingPerson[0]['missingname'];
                                        $gender = $getMissingPerson[0]['missinggender'];
                                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                                        $from=new DateTime(date('Y-m-d'));
                                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                        $age = ($from->diff($to)->y).'- Years';
                                        if(count($getIfPersonAvailable) > 0)
                                        {
                                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                        }else{
                                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                        }
                                        if(count($getIfPersonAvailable) == 0)
                                        {
                                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                        }   
                                    }
                                }   
                            }else{
                                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                                if(count($getUserDetail) > 0)
                                {
                                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                    }
                                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                    {
                                        $isGenderCorrect = 1;
                                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                        {
                                            $isDobCorrect = 1;
                                            $isMissing = 1; 
                                            $personName = $getUserDetail[0]['aadharname'];
                                            $gender = $getUserDetail[0]['gender'];
                                            $aadhar = $getUserDetail[0]['aadhar_id'];
                                            $from=new DateTime(date('Y-m-d'));
                                            $to   = new DateTime($getUserDetail[0]['dob']);
                                            $age = ($from->diff($to)->y).'- Years';
                                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                            
                                            if(count($getIfPersonAvailable) == 0)
                                            {
                                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                            }   
                                        }
                                    }
                                }
                            }
                        }
                    }else{
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                        }else{
                            $getUserDetail = array();
                        }
                        if(count($getUserDetail) > 0)
                        {
                            $isAadharCorrect = 1;
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 0; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'isPersonFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'gender' => $_POST['gender'],
                        'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                        'idNumber' => $_POST['dlNumber'],
                        'idType' => $_POST['idType'],
                    );
                    $this->db->where('Id',$_SESSION['checkId']);
                    $update = $this->db->update('checkperson',$insertdata);
                    if($insert)
                    {
                        if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                        {
                            $response = array(
                                'status' => 'success',
                                'isVisible' => $isVisible,
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                                'message' => 'Person Found',
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => $userphoto
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }
                if($_POST['idType'] == 'voter')
                {
                    $idNumber = $_POST['voterId'];
                    $getIfAlready = $this->db->query('select * from voterslist where voterNumber="'.$idNumber.'"')->result_array();
                    if(count($getIfAlready) > 0)
                    {
                        $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'].' and gender="'.$_POST['gender'].'" and dob="'.date('Y-m-d',strtotime($_POST['dob'])).'"')->result_array();   
                    }else{
                        $getIfPersonAvailable = array();
                    }
                    $userphoto = '';
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $isVisible = $getIfPersonAvailable[0]['visibility'];
                        $isUserFound = 1;
                        $isVerified = 1;
                        $personName = $getIfPersonAvailable[0]['aadharname'];
                        $gender = $getIfPersonAvailable[0]['gender'];
                        $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                        $age = ($from->diff($to)->y).'- Years';
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
                    }
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
                    }else{
                        $getMissingPerson = array();
                    }
                    if(count($getMissingPerson) > 0)
                    {
                        $isAadharCorrect = 1;
                        if($getMissingPerson[0]['missinggender'] != NULL)
                        {
                            if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1;
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getMissingPerson[0]['missinggender'];
                                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    if(count($getIfPersonAvailable) > 0)
                                    {
                                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                    }else{
                                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                    }
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }else{
                            $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                            if(count($getFullDetail) > 0)
                            {
                                if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                }
                                if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                                {
                                    $isGenderCorrect = 1;
                                    if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                        $isMissing = 1; 
                                        $personName = $getMissingPerson[0]['missingname'];
                                        $gender = $getMissingPerson[0]['missinggender'];
                                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                                        $from=new DateTime(date('Y-m-d'));
                                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                        $age = ($from->diff($to)->y).'- Years';
                                        if(count($getIfPersonAvailable) > 0)
                                        {
                                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                        }else{
                                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                        }
                                        if(count($getIfPersonAvailable) == 0)
                                        {
                                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                        }   
                                    }
                                }   
                            }else{
                                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                                if(count($getUserDetail) > 0)
                                {
                                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                    }
                                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                    {
                                        $isGenderCorrect = 1;
                                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                        {
                                            $isDobCorrect = 1;
                                            $isMissing = 1; 
                                            $personName = $getUserDetail[0]['aadharname'];
                                            $gender = $getUserDetail[0]['gender'];
                                            $aadhar = $getUserDetail[0]['aadhar_id'];
                                            $from=new DateTime(date('Y-m-d'));
                                            $to   = new DateTime($getUserDetail[0]['dob']);
                                            $age = ($from->diff($to)->y).'- Years';
                                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                            if(count($getIfPersonAvailable) == 0)
                                            {
                                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                            }   
                                        }
                                    }
                                }
                            }
                        }
                    }else{
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                        }else{
                            $getUserDetail = array();
                        }
                        if(count($getUserDetail) > 0)
                        {
                            $isAadharCorrect = 1;
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 0; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'isPersonFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'gender' => $_POST['gender'],
                        'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                        'idNumber' => $_POST['voterId'],
                        'idType' => $_POST['idType'],
                    );
                    $this->db->where('Id',$_SESSION['checkId']);
                    $update = $this->db->update('checkperson',$insertdata);
                    if($update)
                    {
                        if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                        {
                            $response = array(
                                'status' => 'success',
                                'isVisible'=> $isVisible,
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                                'message' => 'Person Found',
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => $userphoto
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }
                if($_POST['idType'] == 'pan')
                {
                    $idNumber = $_POST['panNumber'];
                    $getIfAlready = $this->db->query('select * from panlist where panNumber="'.$idNumber.'"')->result_array();
                    if(count($getIfAlready) > 0)
                    {
                        $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
                    }else{
                        $getIfPersonAvailable = array();
                    }
                    $userphoto = '';
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $isVisible = $getIfPersonAvailable[0]['visibility'];
                        $isUserFound = 1;
                        $isVerified = 1;
                        $personName = $getIfPersonAvailable[0]['aadharname'];
                        $gender = $getIfPersonAvailable[0]['gender'];
                        $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                        $age = ($from->diff($to)->y).'- Years';
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
                    }
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
                    }else{
                        $getMissingPerson = array();
                    }
                    if(count($getMissingPerson) > 0)
                    {
                        $isAadharCorrect = 1;
                        if($getMissingPerson[0]['missinggender'] != NULL)
                        {
                            if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1;
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getMissingPerson[0]['missinggender'];
                                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    if(count($getIfPersonAvailable) > 0)
                                    {
                                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                    }else{
                                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                    }
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }else{
                            $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                            if(count($getFullDetail) > 0)
                            {
                                if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                }
                                if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                                {
                                    $isGenderCorrect = 1;
                                    if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                        $isMissing = 1; 
                                        $personName = $getMissingPerson[0]['missingname'];
                                        $gender = $getMissingPerson[0]['missinggender'];
                                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                                        $from=new DateTime(date('Y-m-d'));
                                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                        $age = ($from->diff($to)->y).'- Years';
                                        if(count($getIfPersonAvailable) > 0)
                                        {
                                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                        }else{
                                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                        }
                                        if(count($getIfPersonAvailable) == 0)
                                        {
                                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                        }   
                                    }
                                }   
                            }else{
                                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                                if(count($getUserDetail) > 0)
                                {
                                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                    }
                                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                    {
                                        $isGenderCorrect = 1;
                                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                        {
                                            $isDobCorrect = 1;
                                            $isMissing = 1; 
                                            $personName = $getUserDetail[0]['aadharname'];
                                            $gender = $getUserDetail[0]['gender'];
                                            $aadhar = $getUserDetail[0]['aadhar_id'];
                                            $from=new DateTime(date('Y-m-d'));
                                            $to   = new DateTime($getUserDetail[0]['dob']);
                                            $age = ($from->diff($to)->y).'- Years';
                                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                            if(count($getIfPersonAvailable) == 0)
                                            {
                                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                            }   
                                        }
                                    }
                                }
                            }
                        }
                    }else{
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                        }else{
                            $getUserDetail = array();
                        }
                        if(count($getUserDetail) > 0)
                        {
                            $isAadharCorrect = 1;
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 0; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'isPersonFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'gender' => $_POST['gender'],
                        'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                        'idNumber' => $_POST['panNumber'],
                        'idType' => $_POST['idType'],
                    );
                    $this->db->where('Id',$_SESSION['checkId']);
                    $update = $this->db->update('checkperson',$insertdata);
                    if($update)
                    {
                        if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                        {
                            $response = array(
                                'status' => 'success',
                                'isVisible' => $isVisible,
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                                'message' => 'Person Found',
                                'isMissing' => $isMissing,
                                'isRegistered' => $isUserFound,
                                'isVerified' => $isVerified,
                                'image' => $userphoto
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => $isDobCorrect,
                                'isGenderCorrect' => $isGenderCorrect,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }   
            }
        }
    }
    
    function checkVehicleIdAfterLogin()
    {
        $personName = '';
        $vehicleNumber = '';
        $city = '';
        $state = '';
        $isVerified = 'No';
        $isVisible = 0;
        $isUserFound = 0;
        $isMissing = 0;
        $isAadharCorrect = 0;
        $idNumber = '';
        if($_POST['searchType'] == 'vehicleNumber')
        {
            $idNumber = $_POST['idNumber'];
            $getIfVehicleAvailable = $this->db->query('select * from vehicles where rcNumber="'.$_POST['idNumber'].'" and isdeleted!=1 and paymentStatus=1')->result_array();
            $userphoto = '';
            if(count($getIfVehicleAvailable) > 0)
            {
                $vehicleNumber = $getIfVehicleAvailable[0]['rcNumber'];
                $getUserDetail = $this->db->query('select * from user where uid='.$getIfVehicleAvailable[0]['userId'])->result_array();
                $isAadharCorrect = 1;
                $isVisible = $getIfVehicleAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getUserDetail[0]['aadharname'];
                $city = $getUserDetail[0]['vtc'];
                $state = $getUserDetail[0]['state'];
            }
            $getMissingVehicle = $this->db->query('select * from missingvehicle where rcNumber="'.$_POST['idNumber'].'" and isFound !=1 and expiryDate >= "'.date('d-m-Y').'"')->result_array();
            if(count($getMissingVehicle) > 0)
            {
                $vehicleNumber = $getMissingVehicle[0]['rcNumber'];
                $getUserDetail = $this->db->query('select * from user where uid='.$getMissingVehicle[0]['userId'])->result_array();
                $isAadharCorrect = 1;
                $isMissing = 1;
                $isVisible = 1;
                $city = $getUserDetail[0]['vtc'];
                $state = $getUserDetail[0]['state'];
                $personName = $getMissingVehicle[0]['ownerName'];
            }
            $insertdata = array(
                'personMob' => $_SESSION['loginmob'],
                'isRegistered' => 1,
                'isMissing' => $isMissing,
                'isPersonFound' => $isUserFound,
                'visibility' => $isVisible,
                'idNumber' => $_POST['idNumber'],
                'vehicleType' => $_POST['vehicleType'],
                'searchType' => $_POST['searchType'],
            );
            $insert = $this->db->insert('searchVehicle',$insertdata);
            if($insert)
            {
                if($isAadharCorrect == 1)
                {
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'vehicleNumber' => $vehicleNumber,
                        'city' => $city,
                        'state' => $state,
                        'isAadharCorrect' => $isAadharCorrect,
                        'message' => 'Vehicle Found',
                        'isVisible' => $isVisible,
                        'isMissing' => $isMissing,
                        'isVerified' => $isVerified,
                        'isRegistered' => $isUserFound,
                    );
                    echo json_encode($response);   
                    $_SESSION['vehicleLoggedInId'] = $this->db->insert_id();
                }else{
                    $response = array(
                        'status' => 'incorrect',
                        'isAadharCorrect' => $isAadharCorrect,
                    );
                    echo json_encode($response);   
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
        if($_POST['searchType'] == 'engineNumber')
        {
            $idNumber = $_POST['idNumber'];
            $getIfVehicleAvailable = $this->db->query('select * from vehicles where engine_number="'.$_POST['idNumber'].'" and isdeleted!=1 and paymentStatus=1')->result_array();
            $userphoto = '';
            if(count($getIfVehicleAvailable) > 0)
            {
                $vehicleNumber = $getIfVehicleAvailable[0]['rcNumber'];
                $getUserDetail = $this->db->query('select * from user where uid='.$getIfVehicleAvailable[0]['userId'])->result_array();
                $isAadharCorrect = 1;
                $isVisible = $getIfVehicleAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getUserDetail[0]['aadharname'];
                $city = $getUserDetail[0]['vtc'];
                $state = $getUserDetail[0]['state'];
            }
            $getMissingVehicle = $this->db->query('select * from missingvehicle where engineNumber="'.$_POST['idNumber'].'" and isFound !=1 and expiryDate >= "'.date('d-m-Y').'"')->result_array();
            if(count($getMissingVehicle) > 0)
            {
                $vehicleNumber = $getMissingVehicle[0]['rcNumber'];
                $getUserDetail = $this->db->query('select * from user where uid='.$getMissingVehicle[0]['userId'])->result_array();
                $isAadharCorrect = 1;
                $isVisible = 1;
                $isMissing = 1;
                $personName = $getMissingVehicle[0]['ownerName'];
                $city = $getUserDetail[0]['vtc'];
                $state = $getUserDetail[0]['state'];
            }
            $insertdata = array(
                'personMob' => $_SESSION['loginmob'],
                'isRegistered' => 1,
                'isMissing' => $isMissing,
                'isPersonFound' => $isUserFound,
                'visibility' => $isVisible,
                'idNumber' => $_POST['idNumber'],
                'vehicleType' => $_POST['vehicleType'],
                'searchType' => $_POST['searchType'],
            );
            $insert = $this->db->insert('searchVehicle',$insertdata);
            if($insert)
            {
                if($isAadharCorrect == 1)
                {
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'city' => $city,
                        'state' => $state,
                        'vehicleNumber' => $vehicleNumber,
                        'isAadharCorrect' => $isAadharCorrect,
                        'message' => 'Vehicle Found',
                        'isVisible' => $isVisible,
                        'isMissing' => $isMissing,
                        'isVerified' => $isVerified,
                        'isRegistered' => $isUserFound,
                    );
                    echo json_encode($response);   
                    $_SESSION['vehicleLoggedInId'] = $this->db->insert_id();
                }else{
                    $response = array(
                        'status' => 'incorrect',
                        'isAadharCorrect' => $isAadharCorrect,
                    );
                    echo json_encode($response);   
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
        if($_POST['searchType'] == 'chassisNumber')
        {
            $idNumber = $_POST['idNumber'];
            $getIfVehicleAvailable = $this->db->query('select * from vehicles where chassis_number="'.$_POST['idNumber'].'" and isdeleted!=1 and paymentStatus=1')->result_array();
            $userphoto = '';
            if(count($getIfVehicleAvailable) > 0)
            {
                $vehicleNumber = $getIfVehicleAvailable[0]['rcNumber'];
                $getUserDetail = $this->db->query('select * from user where uid='.$getIfVehicleAvailable[0]['userId'])->result_array();
                $isAadharCorrect = 1;
                $isVisible = $getIfVehicleAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getUserDetail[0]['aadharname'];
                $city = $getUserDetail[0]['vtc'];
                $state = $getUserDetail[0]['state'];
            }
            $getMissingVehicle = $this->db->query('select * from missingvehicle where chasisNumber="'.$_POST['idNumber'].'" and isFound !=1 and expiryDate >= "'.date('d-m-Y').'"')->result_array();
            if(count($getMissingVehicle) > 0)
            {
                $vehicleNumber = $getMissingVehicle[0]['rcNumber'];
                $getUserDetail = $this->db->query('select * from user where uid='.$getMissingVehicle[0]['userId'])->result_array();
                $isAadharCorrect = 1;
                $isMissing = 1;
                $isVisible = 1;
                $personName = $getMissingVehicle[0]['ownerName'];
                $city = $getUserDetail[0]['vtc'];
                $state = $getUserDetail[0]['state'];
            }
            $insertdata = array(
                'personMob' => $_SESSION['loginmob'],
                'isRegistered' => 1,
                'isMissing' => $isMissing,
                'isPersonFound' => $isUserFound,
                'visibility' => $isVisible,
                'idNumber' => $_POST['idNumber'],
                'vehicleType' => $_POST['vehicleType'],
                'searchType' => $_POST['searchType'],
            );
            $insert = $this->db->insert('searchVehicle',$insertdata);
            if($insert)
            {
                if($isAadharCorrect == 1)
                {
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'vehicleNumber' => $vehicleNumber,
                        'city' => $city,
                        'state' => $state,
                        'isAadharCorrect' => $isAadharCorrect,
                        'message' => 'Vehicle Found',
                        'isVisible' => $isVisible,
                        'isMissing' => $isMissing,
                        'isVerified' => $isVerified,
                        'isRegistered' => $isUserFound,
                    );
                    echo json_encode($response);   
                    $_SESSION['vehicleLoggedInId'] = $this->db->insert_id();
                }else{
                    $response = array(
                        'status' => 'incorrect',
                        'isAadharCorrect' => $isAadharCorrect,
                    );
                    echo json_encode($response);   
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
    }
    
    function checkVehicleId()
    {
        $personName = '';
        $city = '';
        $state = '';
        $isVerified = 'No';
        $isVisible = 0;
        $vehicleNumber = '';
        $isUserFound = 0;
        $isMissing = 0;
        $isAadharCorrect = 0;
        $idNumber = '';
        if($_POST['searchType'] == 'vehicleNumber')
        {
            $idNumber = $_POST['idNumber'];
            $getIfVehicleAvailable = $this->db->query('select * from vehicles where rcNumber="'.$_POST['idNumber'].'" and isdeleted!=1 and paymentStatus=1')->result_array();
            $userphoto = '';
            if(count($getIfVehicleAvailable) > 0)
            {
                $getUserDetail = $this->db->query('select * from user where uid='.$getIfVehicleAvailable[0]['userId'])->result_array();
                $isAadharCorrect = 1;
                $isVisible = $getIfVehicleAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getUserDetail[0]['aadharname'];
                $vehicleNumber = $getIfVehicleAvailable[0]['rcNumber'];
                $city = $getUserDetail[0]['vtc'];
                $state = $getUserDetail[0]['state'];
            }
            $getMissingVehicle = $this->db->query('select * from missingvehicle where rcNumber="'.$_POST['idNumber'].'" and isFound !=1 and expiryDate >= "'.date('d-m-Y').'"')->result_array();
            if(count($getMissingVehicle) > 0)
            {
                $vehicleNumber = $getMissingVehicle[0]['rcNumber'];
                $getUserDetail = $this->db->query('select * from user where uid='.$getMissingVehicle[0]['userId'])->result_array();
                $isAadharCorrect = 1;
                $isMissing = 1;
                $isVisible = 1;
                $personName = $getMissingVehicle[0]['ownerName'];
                $city = $getUserDetail[0]['vtc'];
                $state = $getUserDetail[0]['state'];
            }
            $insertdata = array(
                'isPersonFound' => $isUserFound,
                'isMissing' => $isMissing,
                'idNumber' => $_POST['idNumber'],
                'vehicleType' => $_POST['vehicleType'],
                'searchType' => $_POST['searchType'],
            );
            $this->db->where('Id',$_SESSION['checkVehicleId']);
            $update = $this->db->update('searchVehicle',$insertdata);
            if($update)
            {
                if($isAadharCorrect == 1)
                {
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'city' => $city,
                        'vehicleNumber' => $vehicleNumber,
                        'state' => $state,
                        'isAadharCorrect' => $isAadharCorrect,
                        'message' => 'Vehicle Found',
                        'isVisible' => $isVisible,
                        'isMissing' => $isMissing,
                        'isVerified' => $isVerified,
                        'isRegistered' => $isUserFound,
                    );
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'incorrect',
                        'isAadharCorrect' => $isAadharCorrect,
                    );
                    echo json_encode($response);   
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
        if($_POST['searchType'] == 'engineNumber')
        {
            $idNumber = $_POST['idNumber'];
            $getIfVehicleAvailable = $this->db->query('select * from vehicles where engine_number="'.$_POST['idNumber'].'" and isdeleted!=1 and paymentStatus=1')->result_array();
            $userphoto = '';
            if(count($getIfVehicleAvailable) > 0)
            {
                $vehicleNumber = $getIfVehicleAvailable[0]['rcNumber'];
                $getUserDetail = $this->db->query('select * from user where uid='.$getIfVehicleAvailable[0]['userId'])->result_array();
                $isAadharCorrect = 1;
                $isVisible = $getIfVehicleAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getUserDetail[0]['aadharname'];
                $city = $getUserDetail[0]['vtc'];
                $state = $getUserDetail[0]['state'];
            }
            $getMissingVehicle = $this->db->query('select * from missingvehicle where engineNumber="'.$_POST['idNumber'].'" and isFound !=1 and expiryDate >= "'.date('d-m-Y').'"')->result_array();
            if(count($getMissingVehicle) > 0)
            {
                $vehicleNumber = $getMissingVehicle[0]['rcNumber'];
                $getUserDetail = $this->db->query('select * from user where uid='.$getMissingVehicle[0]['userId'])->result_array();
                $isAadharCorrect = 1;
                $isVisible = 1;
                $isMissing = 1;
                $personName = $getMissingVehicle[0]['ownerName'];
                $city = $getUserDetail[0]['vtc'];
                $state = $getUserDetail[0]['state'];
            }
            $insertdata = array(
                'isPersonFound' => $isUserFound,
                'isMissing' => $isMissing,
                'idNumber' => $_POST['idNumber'],
                'vehicleType' => $_POST['vehicleType'],
                'searchType' => $_POST['searchType'],
            );
            $this->db->where('Id',$_SESSION['checkVehicleId']);
            $update = $this->db->update('searchVehicle',$insertdata);
            if($update)
            {
                if($isAadharCorrect == 1)
                {
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'city' => $city,
                        'vehicleNumber' => $vehicleNumber,
                        'state' => $state,
                        'isAadharCorrect' => $isAadharCorrect,
                        'message' => 'Vehicle Found',
                        'isVisible' => $isVisible,
                        'isMissing' => $isMissing,
                        'isVerified' => $isVerified,
                        'isRegistered' => $isUserFound,
                    );
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'incorrect',
                        'isAadharCorrect' => $isAadharCorrect,
                    );
                    echo json_encode($response);   
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
        if($_POST['searchType'] == 'chassisNumber')
        {
            $idNumber = $_POST['idNumber'];
            $getIfVehicleAvailable = $this->db->query('select * from vehicles where chassis_number="'.$_POST['idNumber'].'" and isdeleted!=1 and paymentStatus=1')->result_array();
            $userphoto = '';
            if(count($getIfVehicleAvailable) > 0)
            {
                $vehicleNumber = $getIfVehicleAvailable[0]['rcNumber'];
                $getUserDetail = $this->db->query('select * from user where uid='.$getIfVehicleAvailable[0]['userId'])->result_array();
                $isAadharCorrect = 1;
                $isVisible = $getIfVehicleAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getUserDetail[0]['aadharname'];
                $city = $getUserDetail[0]['vtc'];
                $state = $getUserDetail[0]['state'];
            }
            $getMissingVehicle = $this->db->query('select * from missingvehicle where chasisNumber="'.$_POST['idNumber'].'" and isFound !=1 and expiryDate >= "'.date('d-m-Y').'"')->result_array();
            if(count($getMissingVehicle) > 0)
            {
                $vehicleNumber = $getMissingVehicle[0]['rcNumber'];
                $getUserDetail = $this->db->query('select * from user where uid='.$getMissingVehicle[0]['userId'])->result_array();
                $isAadharCorrect = 1;
                $isVisible = 1;
                $isMissing = 1;
                $personName = $getMissingVehicle[0]['ownerName'];
                $city = $getUserDetail[0]['vtc'];
                $state = $getUserDetail[0]['state'];
            }
            $insertdata = array(
                'isPersonFound' => $isUserFound,
                'isMissing' => $isMissing,
                'idNumber' => $_POST['idNumber'],
                'vehicleType' => $_POST['vehicleType'],
                'searchType' => $_POST['searchType'],
            );
            $this->db->where('Id',$_SESSION['checkVehicleId']);
            $update = $this->db->update('searchVehicle',$insertdata);
            if($update)
            {
                if($isAadharCorrect == 1)
                {
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'city' => $city,
                        'vehicleNumber' => $vehicleNumber,
                        'state' => $state,
                        'isAadharCorrect' => $isAadharCorrect,
                        'message' => 'Vehicle Found',
                        'isVisible' => $isVisible,
                        'isMissing' => $isMissing,
                        'isVerified' => $isVerified,
                        'isRegistered' => $isUserFound,
                    );
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'incorrect',
                        'isAadharCorrect' => $isAadharCorrect,
                    );
                    echo json_encode($response);   
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
    }
    
    function criminalRecordAfterLogin()
    {
        if(isset($_SESSION['landingMob']))
        {
            if(isset($_SESSION['searchId']))
            {
                $page_data['checkDetail'] = $this->db->query('select * from searchpersonhistory where Id='.$_SESSION['searchId'])->result_array();
                if($page_data['checkDetail'][0]['criminalIds'] != NULL)
                {
                    $page_data['criminalDetail'] = $this->db->query('select * from criminals where Id In('.$page_data['checkDetail'][0]['criminalIds'].')')->result_array();
                }else{
                    $page_data['criminalDetail'] = array();
                }
                if($page_data['checkDetail'][0]['wantedIds'] != NULL)
                {
                    $page_data['wantedDetail'] = $this->db->query('select * from criminals where Id In('.$page_data['checkDetail'][0]['wantedIds'].')')->result_array();
                }else{
                    $page_data['wantedDetail'] = array();
                }
                $page_data['control'] = 'user';
                $page_data['title'] = 'Criminal Records';
                $page_data['page_name'] = 'criminalRecord';
                $this->load->view('nonkyc/index', $page_data);
            }else{
                redirect($this->getSettings('noVehicleId'),'refresh');
            }
        }else{
            redirect(base_url().'login','refresh');
        }
    }
    
    function wantedRecordAfterLogin()
    {
        if(isset($_SESSION['landingMob']))
        {
            if(isset($_SESSION['searchId']))
            {
                $page_data['checkDetail'] = $this->db->query('select * from searchpersonhistory where Id='.$_SESSION['searchId'])->result_array();
                if($page_data['checkDetail'][0]['criminalIds'] != NULL)
                {
                    $page_data['criminalDetail'] = $this->db->query('select * from criminals where Id In('.$page_data['checkDetail'][0]['criminalIds'].')')->result_array();
                }else{
                    $page_data['criminalDetail'] = array();
                }
                if($page_data['checkDetail'][0]['wantedIds'] != NULL)
                {
                    $page_data['wantedDetail'] = $this->db->query('select * from criminals where Id In('.$page_data['checkDetail'][0]['wantedIds'].')')->result_array();
                }else{
                    $page_data['wantedDetail'] = array();
                }
                $page_data['control'] = 'user';
                $page_data['title'] = 'Criminal Records';
                $page_data['page_name'] = 'wantedRecord';
                $this->load->view('nonkyc/index', $page_data);
            }else{
                redirect($this->getSettings('noVehicleId'),'refresh');
            }
        }else{
            redirect(base_url().'login','refresh');
        }
    }
    
    function criminalRecord()
    {
        if(isset($_SESSION['landingMob']))
        {
            if(isset($_SESSION['checkId']))
            {
                $page_data['checkDetail'] = $this->db->query('select * from checkperson where Id='.$_SESSION['checkId'])->result_array();
                if($page_data['checkDetail'][0]['criminalIds'] != NULL)
                {
                    $page_data['criminalDetail'] = $this->db->query('select * from criminals where Id In('.$page_data['checkDetail'][0]['criminalIds'].')')->result_array();
                }else{
                    $page_data['criminalDetail'] = array();
                }
                if($page_data['checkDetail'][0]['wantedIds'] != NULL)
                {
                    $page_data['wantedDetail'] = $this->db->query('select * from criminals where Id In('.$page_data['checkDetail'][0]['wantedIds'].')')->result_array();
                }else{
                    $page_data['wantedDetail'] = array();
                }
                $page_data['control'] = 'user';
                $page_data['title'] = 'Criminal Records';
                $this->load->view('NonKyc/common/header',$page_data); 
                $this->load->view('NonKyc/criminalRecord');
                $this->load->view('NonKyc/common/footer'); 
            }else{
                redirect($this->getSettings('noVehicleId'),'refresh');
            }
        }else{
            redirect(base_url().'login','refresh');
        }   
    }
    
    function checkPersonId()
    {
        $personName = '';
        $gender = '';
        $aadhar = '';
        $gender = '';
        $isVerified = 'No';
        $isVisible = 0;
        $age = '';
        $isWanted = 0;
        $isCriminal = 0;
        $address = '';
        $wantedId = array();
        $criminalId = array();
        $isUserFound = 0;
        $isMissing = 0;
        $isAadharCorrect = 0;
        $idNumber = '';
        if($_POST['idType'] == 'aadhar')
        {
            $idNumber = $_POST['idNumber'];
            if(strlen($_POST['idNumber']) != 12)
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Aadhar number must be 12 digit number'
                );
                echo json_encode($response);
                return;
            }
            $getIfPersonAvailable = $this->db->query('select * from user where aadhar_id="'.$_POST['idNumber'].'"')->result_array();
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isVisible = $getIfPersonAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y).'- Years';
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            $getIfWantedAvailable = $this->db->query('select * from criminals where aadharNumber="'.$_POST['idNumber'].'" and isFinalSubmitted=1 and type="wanted" and status="Active"')->result_array();
            if(count($getIfWantedAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isWanted = 1;
                $personName = $getIfWantedAvailable[0]['personName'];
                $gender = $getIfWantedAvailable[0]['gender'];
                $aadhar = $getIfWantedAvailable[0]['aadharNumber'];
                if($getIfWantedAvailable[0]['dob'] != '0000-00-00')
                {
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getIfWantedAvailable[0]['dob']);
                    $age = ($from->diff($to)->y).'- Years';
                }else{
                    $age = '';
                }
                $address = '';
                if($getIfWantedAvailable[0]['state'] != '')
                {
                    $address .= $getIfWantedAvailable[0]['state'];
                }
                if($getIfWantedAvailable[0]['district'] != '')
                {
                    if($address != '')
                    {
                        $address .= ' , '.$getIfWantedAvailable[0]['district'];
                    }else{
                        $address .= $getIfWantedAvailable[0]['district'];
                    }
                }
                if($getIfWantedAvailable[0]['city'] != '')
                {
                    if($address != '')
                    {
                        $address .= ' , '.$getIfWantedAvailable[0]['city'];
                    }else{
                        $address .= $getIfWantedAvailable[0]['city'];
                    }
                }
                $getPhotos = $this->db->query('select * from criminalphotos where crimeId='.$getIfWantedAvailable[0]['Id'])->result_array();
                if(count($getPhotos) > 0)
                {
                    $userphoto = base_url().''.(($getPhotos[0]['photourl'] != NULL) ? $getPhotos[0]['photourl'] : '');   
                }
                foreach($getIfWantedAvailable as $k=>$v)
                {
                    array_push($wantedId,$v['Id']);
                }
            }
            $getIfCriminalAvailable = $this->db->query('select * from criminals where aadharNumber="'.$_POST['idNumber'].'" and isFinalSubmitted=1 and type="criminal" and status="Active"')->result_array();
            if(count($getIfCriminalAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isCriminal = 1;
                $personName = $getIfCriminalAvailable[0]['personName'];
                $gender = $getIfCriminalAvailable[0]['gender'];
                $aadhar = $getIfCriminalAvailable[0]['aadharNumber'];
                if($getIfCriminalAvailable[0]['dob'] != '0000-00-00')
                {
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getIfCriminalAvailable[0]['dob']);
                    $age = ($from->diff($to)->y).'- Years';
                }else{
                    $age = '';
                }
                $address = '';
                if($getIfCriminalAvailable[0]['state'] != '')
                {
                    $address .= $getIfCriminalAvailable[0]['state'];
                }
                if($getIfCriminalAvailable[0]['district'] != '')
                {
                    if($address != '')
                    {
                        $address .= ' , '.$getIfCriminalAvailable[0]['district'];
                    }else{
                        $address .= $getIfCriminalAvailable[0]['district'];
                    }
                }
                if($getIfCriminalAvailable[0]['city'] != '')
                {
                    if($address != '')
                    {
                        $address .= ' , '.$getIfCriminalAvailable[0]['city'];
                    }else{
                        $address .= $getIfCriminalAvailable[0]['city'];
                    }
                }
                $getPhotos = $this->db->query('select * from criminalphotos where crimeId='.$getIfCriminalAvailable[0]['Id'])->result_array();
                if(count($getPhotos) > 0)
                {
                    $userphoto = base_url().''.(($getPhotos[0]['photourl'] != NULL) ? $getPhotos[0]['photourl'] : '');   
                }
                foreach($getIfCriminalAvailable as $k=>$v)
                {
                    array_push($criminalId,$v['Id']);
                }
            }
            $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$_POST['idNumber'].'" and isFound !=1')->result_array();
            if(count($getMissingPerson) > 0)
            {
                $isAadharCorrect = 1;
                if($getMissingPerson[0]['missinggender'] != NULL)
                {
                    $isMissing = 1;
                    $personName = $getMissingPerson[0]['missingname'];
                    $gender = $getMissingPerson[0]['missinggender'];
                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                    $age = ($from->diff($to)->y).'- Years';
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                    }else{
                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                    }
                    if(count($getIfPersonAvailable) == 0)
                    {
                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                    }   
                }else{
                    $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                    if(count($getFullDetail) > 0)
                    {
                        $isMissing = 1; 
                        $personName = $getMissingPerson[0]['missingname'];
                        $gender = $getMissingPerson[0]['missinggender'];
                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                        $age = ($from->diff($to)->y).'- Years';
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        }else{
                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                        }
                        if(count($getIfPersonAvailable) == 0)
                        {
                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                        }   
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['idNumber'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            $isMissing = 1; 
                            $personName = $getUserDetail[0]['aadharname'];
                            $gender = $getUserDetail[0]['gender'];
                            $aadhar = $getUserDetail[0]['aadhar_id'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getUserDetail[0]['dob']);
                            $age = ($from->diff($to)->y).'- Years';
                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }
            }else{
                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['idNumber'].'"')->result_array();
                if(count($getUserDetail) > 0)
                {
                    $isUserFound = 1;
                    $isAadharCorrect = 1;
                    $isMissing = 0; 
                    $personName = $getUserDetail[0]['aadharname'];
                    $gender = $getUserDetail[0]['gender'];
                    $aadhar = $getUserDetail[0]['aadhar_id'];
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getUserDetail[0]['dob']);
                    $age = ($from->diff($to)->y).'- Years';
                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                    if(count($getIfPersonAvailable) == 0)
                    {
                        $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                    }   
                }
            }
            $insertdata = array(
                'wantedIds' => implode(',',$wantedId),
                'criminalIds' => implode(',',$criminalId),
                'isPersonFound' => $isUserFound,
                'isMissing' => $isMissing,
                'idNumber' => $_POST['idNumber'],
                'idType' => $_POST['idType'],
            );
            $this->db->where('Id',$_SESSION['checkId']);
            $update = $this->db->update('checkperson',$insertdata);
            if($update)
            {
                if($isAadharCorrect == 1)
                {
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'isWanted' => $isWanted,
                        'isCriminal' => $isCriminal,
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => 1,
                        'isGenderCorrect' => 1,
                        'message' => 'Person Found',
                        'isVisible' => $isVisible,
                        'isMissing' => $isMissing,
                        'isVerified' => $isVerified,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto
                    );
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'incorrect',
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => 1,
                        'isGenderCorrect' => 1,
                    );
                    echo json_encode($response);   
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
        if($_POST['idType'] == 'dl')
        {
            $idNumber = $_POST['idNumber'];
            $getIfAlready = $this->db->query('select * from dllist where dlNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isVisible = $getIfPersonAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y).'- Years';
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getIfWantedAvailable = $this->db->query('select * from criminals where aadharNumber="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFinalSubmitted=1 and type="wanted" and status="Active"')->result_array();   
            }else{
                $getIfWantedAvailable = array();
            }
            if(count($getIfWantedAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isWanted = 1;
                $personName = $getIfWantedAvailable[0]['personName'];
                $gender = $getIfWantedAvailable[0]['gender'];
                $aadhar = $getIfWantedAvailable[0]['aadharNumber'];
                if($getIfWantedAvailable[0]['dob'] != '0000-00-00')
                {
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getIfWantedAvailable[0]['dob']);
                    $age = ($from->diff($to)->y).'- Years';
                }else{
                    $age = '';
                }
                $address = '';
                if($getIfWantedAvailable[0]['state'] != '')
                {
                    $address .= $getIfWantedAvailable[0]['state'];
                }
                if($getIfWantedAvailable[0]['district'] != '')
                {
                    if($address != '')
                    {
                        $address .= ' , '.$getIfWantedAvailable[0]['district'];
                    }else{
                        $address .= $getIfWantedAvailable[0]['district'];
                    }
                }
                if($getIfWantedAvailable[0]['city'] != '')
                {
                    if($address != '')
                    {
                        $address .= ' , '.$getIfWantedAvailable[0]['city'];
                    }else{
                        $address .= $getIfWantedAvailable[0]['city'];
                    }
                }
                $getPhotos = $this->db->query('select * from criminalphotos where crimeId='.$getIfWantedAvailable[0]['Id'])->result_array();
                if(count($getPhotos) > 0)
                {
                    $userphoto = base_url().''.(($getPhotos[0]['photourl'] != NULL) ? $getPhotos[0]['photourl'] : '');   
                }
                foreach($getIfWantedAvailable as $k=>$v)
                {
                    array_push($wantedId,$v['Id']);
                }
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getIfCriminalAvailable = $this->db->query('select * from criminals where aadharNumber="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFinalSubmitted=1 and type="criminal" and status="Active"')->result_array();   
            }else{
                $getIfCriminalAvailable = array();
            }
            if(count($getIfCriminalAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isCriminal = 1;
                $personName = $getIfCriminalAvailable[0]['personName'];
                $gender = $getIfCriminalAvailable[0]['gender'];
                $aadhar = $getIfCriminalAvailable[0]['aadharNumber'];
                if($getIfCriminalAvailable[0]['dob'] != '0000-00-00')
                {
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getIfCriminalAvailable[0]['dob']);
                    $age = ($from->diff($to)->y).'- Years';
                }else{
                    $age = '';
                }
                $address = '';
                if($getIfCriminalAvailable[0]['state'] != '')
                {
                    $address .= $getIfCriminalAvailable[0]['state'];
                }
                if($getIfCriminalAvailable[0]['district'] != '')
                {
                    if($address != '')
                    {
                        $address .= ' , '.$getIfCriminalAvailable[0]['district'];
                    }else{
                        $address .= $getIfCriminalAvailable[0]['district'];
                    }
                }
                if($getIfCriminalAvailable[0]['city'] != '')
                {
                    if($address != '')
                    {
                        $address .= ' , '.$getIfCriminalAvailable[0]['city'];
                    }else{
                        $address .= $getIfCriminalAvailable[0]['city'];
                    }
                }
                $getPhotos = $this->db->query('select * from criminalphotos where crimeId='.$getIfCriminalAvailable[0]['Id'])->result_array();
                if(count($getPhotos) > 0)
                {
                    $userphoto = base_url().''.(($getPhotos[0]['photourl'] != NULL) ? $getPhotos[0]['photourl'] : '');   
                }
                foreach($getIfCriminalAvailable as $k=>$v)
                {
                    array_push($criminalId,$v['Id']);
                }
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
            }else{
                $getMissingPerson = array();
            }
            if(count($getMissingPerson) > 0)
            {
                $isAadharCorrect = 1;
                if($getMissingPerson[0]['missinggender'] != NULL)
                {
                    $isMissing = 1;
                    $personName = $getMissingPerson[0]['missingname'];
                    $gender = $getMissingPerson[0]['missinggender'];
                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                    $age = ($from->diff($to)->y).'- Years';
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                    }else{
                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                    }
                    if(count($getIfPersonAvailable) == 0)
                    {
                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                    }   
                }else{
                    $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                    if(count($getFullDetail) > 0)
                    {
                        $isMissing = 1; 
                        $personName = $getMissingPerson[0]['missingname'];
                        $gender = $getMissingPerson[0]['missinggender'];
                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                        $age = ($from->diff($to)->y).'- Years';
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        }else{
                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                        }
                        if(count($getIfPersonAvailable) == 0)
                        {
                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                        }   
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            $isMissing = 1; 
                            $personName = $getUserDetail[0]['aadharname'];
                            $gender = $getUserDetail[0]['gender'];
                            $aadhar = $getUserDetail[0]['aadhar_id'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getUserDetail[0]['dob']);
                            $age = ($from->diff($to)->y).'- Years';
                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }
            }else{
                if(count($getIfPersonAvailable) > 0)
                {
                    $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                }else{
                    $getUserDetail = array();
                }
                if(count($getUserDetail) > 0)
                {
                    $isAadharCorrect = 1;
                    $isMissing = 0; 
                    $personName = $getUserDetail[0]['aadharname'];
                    $gender = $getUserDetail[0]['gender'];
                    $aadhar = $getUserDetail[0]['aadhar_id'];
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getUserDetail[0]['dob']);
                    $age = ($from->diff($to)->y).'- Years';
                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                    if(count($getIfPersonAvailable) == 0)
                    {
                        $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                    }   
                }
            }
            $insertdata = array(
                'isPersonFound' => $isUserFound,
                'isMissing' => $isMissing,
                'idNumber' => $_POST['idNumber'],
                'idType' => $_POST['idType'],
                'wantedIds' => implode(',',$wantedId),
                'criminalIds' => implode(',',$criminalId),
            );
            $this->db->where('Id',$_SESSION['checkId']);
            $update = $this->db->update('checkperson',$insertdata);
            if($update)
            {
                if($isAadharCorrect == 1)
                {
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'isWanted' => $isWanted,
                        'isCriminal' => $isCriminal,
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => 1,
                        'isGenderCorrect' => 1,
                        'message' => 'Person Found',
                        'isVisible' => $isVisible,
                        'isMissing' => $isMissing,
                        'isVerified' => $isVerified,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto
                    );
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'incorrect',
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => 1,
                        'isGenderCorrect' => 1,
                    );
                    echo json_encode($response);   
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
        if($_POST['idType'] == 'voter')
        {
            $idNumber = $_POST['idNumber'];
            $getIfAlready = $this->db->query('select * from voterslist where voterNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isVisible = $getIfPersonAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y).'- Years';
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getIfWantedAvailable = $this->db->query('select * from criminals where aadharNumber="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFinalSubmitted=1 and type="wanted" and status="Active"')->result_array();   
            }else{
                $getIfWantedAvailable = array();
            }
            if(count($getIfWantedAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isWanted = 1;
                $personName = $getIfWantedAvailable[0]['personName'];
                $gender = $getIfWantedAvailable[0]['gender'];
                $aadhar = $getIfWantedAvailable[0]['aadharNumber'];
                if($getIfWantedAvailable[0]['dob'] != '0000-00-00')
                {
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getIfWantedAvailable[0]['dob']);
                    $age = ($from->diff($to)->y).'- Years';
                }else{
                    $age = '';
                }
                $address = '';
                if($getIfWantedAvailable[0]['state'] != '')
                {
                    $address .= $getIfWantedAvailable[0]['state'];
                }
                if($getIfWantedAvailable[0]['district'] != '')
                {
                    if($address != '')
                    {
                        $address .= ' , '.$getIfWantedAvailable[0]['district'];
                    }else{
                        $address .= $getIfWantedAvailable[0]['district'];
                    }
                }
                if($getIfWantedAvailable[0]['city'] != '')
                {
                    if($address != '')
                    {
                        $address .= ' , '.$getIfWantedAvailable[0]['city'];
                    }else{
                        $address .= $getIfWantedAvailable[0]['city'];
                    }
                }
                $getPhotos = $this->db->query('select * from criminalphotos where crimeId='.$getIfWantedAvailable[0]['Id'])->result_array();
                if(count($getPhotos) > 0)
                {
                    $userphoto = base_url().''.(($getPhotos[0]['photourl'] != NULL) ? $getPhotos[0]['photourl'] : '');   
                }
                foreach($getIfWantedAvailable as $k=>$v)
                {
                    array_push($wantedId,$v['Id']);
                }
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getIfCriminalAvailable = $this->db->query('select * from criminals where aadharNumber="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFinalSubmitted=1 and type="criminal" and status="Active"')->result_array();   
            }else{
                $getIfCriminalAvailable = array();
            }
            if(count($getIfCriminalAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isCriminal = 1;
                $personName = $getIfCriminalAvailable[0]['personName'];
                $gender = $getIfCriminalAvailable[0]['gender'];
                $aadhar = $getIfCriminalAvailable[0]['aadharNumber'];
                if($getIfCriminalAvailable[0]['dob'] != '0000-00-00')
                {
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getIfCriminalAvailable[0]['dob']);
                    $age = ($from->diff($to)->y).'- Years';
                }else{
                    $age = '';
                }
                $address = '';
                if($getIfCriminalAvailable[0]['state'] != '')
                {
                    $address .= $getIfCriminalAvailable[0]['state'];
                }
                if($getIfCriminalAvailable[0]['district'] != '')
                {
                    if($address != '')
                    {
                        $address .= ' , '.$getIfCriminalAvailable[0]['district'];
                    }else{
                        $address .= $getIfCriminalAvailable[0]['district'];
                    }
                }
                if($getIfCriminalAvailable[0]['city'] != '')
                {
                    if($address != '')
                    {
                        $address .= ' , '.$getIfCriminalAvailable[0]['city'];
                    }else{
                        $address .= $getIfCriminalAvailable[0]['city'];
                    }
                }
                $getPhotos = $this->db->query('select * from criminalphotos where crimeId='.$getIfCriminalAvailable[0]['Id'])->result_array();
                if(count($getPhotos) > 0)
                {
                    $userphoto = base_url().''.(($getPhotos[0]['photourl'] != NULL) ? $getPhotos[0]['photourl'] : '');   
                }
                foreach($getIfCriminalAvailable as $k=>$v)
                {
                    array_push($criminalId,$v['Id']);
                }
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
            }else{
                $getMissingPerson = array();
            }
            if(count($getMissingPerson) > 0)
            {
                $isAadharCorrect = 1;
                if($getMissingPerson[0]['missinggender'] != NULL)
                {
                    $isMissing = 1;
                    $personName = $getMissingPerson[0]['missingname'];
                    $gender = $getMissingPerson[0]['missinggender'];
                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                    $age = ($from->diff($to)->y).'- Years';
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                    }else{
                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                    }
                    if(count($getIfPersonAvailable) == 0)
                    {
                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                    }   
                }else{
                    $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                    if(count($getFullDetail) > 0)
                    {
                        $isMissing = 1; 
                        $personName = $getMissingPerson[0]['missingname'];
                        $gender = $getMissingPerson[0]['missinggender'];
                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                        $age = ($from->diff($to)->y).'- Years';
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        }else{
                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                        }
                        if(count($getIfPersonAvailable) == 0)
                        {
                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                        }   
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            $isMissing = 1; 
                            $personName = $getUserDetail[0]['aadharname'];
                            $gender = $getUserDetail[0]['gender'];
                            $aadhar = $getUserDetail[0]['aadhar_id'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getUserDetail[0]['dob']);
                            $age = ($from->diff($to)->y).'- Years';
                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }
            }else{
                if(count($getIfPersonAvailable) > 0)
                {
                    $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                }else{
                    $getUserDetail = array();
                }
                if(count($getUserDetail) > 0)
                {
                    $isAadharCorrect = 1;
                    $isMissing = 0; 
                    $personName = $getUserDetail[0]['aadharname'];
                    $gender = $getUserDetail[0]['gender'];
                    $aadhar = $getUserDetail[0]['aadhar_id'];
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getUserDetail[0]['dob']);
                    $age = ($from->diff($to)->y).'- Years';
                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                    if(count($getIfPersonAvailable) == 0)
                    {
                        $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                    }   
                }
            }
            $insertdata = array(
                'isPersonFound' => $isUserFound,
                'isMissing' => $isMissing,
                'idNumber' => $_POST['idNumber'],
                'idType' => $_POST['idType'],
                'wantedIds' => implode(',',$wantedId),
                'criminalIds' => implode(',',$criminalId),
            );
            $this->db->where('Id',$_SESSION['checkId']);
            $update = $this->db->update('checkperson',$insertdata);
            if($update)
            {
                if($isAadharCorrect == 1)
                {
                    $response = array(
                        'status' => 'success',
                        'isWanted' => $isWanted,
                        'isCriminal' => $isCriminal,
                        'personName' => $personName,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => 1,
                        'isGenderCorrect' => 1,
                        'message' => 'Person Found',
                        'isVisible' => $isVisible,
                        'isMissing' => $isMissing,
                        'isVerified' => $isVerified,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto
                    );
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'incorrect',
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => 1,
                        'isGenderCorrect' => 1,
                    );
                    echo json_encode($response);   
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
        if($_POST['idType'] == 'pan')
        {
            $idNumber = $_POST['idNumber'];
            $getIfAlready = $this->db->query('select * from panlist where panNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isVisible = $getIfPersonAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y).'- Years';
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getIfWantedAvailable = $this->db->query('select * from criminals where aadharNumber="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFinalSubmitted=1 and type="wanted" and status="Active"')->result_array();   
            }else{
                $getIfWantedAvailable = array();
            }
            if(count($getIfWantedAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isWanted = 1;
                $personName = $getIfWantedAvailable[0]['personName'];
                $gender = $getIfWantedAvailable[0]['gender'];
                $aadhar = $getIfWantedAvailable[0]['aadharNumber'];
                if($getIfWantedAvailable[0]['dob'] != '0000-00-00')
                {
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getIfWantedAvailable[0]['dob']);
                    $age = ($from->diff($to)->y).'- Years';
                }else{
                    $age = '';
                }
                $address = '';
                if($getIfWantedAvailable[0]['state'] != '')
                {
                    $address .= $getIfWantedAvailable[0]['state'];
                }
                if($getIfWantedAvailable[0]['district'] != '')
                {
                    if($address != '')
                    {
                        $address .= ' , '.$getIfWantedAvailable[0]['district'];
                    }else{
                        $address .= $getIfWantedAvailable[0]['district'];
                    }
                }
                if($getIfWantedAvailable[0]['city'] != '')
                {
                    if($address != '')
                    {
                        $address .= ' , '.$getIfWantedAvailable[0]['city'];
                    }else{
                        $address .= $getIfWantedAvailable[0]['city'];
                    }
                }
                $getPhotos = $this->db->query('select * from criminalphotos where crimeId='.$getIfWantedAvailable[0]['Id'])->result_array();
                if(count($getPhotos) > 0)
                {
                    $userphoto = base_url().''.(($getPhotos[0]['photourl'] != NULL) ? $getPhotos[0]['photourl'] : '');   
                }
                foreach($getIfWantedAvailable as $k=>$v)
                {
                    array_push($wantedId,$v['Id']);
                }
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getIfCriminalAvailable = $this->db->query('select * from criminals where aadharNumber="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFinalSubmitted=1 and type="criminal" and status="Active"')->result_array();   
            }else{
                $getIfCriminalAvailable = array();
            }
            if(count($getIfCriminalAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isCriminal = 1;
                $personName = $getIfCriminalAvailable[0]['personName'];
                $gender = $getIfCriminalAvailable[0]['gender'];
                $aadhar = $getIfCriminalAvailable[0]['aadharNumber'];
                if($getIfCriminalAvailable[0]['dob'] != '0000-00-00')
                {
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getIfCriminalAvailable[0]['dob']);
                    $age = ($from->diff($to)->y).'- Years';
                }else{
                    $age = '';
                }
                $address = '';
                if($getIfCriminalAvailable[0]['state'] != '')
                {
                    $address .= $getIfCriminalAvailable[0]['state'];
                }
                if($getIfCriminalAvailable[0]['district'] != '')
                {
                    if($address != '')
                    {
                        $address .= ' , '.$getIfCriminalAvailable[0]['district'];
                    }else{
                        $address .= $getIfCriminalAvailable[0]['district'];
                    }
                }
                if($getIfCriminalAvailable[0]['city'] != '')
                {
                    if($address != '')
                    {
                        $address .= ' , '.$getIfCriminalAvailable[0]['city'];
                    }else{
                        $address .= $getIfCriminalAvailable[0]['city'];
                    }
                }
                $getPhotos = $this->db->query('select * from criminalphotos where crimeId='.$getIfCriminalAvailable[0]['Id'])->result_array();
                if(count($getPhotos) > 0)
                {
                    $userphoto = base_url().''.(($getPhotos[0]['photourl'] != NULL) ? $getPhotos[0]['photourl'] : '');   
                }
                foreach($getIfCriminalAvailable as $k=>$v)
                {
                    array_push($criminalId,$v['Id']);
                }
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
            }else{
                $getMissingPerson = array();
            }
            if(count($getMissingPerson) > 0)
            {
                $isAadharCorrect = 1;
                if($getMissingPerson[0]['missinggender'] != NULL)
                {
                    $isMissing = 1;
                    $personName = $getMissingPerson[0]['missingname'];
                    $gender = $getMissingPerson[0]['missinggender'];
                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                    $age = ($from->diff($to)->y).'- Years';
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                    }else{
                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                    }
                    if(count($getIfPersonAvailable) == 0)
                    {
                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                    }   
                }else{
                    $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                    if(count($getFullDetail) > 0)
                    {
                        $isMissing = 1; 
                        $personName = $getMissingPerson[0]['missingname'];
                        $gender = $getMissingPerson[0]['missinggender'];
                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                        $age = ($from->diff($to)->y).'- Years';
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        }else{
                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                        }
                        if(count($getIfPersonAvailable) == 0)
                        {
                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                        }   
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            $isMissing = 1; 
                            $personName = $getUserDetail[0]['aadharname'];
                            $gender = $getUserDetail[0]['gender'];
                            $aadhar = $getUserDetail[0]['aadhar_id'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getUserDetail[0]['dob']);
                            $age = ($from->diff($to)->y).'- Years';
                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }
            }else{
                if(count($getIfPersonAvailable) > 0)
                {
                    $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                }else{
                    $getUserDetail = array();
                }
                if(count($getUserDetail) > 0)
                {
                    $isAadharCorrect = 1;
                    $isMissing = 0; 
                    $personName = $getUserDetail[0]['aadharname'];
                    $gender = $getUserDetail[0]['gender'];
                    $aadhar = $getUserDetail[0]['aadhar_id'];
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getUserDetail[0]['dob']);
                    $age = ($from->diff($to)->y).'- Years';
                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                    if(count($getIfPersonAvailable) == 0)
                    {
                        $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                    }   
                }
            }
            $insertdata = array(
                'isPersonFound' => $isUserFound,
                'isMissing' => $isMissing,
                'idNumber' => $_POST['idNumber'],
                'idType' => $_POST['idType'],
                'wantedIds' => implode(',',$wantedId),
                'criminalIds' => implode(',',$criminalId),
            );
            $this->db->where('Id',$_SESSION['checkId']);
            $update = $this->db->update('checkperson',$insertdata);
            if($update)
            {
                if($isAadharCorrect == 1)
                {
                    $response = array(
                        'status' => 'success',
                        'isWanted' => $isWanted,
                        'isCriminal' => $isCriminal,
                        'personName' => $personName,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => 1,
                        'isGenderCorrect' => 1,
                        'message' => 'Person Found',
                        'isVisible' => $isVisible,
                        'isMissing' => $isMissing,
                        'isVerified' => $isVerified,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto
                    );
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'incorrect',
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => 1,
                        'isGenderCorrect' => 1,
                    );
                    echo json_encode($response);   
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
    }

    function checkPersonOld($para = '')
    {
        if($para == '')
        {
            if(isset($_SESSION['landingMob']))
            {
                $page_data['control'] = 'user';
                $page_data['title'] = 'Search Person';
                $page_data['pn'] = 1;
                if(isset($_GET['pn']))
                {
                    $page_data['pn'] = $_GET['pn'];    
                }
                $this->load->view('NonKyc/common/header',$page_data); 
                $this->load->view('NonKyc/checkperson');
                $this->load->view('NonKyc/common/footer'); 
            }else{
                redirect(base_url().'login','refresh');
            }
        }else
        {
            if(strlen($_POST['registration_mobile']) != 10)
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Mobile number must be 10 digit number'
                );
                echo json_encode($response);
                return;
            }
            $getIfAlreadyOtherInAlternate1 = $this->db->query('select * from user where alternate_mobile1="'.$_POST['registration_mobile'].'"')->result_array();
            $getIfAlreadyOtherInAlternate2 = $this->db->query('select * from user where alternate_mobile2="'.$_POST['registration_mobile'].'"')->result_array();
            $getIfAlreadyOtherInAlternate3 = $this->db->query('select * from user where alternate_mobile3="'.$_POST['registration_mobile'].'"')->result_array();
            $getIfAlreadyOtherInRegistered = $this->db->query('select * from user where registration_mobile="'.$_POST['registration_mobile'].'"')->result_array();
            $isRegistered = 0;
            $personName = '';
            $gender = '';
            $aadhar = '';
            $gender = '';
            $age = '';
            $address = '';
            $isUserFound = 0;
            $isMissing = 0;
            $isGenderCorrect = 0;
            $isAadharCorrect = 0;
            $isDobCorrect = 0;
            if(count($getIfAlreadyOtherInAlternate1) > 0 || count($getIfAlreadyOtherInAlternate2) > 0 || count($getIfAlreadyOtherInAlternate3) > 0  || count($getIfAlreadyOtherInRegistered) > 0)
            {
                $isRegistered = 1;
            }else{
                $isRegistered = 0;
            }
            $_POST['dob'] = $_POST['date'].'-'.$_POST['month'].'-'.$_POST['year'];
            $idNumber = '';
            if($_POST['idType'] == 'aadhar')
            {
                $idNumber = $_POST['aadhar_id'];
                if(strlen($_POST['aadhar_id']) != 12)
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Aadhar number must be 12 digit number'
                    );
                    echo json_encode($response);
                    return;
                }
                $getIfPersonAvailable = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'" and gender="'.$_POST['gender'].'" and dob="'.date('Y-m-d',strtotime($_POST['dob'])).'"')->result_array();
                $userphoto = '';
                if(count($getIfPersonAvailable) > 0)
                {
                    $isUserFound = 1;
                    $personName = $getIfPersonAvailable[0]['aadharname'];
                    $gender = $getIfPersonAvailable[0]['gender'];
                    $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                    $age = ($from->diff($to)->y).'- Years';
                    $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                    $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
                }
                $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$_POST['aadhar_id'].'" and isFound != 1')->result_array();
                if(count($getMissingPerson) > 0)
                {
                    $isAadharCorrect = 1;
                    if($getMissingPerson[0]['missinggender'] != NULL)
                    {
                        if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                        }
                        if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                        {
                            $isGenderCorrect = 1;
                            if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                                $isMissing = 1;
                                $personName = $getMissingPerson[0]['missingname'];
                                $gender = $getMissingPerson[0]['missinggender'];
                                $aadhar = $getMissingPerson[0]['missingaadhar'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                $age = ($from->diff($to)->y).'- Years';
                                if(count($getIfPersonAvailable) > 0)
                                {
                                    $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                }else{
                                    $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                }
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }   
                            }
                        }
                    }else{
                        $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                        if(count($getFullDetail) > 0)
                        {
                            if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1; 
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getMissingPerson[0]['missinggender'];
                                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    if(count($getIfPersonAvailable) > 0)
                                    {
                                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                    }else{
                                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                    }
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }   
                        }else{
                            $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'"')->result_array();
                            if(count($getUserDetail) > 0)
                            {
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                }
                                if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                {
                                    $isGenderCorrect = 1;
                                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                        $isMissing = 1; 
                                        $personName = $getUserDetail[0]['aadharname'];
                                        $gender = $getUserDetail[0]['gender'];
                                        $aadhar = $getUserDetail[0]['aadhar_id'];
                                        $from=new DateTime(date('Y-m-d'));
                                        $to   = new DateTime($getUserDetail[0]['dob']);
                                        $age = ($from->diff($to)->y).'- Years';
                                        $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                        if(count($getIfPersonAvailable) == 0)
                                        {
                                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                        }   
                                    }
                                }
                            }
                        }
                    }
                }else{
                    $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'"')->result_array();
                    if(count($getUserDetail) > 0)
                    {
                        $isAadharCorrect = 1;
                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                        }
                        if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                        {
                            $isGenderCorrect = 1;
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                                $isMissing = 0; 
                                $personName = $getUserDetail[0]['aadharname'];
                                $gender = $getUserDetail[0]['gender'];
                                $aadhar = $getUserDetail[0]['aadhar_id'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getUserDetail[0]['dob']);
                                $age = ($from->diff($to)->y).'- Years';
                                $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }   
                            }
                        }
                    }
                }
                // $otp = '1234';
                // $string = '0123456789';
                // $string_shuffled = str_shuffle($string);
                // $otp = substr($string_shuffled, 1, 4);
                // $this->sendTextLocalOtp($_POST['registration_mobile'],$_POST['registration_mobile'],$otp);
                $insertdata = array(
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'gender' => $_POST['gender'],
                    'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                    'idNumber' => $_POST['aadhar_id'],
                    'idType' => $_POST['idType'],
                    'personMob' => $_POST['registration_mobile'],
                    // 'otp' => $otp,
                    'isRegistered' => $isRegistered
                );
                $insert = $this->db->insert('checkperson',$insertdata);
                if($insert)
                {
                    if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                    {
                        $response = array(
                            'status' => 'success',
                            'personName' => $personName,
                            'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                            'gender' => strtolower($gender),
                            'age' => $age,
                            'address' => $address,
                            'isAadharCorrect' => $isAadharCorrect,
                            'isDobCorrect' => $isDobCorrect,
                            'isGenderCorrect' => $isGenderCorrect,
                            'message' => 'Person Found',
                            'isMissing' => $isMissing,
                            'isRegistered' => $isUserFound,
                            'image' => $userphoto
                        );
                        $_SESSION['checkId'] = $this->db->insert_id();
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                            'isDobCorrect' => $isDobCorrect,
                            'isGenderCorrect' => $isGenderCorrect,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }
            if($_POST['idType'] == 'dl')
            {
                $idNumber = $_POST['dlNumber'];
                $getIfAlready = $this->db->query('select * from dllist where dlNumber="'.$idNumber.'"')->result_array();
                if(count($getIfAlready) > 0)
                {
                    $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
                }else{
                    $getIfPersonAvailable = array();
                }
                $userphoto = '';
                if(count($getIfPersonAvailable) > 0)
                {
                    $isUserFound = 1;
                    $personName = $getIfPersonAvailable[0]['aadharname'];
                    $gender = $getIfPersonAvailable[0]['gender'];
                    $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                    $age = ($from->diff($to)->y).'- Years';
                    $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                    $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
                }
                if(count($getIfPersonAvailable) > 0)
                {
                    $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
                }else{
                    $getMissingPerson = array();
                }
                if(count($getMissingPerson) > 0)
                {
                    $isAadharCorrect = 1;
                    if($getMissingPerson[0]['missinggender'] != NULL)
                    {
                        if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                        }
                        if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                        {
                            $isGenderCorrect = 1;
                            if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                                $isMissing = 1;
                                $personName = $getMissingPerson[0]['missingname'];
                                $gender = $getMissingPerson[0]['missinggender'];
                                $aadhar = $getMissingPerson[0]['missingaadhar'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                $age = ($from->diff($to)->y).'- Years';
                                if(count($getIfPersonAvailable) > 0)
                                {
                                    $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                }else{
                                    $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                }
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }   
                            }
                        }
                    }else{
                        $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                        if(count($getFullDetail) > 0)
                        {
                            if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1; 
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getMissingPerson[0]['missinggender'];
                                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    if(count($getIfPersonAvailable) > 0)
                                    {
                                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                    }else{
                                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                    }
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }   
                        }else{
                            $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                            if(count($getUserDetail) > 0)
                            {
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                }
                                if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                {
                                    $isGenderCorrect = 1;
                                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                        $isMissing = 1; 
                                        $personName = $getUserDetail[0]['aadharname'];
                                        $gender = $getUserDetail[0]['gender'];
                                        $aadhar = $getUserDetail[0]['aadhar_id'];
                                        $from=new DateTime(date('Y-m-d'));
                                        $to   = new DateTime($getUserDetail[0]['dob']);
                                        $age = ($from->diff($to)->y).'- Years';
                                        $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                        
                                        if(count($getIfPersonAvailable) == 0)
                                        {
                                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                        }   
                                    }
                                }
                            }
                        }
                    }
                }else{
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                    }else{
                        $getUserDetail = array();
                    }
                    if(count($getUserDetail) > 0)
                    {
                        $isAadharCorrect = 1;
                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                        }
                        if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                        {
                            $isGenderCorrect = 1;
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                                $isMissing = 0; 
                                $personName = $getUserDetail[0]['aadharname'];
                                $gender = $getUserDetail[0]['gender'];
                                $aadhar = $getUserDetail[0]['aadhar_id'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getUserDetail[0]['dob']);
                                $age = ($from->diff($to)->y).'- Years';
                                $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }   
                            }
                        }
                    }
                }
                // $otp = '1234';
                // $string = '0123456789';
                // $string_shuffled = str_shuffle($string);
                // $otp = substr($string_shuffled, 1, 4);
                // $this->sendTextLocalOtp($_POST['registration_mobile'],$_POST['registration_mobile'],$otp);
                $insertdata = array(
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'gender' => $_POST['gender'],
                    'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                    'idNumber' => $_POST['dlNumber'],
                    'idType' => $_POST['idType'],
                    'personMob' => $_POST['registration_mobile'],
                    // 'otp' => $otp,
                    'isRegistered' => $isRegistered
                );
                $insert = $this->db->insert('checkperson',$insertdata);
                if($insert)
                {
                    if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                    {
                        $response = array(
                            'status' => 'success',
                            'personName' => $personName,
                            'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                            'gender' => strtolower($gender),
                            'age' => $age,
                            'address' => $address,
                            'isAadharCorrect' => $isAadharCorrect,
                            'isDobCorrect' => $isDobCorrect,
                            'isGenderCorrect' => $isGenderCorrect,
                            'message' => 'Person Found',
                            'isMissing' => $isMissing,
                            'isRegistered' => $isUserFound,
                            'image' => $userphoto
                        );
                        $_SESSION['checkId'] = $this->db->insert_id();
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                            'isDobCorrect' => $isDobCorrect,
                            'isGenderCorrect' => $isGenderCorrect,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }
            if($_POST['idType'] == 'voter')
            {
                $idNumber = $_POST['voterId'];
                $getIfAlready = $this->db->query('select * from voterslist where voterNumber="'.$idNumber.'"')->result_array();
                if(count($getIfAlready) > 0)
                {
                    $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'].' and gender="'.$_POST['gender'].'" and dob="'.date('Y-m-d',strtotime($_POST['dob'])).'"')->result_array();   
                }else{
                    $getIfPersonAvailable = array();
                }
                $userphoto = '';
                if(count($getIfPersonAvailable) > 0)
                {
                    $isUserFound = 1;
                    $personName = $getIfPersonAvailable[0]['aadharname'];
                    $gender = $getIfPersonAvailable[0]['gender'];
                    $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                    $age = ($from->diff($to)->y).'- Years';
                    $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                    $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
                }
                if(count($getIfPersonAvailable) > 0)
                {
                    $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
                }else{
                    $getMissingPerson = array();
                }
                if(count($getMissingPerson) > 0)
                {
                    $isAadharCorrect = 1;
                    if($getMissingPerson[0]['missinggender'] != NULL)
                    {
                        if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                        }
                        if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                        {
                            $isGenderCorrect = 1;
                            if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                                $isMissing = 1;
                                $personName = $getMissingPerson[0]['missingname'];
                                $gender = $getMissingPerson[0]['missinggender'];
                                $aadhar = $getMissingPerson[0]['missingaadhar'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                $age = ($from->diff($to)->y).'- Years';
                                if(count($getIfPersonAvailable) > 0)
                                {
                                    $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                }else{
                                    $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                }
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }   
                            }
                        }
                    }else{
                        $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                        if(count($getFullDetail) > 0)
                        {
                            if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1; 
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getMissingPerson[0]['missinggender'];
                                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    if(count($getIfPersonAvailable) > 0)
                                    {
                                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                    }else{
                                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                    }
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }   
                        }else{
                            $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                            if(count($getUserDetail) > 0)
                            {
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                }
                                if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                {
                                    $isGenderCorrect = 1;
                                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                        $isMissing = 1; 
                                        $personName = $getUserDetail[0]['aadharname'];
                                        $gender = $getUserDetail[0]['gender'];
                                        $aadhar = $getUserDetail[0]['aadhar_id'];
                                        $from=new DateTime(date('Y-m-d'));
                                        $to   = new DateTime($getUserDetail[0]['dob']);
                                        $age = ($from->diff($to)->y).'- Years';
                                        $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                        if(count($getIfPersonAvailable) == 0)
                                        {
                                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                        }   
                                    }
                                }
                            }
                        }
                    }
                }else{
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                    }else{
                        $getUserDetail = array();
                    }
                    if(count($getUserDetail) > 0)
                    {
                        $isAadharCorrect = 1;
                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                        }
                        if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                        {
                            $isGenderCorrect = 1;
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                                $isMissing = 0; 
                                $personName = $getUserDetail[0]['aadharname'];
                                $gender = $getUserDetail[0]['gender'];
                                $aadhar = $getUserDetail[0]['aadhar_id'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getUserDetail[0]['dob']);
                                $age = ($from->diff($to)->y).'- Years';
                                $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }   
                            }
                        }
                    }
                }
                // $otp = '1234';
                // $string = '0123456789';
                // $string_shuffled = str_shuffle($string);
                // $otp = substr($string_shuffled, 1, 4);
                // $this->sendTextLocalOtp($_POST['registration_mobile'],$_POST['registration_mobile'],$otp);
                $insertdata = array(
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'gender' => $_POST['gender'],
                    'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                    'idNumber' => $_POST['voterId'],
                    'idType' => $_POST['idType'],
                    'personMob' => $_POST['registration_mobile'],
                    // 'otp' => $otp,
                    'isRegistered' => $isRegistered
                );
                $insert = $this->db->insert('checkperson',$insertdata);
                if($insert)
                {
                    if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                    {
                        $response = array(
                            'status' => 'success',
                            'personName' => $personName,
                            'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                            'gender' => strtolower($gender),
                            'age' => $age,
                            'address' => $address,
                            'isAadharCorrect' => $isAadharCorrect,
                            'isDobCorrect' => $isDobCorrect,
                            'isGenderCorrect' => $isGenderCorrect,
                            'message' => 'Person Found',
                            'isMissing' => $isMissing,
                            'isRegistered' => $isUserFound,
                            'image' => $userphoto
                        );
                        $_SESSION['checkId'] = $this->db->insert_id();
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                            'isDobCorrect' => $isDobCorrect,
                            'isGenderCorrect' => $isGenderCorrect,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }
            if($_POST['idType'] == 'pan')
            {
                $idNumber = $_POST['panNumber'];
                $getIfAlready = $this->db->query('select * from panlist where panNumber="'.$idNumber.'"')->result_array();
                if(count($getIfAlready) > 0)
                {
                    $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
                }else{
                    $getIfPersonAvailable = array();
                }
                $userphoto = '';
                if(count($getIfPersonAvailable) > 0)
                {
                    $isUserFound = 1;
                    $personName = $getIfPersonAvailable[0]['aadharname'];
                    $gender = $getIfPersonAvailable[0]['gender'];
                    $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                    $age = ($from->diff($to)->y).'- Years';
                    $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                    $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
                }
                if(count($getIfPersonAvailable) > 0)
                {
                    $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
                }else{
                    $getMissingPerson = array();
                }
                if(count($getMissingPerson) > 0)
                {
                    $isAadharCorrect = 1;
                    if($getMissingPerson[0]['missinggender'] != NULL)
                    {
                        if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                        }
                        if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                        {
                            $isGenderCorrect = 1;
                            if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                                $isMissing = 1;
                                $personName = $getMissingPerson[0]['missingname'];
                                $gender = $getMissingPerson[0]['missinggender'];
                                $aadhar = $getMissingPerson[0]['missingaadhar'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                $age = ($from->diff($to)->y).'- Years';
                                if(count($getIfPersonAvailable) > 0)
                                {
                                    $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                }else{
                                    $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                }
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }   
                            }
                        }
                    }else{
                        $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                        if(count($getFullDetail) > 0)
                        {
                            if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1; 
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getMissingPerson[0]['missinggender'];
                                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    if(count($getIfPersonAvailable) > 0)
                                    {
                                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                    }else{
                                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                    }
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }   
                        }else{
                            $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                            if(count($getUserDetail) > 0)
                            {
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                }
                                if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                                {
                                    $isGenderCorrect = 1;
                                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                    {
                                        $isDobCorrect = 1;
                                        $isMissing = 1; 
                                        $personName = $getUserDetail[0]['aadharname'];
                                        $gender = $getUserDetail[0]['gender'];
                                        $aadhar = $getUserDetail[0]['aadhar_id'];
                                        $from=new DateTime(date('Y-m-d'));
                                        $to   = new DateTime($getUserDetail[0]['dob']);
                                        $age = ($from->diff($to)->y).'- Years';
                                        $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                        if(count($getIfPersonAvailable) == 0)
                                        {
                                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                        }   
                                    }
                                }
                            }
                        }
                    }
                }else{
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                    }else{
                        $getUserDetail = array();
                    }
                    if(count($getUserDetail) > 0)
                    {
                        $isAadharCorrect = 1;
                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                        }
                        if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                        {
                            $isGenderCorrect = 1;
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                                $isMissing = 0; 
                                $personName = $getUserDetail[0]['aadharname'];
                                $gender = $getUserDetail[0]['gender'];
                                $aadhar = $getUserDetail[0]['aadhar_id'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getUserDetail[0]['dob']);
                                $age = ($from->diff($to)->y).'- Years';
                                $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }   
                            }
                        }
                    }
                }
                // $otp = '1234';
                // $string = '0123456789';
                // $string_shuffled = str_shuffle($string);
                // $otp = substr($string_shuffled, 1, 4);
                // $this->sendTextLocalOtp($_POST['registration_mobile'],$_POST['registration_mobile'],$otp);
                $insertdata = array(
                    'isPersonFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'gender' => $_POST['gender'],
                    'dob' => date('Y-m-d',strtotime($_POST['dob'])),
                    'idNumber' => $_POST['panNumber'],
                    'idType' => $_POST['idType'],
                    'personMob' => $_POST['registration_mobile'],
                    // 'otp' => $otp,
                    'isRegistered' => $isRegistered
                );
                $insert = $this->db->insert('checkperson',$insertdata);
                if($insert)
                {
                    if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                    {
                        $response = array(
                            'status' => 'success',
                            'personName' => $personName,
                            'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                            'gender' => strtolower($gender),
                            'age' => $age,
                            'address' => $address,
                            'isAadharCorrect' => $isAadharCorrect,
                            'isDobCorrect' => $isDobCorrect,
                            'isGenderCorrect' => $isGenderCorrect,
                            'message' => 'Person Found',
                            'isMissing' => $isMissing,
                            'isRegistered' => $isUserFound,
                            'image' => $userphoto
                        );
                        $_SESSION['checkId'] = $this->db->insert_id();
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                            'isDobCorrect' => $isDobCorrect,
                            'isGenderCorrect' => $isGenderCorrect,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }
        }
    }
    
    function search_details()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'search_details';
            $this->load->view('nonkyc/index', $page_data);
        }else 
        {
            redirect('login','refresh');
        }
    }

    function createOverallHistory()
    {
        $getDetails = $this->db->query('select * from searchpersonhistory where Id='.$_SESSION['searchId'])->result_array();
        $unknownIds = array();
        $lapataIds = array();
        switch($getDetails[0]['Idtype']){
            case 'aadhar' :
                $getLapataDetails = $this->db->query('select id from unknown_person where isFound=0 and expiryDate >="'.date('Y-m-d H:i:s A').'" and awsEventName="All" and aadharNumber="'.$getDetails[0]['IdNumber'].'"')->result_array();
                if(count($getLapataDetails) > 0)
                {
                    foreach($getLapataDetails as $k=>$v)
                    {
                        array_push($lapataIds,$v['id']);       
                    }
                }
                $getUnknownDetails = $this->db->query('select id from unknown_person where isFound=0 and awsEventName != "All" and aadharNumber="'.$getDetails[0]['IdNumber'].'"')->result_array();
                if(count($getUnknownDetails) > 0)
                {
                    foreach($getUnknownDetails as $k=>$v)
                    {
                        array_push($unknownIds,$v['id']);       
                    }
                }
                break;
            case 'pan' :
                $getLapataDetails = $this->db->query('select id from unknown_person where isFound=0 and expiryDate >="'.date('Y-m-d H:i:s A').'" and awsEventName="All" and PAN="'.$getDetails[0]['IdNumber'].'"')->result_array();
                if(count($getLapataDetails) > 0)
                {
                    foreach($getLapataDetails as $k=>$v)
                    {
                        array_push($lapataIds,$v['id']);       
                    }
                }
                $getUnknownDetails = $this->db->query('select id from unknown_person where isFound=0 and awsEventName != "All" and PAN="'.$getDetails[0]['IdNumber'].'"')->result_array();
                if(count($getUnknownDetails) > 0)
                {
                    foreach($getUnknownDetails as $k=>$v)
                    {
                        array_push($unknownIds,$v['id']);       
                    }
                }
                break;
            case 'voter' :
                $getLapataDetails = $this->db->query('select id from unknown_person where isFound=0 and expiryDate >="'.date('Y-m-d H:i:s A').'" and awsEventName="All" and voter_id="'.$getDetails[0]['IdNumber'].'"')->result_array();
                if(count($getLapataDetails) > 0)
                {
                    foreach($getLapataDetails as $k=>$v)
                    {
                        array_push($lapataIds,$v['id']);       
                    }
                }
                $getUnknownDetails = $this->db->query('select id from unknown_person where isFound=0 and awsEventName != "All" and voter_id="'.$getDetails[0]['IdNumber'].'"')->result_array();
                if(count($getUnknownDetails) > 0)
                {
                    foreach($getUnknownDetails as $k=>$v)
                    {
                        array_push($unknownIds,$v['id']);       
                    }
                }
                break;
            case 'dl' :
                $getLapataDetails = $this->db->query('select id from unknown_person where isFound=0 and expiryDate >="'.date('Y-m-d H:i:s A').'" and awsEventName="All" and DL_no="'.$getDetails[0]['IdNumber'].'"')->result_array();
                if(count($getLapataDetails) > 0)
                {
                    foreach($getLapataDetails as $k=>$v)
                    {
                        array_push($lapataIds,$v['id']);       
                    }
                }
                $getUnknownDetails = $this->db->query('select id from unknown_person where isFound=0 and awsEventName != "All" and DL_no="'.$getDetails[0]['IdNumber'].'"')->result_array();
                if(count($getUnknownDetails) > 0)
                {
                    foreach($getUnknownDetails as $k=>$v)
                    {
                        array_push($unknownIds,$v['id']);       
                    }
                }
                break;
            case 'gold' :
                $getGoldDetails = $this->db->query('select * from unknownPersonGold where goldHUID="'.$getDetails[0]['IdNumber'].'"')->result_array();
                if(count($getGoldDetails) > 0)
                {
                    foreach($getGoldDetails as $k=>$v)
                    {
                        $getLapataDetails = $this->db->query('select id from unknown_person where isFound=0 and expiryDate >="'.date('Y-m-d H:i:s A').'" and awsEventName="All" and id='.$v['unknownId'])->result_array();   
                        if(count($getLapataDetails) > 0)
                        {
                            array_push($lapataIds,$v['unknownId']);          
                        }
                        $getUnknownDetails = $this->db->query('select id from unknown_person where isFound=0 and awsEventName != "All" and id='.$v['unknownId'])->result_array();
                        if(count($getUnknownDetails) > 0)
                        {
                            array_push($unknownIds,$v['unknownId']);       
                        }
                    }
                }
                break;
            case 'vehicle' :
                $getLapataDetails = $this->db->query('select id from unknown_person where isFound=0 and expiryDate >="'.date('Y-m-d H:i:s A').'" and awsEventName="All" and vehicle_no="'.$getDetails[0]['IdNumber'].'"')->result_array();
                if(count($getLapataDetails) > 0)
                {
                    foreach($getLapataDetails as $k=>$v)
                    {
                        array_push($lapataIds,$v['id']);       
                    }
                }
                $getUnknownDetails = $this->db->query('select id from unknown_person where isFound=0 and awsEventName != "All" and vehicle_no="'.$getDetails[0]['idNumber'].'"')->result_array();
                if(count($getUnknownDetails) > 0)
                {
                    foreach($getUnknownDetails as $k=>$v)
                    {
                        array_push($unknownIds,$v['id']);       
                    }
                }
                break;
        }
        $insertData = array(
            'dateCreated' => date('Y-m-d H:i:s'),
            'userId' => $_SESSION['user_id'],
            'missingIds' => implode(',',$lapataIds),
            'unknownIds' => implode(',',$unknownIds),
            'searchQuery' => $getDetails[0]['IdNumber'],
            'searchType' => $getDetails[0]['Idtype']
        );
        $insertOverall = $this->db->insert('overallHistory',$insertData);
    }

    function checkPersonIdAfterLogin()
    {
        $personName = '';
        $gender = '';
        $aadhar = '';
        $gender = '';
        $isVerified = 'No';
        $isVisible = 0;
        $age = '';
        $isWanted = 0;
        $personId = '';
        $isCriminal = 0;
        $isLapata = 0;
        $address = '';
        $lapataId = 0;
        $missingId = array();
        $wantedId = array();
        $criminalId = array();
        $isUserFound = 0;
        $isMissing = 0;
        $isAadharCorrect = 0;
        $idNumber = '';
        $isKhoya = 0;
        $khoyaId = 0;
        if($_POST['idType'] == 'aadhar')
        {
            $idNumber = $_POST['IdNumber'];
            if(strlen($_POST['IdNumber']) != 12)
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Aadhar number must be 12 digit number'
                );
                echo json_encode($response);
                return;
            }
            $getIfPersonAvailable = $this->db->query('select * from user where aadhar_id="'.$_POST['IdNumber'].'"')->result_array();
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $personId = $getIfPersonAvailable[0]['uid'];
                $isAadharCorrect = 1;
                $isVisible = $getIfPersonAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y);
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            $getIfWantedAvailable = $this->db->query('select * from criminals where aadharNumber="'.$_POST['IdNumber'].'" and isFinalSubmitted=1 and type="wanted" and status="Active" order by dateCreated desc')->result_array();
            if(count($getIfWantedAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isWanted = 1;
                $isVisible = 1;
                if($isUserFound != 1)
                {
                    $personName = $getIfWantedAvailable[0]['personName'];
                    $gender = $getIfWantedAvailable[0]['gender'];
                    $aadhar = $getIfWantedAvailable[0]['aadharNumber'];
                    if($getIfWantedAvailable[0]['dob'] != '0000-00-00')
                    {
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfWantedAvailable[0]['dob']);
                        $age = ($from->diff($to)->y);
                    }else{
                        $age = '';
                    }
                    $address = '';
                    if($getIfWantedAvailable[0]['state'] != '')
                    {
                        $address .= $getIfWantedAvailable[0]['state'];
                    }
                    if($getIfWantedAvailable[0]['district'] != '')
                    {
                        if($address != '')
                        {
                            $address .= ' , '.$getIfWantedAvailable[0]['district'];
                        }else{
                            $address .= $getIfWantedAvailable[0]['district'];
                        }
                    }
                    if($getIfWantedAvailable[0]['city'] != '')
                    {
                        if($address != '')
                        {
                            $address .= ' , '.$getIfWantedAvailable[0]['city'];
                        }else{
                            $address .= $getIfWantedAvailable[0]['city'];
                        }
                    }
                    $getPhotos = $this->db->query('select * from criminalphotos where crimeId='.$getIfWantedAvailable[0]['Id'])->result_array();
                    if($userphoto == '' || $userphoto == base_url())
                    {
                        $userphoto = ((count($getPhotos) > 0) ? base_url().''.$getPhotos[0]['photourl'] : base_url().''.$getIfWantedAvailable[0]['photo']);   
                    }   
                }
                foreach($getIfWantedAvailable as $k=>$v)
                {
                    array_push($wantedId,$v['Id']);
                }
            }
            $getIfCriminalAvailable = $this->db->query('select * from criminals where aadharNumber="'.$_POST['IdNumber'].'" and isFinalSubmitted=1 and type="criminal" and status="Active" order by dateCreated desc')->result_array();
            if(count($getIfCriminalAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isVisible = 1;
                $isCriminal = 1;
                if($isUserFound != 1)
                {
                    $personName = $getIfCriminalAvailable[0]['personName'];
                    $gender = $getIfCriminalAvailable[0]['gender'];
                    $aadhar = $getIfCriminalAvailable[0]['aadharNumber'];
                    if($getIfCriminalAvailable[0]['dob'] != '0000-00-00')
                    {
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfCriminalAvailable[0]['dob']);
                        $age = ($from->diff($to)->y);
                    }else{
                        $age = '';
                    }
                    $address = '';
                    if($getIfCriminalAvailable[0]['state'] != '')
                    {
                        $address .= $getIfCriminalAvailable[0]['state'];
                    }
                    if($getIfCriminalAvailable[0]['district'] != '')
                    {
                        if($address != '')
                        {
                            $address .= ' , '.$getIfCriminalAvailable[0]['district'];
                        }else{
                            $address .= $getIfCriminalAvailable[0]['district'];
                        }
                    }
                    if($getIfCriminalAvailable[0]['city'] != '')
                    {
                        if($address != '')
                        {
                            $address .= ' , '.$getIfCriminalAvailable[0]['city'];
                        }else{
                            $address .= $getIfCriminalAvailable[0]['city'];
                        }
                    }
                    $getPhotos = $this->db->query('select * from criminalphotos where crimeId='.$getIfCriminalAvailable[0]['Id'])->result_array();
                    if($userphoto == '' || $userphoto == base_url())
                    {
                        $userphoto = ((count($getPhotos) > 0) ? base_url().''.$getPhotos[0]['photourl'] : base_url().''.$getIfCriminalAvailable[0]['photo']);   
                    }
                }
                foreach($getIfCriminalAvailable as $k=>$v)
                {
                    array_push($criminalId,$v['Id']);
                }
            }
            $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$_POST['IdNumber'].'" and isFound !=1 order by dateCreated desc')->result_array();
            if(count($getMissingPerson) > 0)
            {
                $isVisible = 1;
                $isAadharCorrect = 1;
                if($getMissingPerson[0]['missinggender'] != NULL)
                {
                    $isMissing = 1;
                    if($isUserFound != 1)
                    {
                        $personName = $getMissingPerson[0]['missingname'];
                        $gender = $getMissingPerson[0]['missinggender'];
                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                        $age = ($from->diff($to)->y);
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        }else{
                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                        }
                        if(count($getIfPersonAvailable) == 0)
                        {
                            if($userphoto == '' || $userphoto == base_url())
                            {
                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : '');
                            }
                        }
                    }
                }else{
                    $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                    if(count($getFullDetail) > 0)
                    {
                        $isMissing = 1; 
                        if($isUserFound != 1)
                        {
                            $personName = $getMissingPerson[0]['missingname'];
                            $gender = $getMissingPerson[0]['missinggender'];
                            $aadhar = $getMissingPerson[0]['missingaadhar'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getMissingPerson[0]['missingdob']);
                            $age = ($from->diff($to)->y);
                            if(count($getIfPersonAvailable) > 0)
                            {
                                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                            }else{
                                $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                            }
                            if(count($getIfPersonAvailable) == 0)
                            {
                                if($userphoto == '' || $userphoto == base_url())
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }
                            }
                        }
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['IdNumber'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            $isMissing = 1; 
                            if($isUserFound != 1)
                            {
                                $personName = $getUserDetail[0]['aadharname'];
                                $gender = $getUserDetail[0]['gender'];
                                $aadhar = $getUserDetail[0]['aadhar_id'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getUserDetail[0]['dob']);
                                $age = ($from->diff($to)->y);
                                $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    if($userphoto == '' || $userphoto == base_url())
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : '');
                                    }
                                }
                            }
                        }
                    }
                }
            }
            $getIfLapataAvailable = $this->db->query('select * from unknown_person where isFinalSubmitted=1 and awsEventName="All" and isFound=0 and aadharNumber="'.$_POST['IdNumber'].'" and expiryDate >= "'.date('Y-m-d h:i:s').'" order by dateCreated desc')->result_array();
            if(count($getIfLapataAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isVisible = 1;
                $isLapata = 1;
                $lapataId = $getIfLapataAvailable[0]['id'];
                $isMissing = 0;
                $missingId = array();
                if(!$isUserFound)
                {
                    $isVerified = 0;
                    $personName = $getIfLapataAvailable[0]['person_name'];
                    $gender = ($getIfLapataAvailable[0]['Gender'] == 'boy' ? 'MALE' : 'FEMALE');
                    $aadhar = $getIfLapataAvailable[0]['aadharNumber'];
                    $age = ($getIfLapataAvailable[0]['Age']);
                    $address = $getIfLapataAvailable[0]['city'].','.$getIfLapataAvailable[0]['state'];
                    $userphoto = base_url().''.(($getIfLapataAvailable[0]['Photo'] != NULL) ? $getIfLapataAvailable[0]['Photo'] : $userphoto);
                }
            }
            if($this->getSettings('generalNotification') == 'true')
            {
                if($personId != '')
                {
                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$personId);
                    $query_res = $query->result_array();
                    
                    if(count($query_res) > 0)
                    {
                        foreach ($query_res as $query_res_data) {
                            $registrationIds[] =$query_res_data['token'];
                        }
                        
                        $url ="https://fcm.googleapis.com/fcm/send";
                        $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                        $fields=array(
                            "registration_ids"=>$registrationIds,
                            'data' => array("msg"=>"Khoji"),
                            'priority' => 'high',
                            "click_action"=>base_url(),
                            "notification"=>array(
                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                "title"=>"Khoji",
                            )   
                        );
                        $headers=array(
                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                            'Content-Type:application/json'
                        );
                        $ch=curl_init();
                        curl_setopt($ch,CURLOPT_URL,$url);
                        curl_setopt($ch,CURLOPT_POST,true);
                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                        curl_exec($ch);
                    }
                }   
            }
            if($this->getSettings('mahakumbhIdentity') == 'Yes')
            {
                $getIfKhoyaPayaAvailable = $this->db->query('select * from mahakumbhSpecial where isFound=0 and aadharNumber="'.$_POST['IdNumber'].'" order by dateCreated desc')->result_array();
                if(count($getIfKhoyaPayaAvailable) > 0)
                {
                    $isAadharCorrect = 1;
                    $isVisible = 1;
                    $isKhoya = 1;
                    $khoyaId = $getIfKhoyaPayaAvailable[0]['id'];
                    $isMissing = 0;
                    $missingId = array();
                    if(!$isUserFound)
                    {
                        $isVerified = 0;
                        $personName = $getIfKhoyaPayaAvailable[0]['person_name'];
                        $gender = ($getIfKhoyaPayaAvailable[0]['Gender'] == 'Male' ? 'MALE' : 'FEMALE');
                        $aadhar = $getIfKhoyaPayaAvailable[0]['aadharNumber'];
                        $age = ($getIfKhoyaPayaAvailable[0]['AgeBand']);
                        $address = $getIfKhoyaPayaAvailable[0]['district'].','.$getIfKhoyaPayaAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfKhoyaPayaAvailable[0]['Photo'] != NULL) ? $getIfKhoyaPayaAvailable[0]['Photo'] : $userphoto);
                    }
                }
            }
            if($isLapata != 1)
            {
                $getIfUnknownAvailable = $this->db->query('select * from unknown_person where isFinalSubmitted=1 and awsEventName !="All" and isFound=0 and aadharNumber="'.$_POST['IdNumber'].'" order by dateCreated desc')->result_array();
                // $getIfUnknownAvailable = array();
                if(count($getIfUnknownAvailable) > 0)
                {
                    $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$getIfUnknownAvailable[0]['id'])->result_array();
                    if($getApplicationNumber[0]['isKyc'] == 1)
                    {
                        $notifyData = array(
                            'isLogin' => 1,
                            'loggedInUserId' => $_SESSION['user_id'],
                            'loginUserType' => $_SESSION['login_type'],
                            'dateCreated' => date('Y-m-d H:i:s'),
                            'mobileNumber' => $_SESSION['landingMob'],
                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                            'searchType' => 'Unknown',
                            'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                            'isIdentity' => 1,
                            'identityType' => 'aadhar',
                            'identityNumber' => $_POST['IdNumber']
                        );
                        $insert = $this->db->insert('searchnotification',$notifyData);
                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }

                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else{
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }
                    }else{
                        $notifyData = array(
                            'isLogin' => 1,
                            'loggedInUserId' => $_SESSION['user_id'],
                            'loginUserType' => $_SESSION['login_type'],
                            'dateCreated' => date('Y-m-d H:i:s'),
                            'mobileNumber' => $_SESSION['landingMob'],
                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                            'searchType' => 'Unknown',
                            'complainantUserType' => 'NonKyc',
                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                            'isIdentity' => 1,
                            'identityType' => 'aadhar',
                            'identityNumber' => $_POST['IdNumber']
                        );
                        $insert = $this->db->insert('searchnotification',$notifyData);
                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }

                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else{
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }
                    }
                    if($isUserFound != 1)
                    {
                        if($getIfUnknownAvailable[0]['uploaded_by'] == 'police')
                        {
                            $getPoliceDetail = $this->db->query('select * from police where police_id='.$getIfUnknownAvailable[0]['policeId'])->result_array();
                            $finalresponse = array(
                                'isUserFound' => $isUserFound,
                                'status' => 'unknown',
                                'isLapata' => $isLapata,
                                'isKhoya' => $isKhoya,
                                'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                'type' => 'police',
                                'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                'address' => strtoupper($getPoliceDetail[0]['thanaName'].' - '.$getPoliceDetail[0]['state'].', '.$getPoliceDetail[0]['district']),
                                'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                'age' => $getIfUnknownAvailable[0]['Age'],
                                'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                'id' => $getIfUnknownAvailable[0]['Application_no'],
                                'registration_mobile' => (($getPoliceDetail[0]['registration_mobile'] != NULL) ? $getPoliceDetail[0]['registration_mobile'] : ''),
                                'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                            );   
                        }else{
                            if($getIfUnknownAvailable[0]['userId'] == NULL)
                            {
                                $getNgoDetail = $this->db->query('select * from ngo where Id='.$getIfUnknownAvailable[0]['ngoId'])->result_array();
                                $finalresponse = array(
                                    'isUserFound' => $isUserFound,
                                    'status' => 'unknown',
                                    'isLapata' => $isLapata,
                                    'isKhoya' => $isKhoya,
                                    'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                    'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                    'type' => 'ngo',
                                    'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                    'address' => strtoupper($getNgoDetail[0]['ngoName'].' - '.$getNgoDetail[0]['ngoState'].', '.$getNgoDetail[0]['ngoDistrict'].', '.$getNgoDetail[0]['ngoCity']),
                                    'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                    'age' => $getIfUnknownAvailable[0]['Age'],
                                    'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                    'registration_mobile' => (($getNgoDetail[0]['ngoRegistrationNumber'] != NULL) ? $getNgoDetail[0]['ngoRegistrationNumber'] : ''),
                                    'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                    'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                    'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                                    'id' => $getIfUnknownAvailable[0]['Application_no']
                                );   
                            }else{
                                $getUserDetail = $this->db->query('select * from user where uid='.$getIfUnknownAvailable[0]['userId'])->result_array();
                                $finalresponse = array(
                                    'isUserFound' => $isUserFound,
                                    'status' => 'unknown',
                                    'isKhoya' => $isKhoya,
                                    'isLapata' => $isLapata,
                                    'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                    'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                    'type' => 'user',
                                    'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                    'address' => strtoupper($getUserDetail[0]['aadharname'].' - '.$getUserDetail[0]['state'].', '.$getUserDetail[0]['district'].', '.$getUserDetail[0]['vtc']),
                                    'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                    'age' => $getIfUnknownAvailable[0]['Age'],
                                    'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                    'registration_mobile' => (($getUserDetail[0]['registration_mobile'] != NULL) ? $getUserDetail[0]['registration_mobile'] : ''),
                                    'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                    'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                    'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                                    'id' => $getIfUnknownAvailable[0]['Application_no']
                                );   
                            }
                        }
                    }else{
                        $finalresponse = array(
                            'isUserFound' => $isUserFound,
                            'isKhoya' => $isKhoya,
                            'status' => 'unknown',
                            'isLapata' => $isLapata,
                            'personName' => strtoupper($personName),
                            'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                            'address' => strtoupper($address),
                            'photo' => ($userphoto != '' ? $userphoto : base_url().$getIfUnknownAvailable[0]['Photo']),
                            'age' => $age,
                            'gender' => strtolower($gender),
                            'id' => $getIfUnknownAvailable[0]['Application_no']
                        );
                    }
                    $insertdata = array(
                        'lapataId' => $lapataId,
                        'isLapata' => $isLapata,
                        'wantedIds' => implode(',',$wantedId),
                        'criminalIds' => implode(',',$criminalId),
                        'khoyaId' => $khoyaId,
                        'isKhoya' => $isKhoya,
                        'Idtype' => $_POST['idType'],
                        'IdNumber' => $idNumber,
                        'userId' => $_SESSION['user_id'],
                        'isFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'missingId' => implode(',',$missingId),
                        'personId' => $personId
                    );
                    $insert = $this->db->insert('searchpersonhistory',$insertdata);
                    $_SESSION['searchId'] = $this->db->insert_id();
                    echo json_encode($finalresponse);
                }else{
                    $insertdata = array(
                        'lapataId' => $lapataId,
                        'isLapata' => $isLapata,
                        'khoyaId' => $khoyaId,
                        'isKhoya' => $isKhoya,
                        'wantedIds' => implode(',',$wantedId),
                        'criminalIds' => implode(',',$criminalId),
                        'Idtype' => $_POST['idType'],
                        'IdNumber' => $idNumber,
                        'userId' => $_SESSION['user_id'],
                        'isFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'missingId' => implode(',',$missingId),
                        'personId' => $personId
                    );
                    $insert = $this->db->insert('searchpersonhistory',$insertdata);
                    if($insert)
                    {
                        if($isAadharCorrect == 1)
                        {
                            $_SESSION['searchId'] = $this->db->insert_id();
                            $isOnlyUser = 0;
                            if(!$isWanted && !$isLapata && !$isCriminal && !$isMissing)
                            {
                                $isOnlyUser = 1;
                            }
                            $response = array(
                                'personId' => $personId,
                                'isOnlyUser' => $isOnlyUser,
                                'status' => 'success',
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'isWanted' => $isWanted,
                                'isLapata' => $isLapata,
                                'isCriminal' => $isCriminal,
                                'isKhoya' => $isKhoya,
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                                'message' => 'Person Found',
                                'isVisible' => $isVisible,
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => ($userphoto != '' ? $userphoto : base_url().'assets/img/noimage.jpg')
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }      
                }
            }else{
                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$lapataId)->result_array();
                if($getApplicationNumber[0]['isKyc'] == 1)
                {
                    $notifyData = array(
                        'isLogin' => 1,
                        'loggedInUserId' => $_SESSION['user_id'],
                        'loginUserType' => $_SESSION['login_type'],
                        'dateCreated' => date('Y-m-d H:i:s'),
                        'mobileNumber' => $_SESSION['landingMob'],
                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                        'searchType' => 'Lapata',
                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                        'isIdentity' => 1,
                        'identityType' => 'aadhar',
                        'identityNumber' => $_POST['IdNumber']
                    );
                    $insert = $this->db->insert('searchnotification',$notifyData);
                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                    {
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }

                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                    {
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }
                            
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }else{
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }
                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }
                }else{
                    $notifyData = array(
                        'isLogin' => 1,
                        'loggedInUserId' => $_SESSION['user_id'],
                        'loginUserType' => $_SESSION['login_type'],
                        'dateCreated' => date('Y-m-d H:i:s'),
                        'mobileNumber' => $_SESSION['landingMob'],
                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                        'searchType' => 'Lapata',
                        'complainantUserType' => 'NonKyc',
                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                        'isIdentity' => 1,
                        'identityType' => 'aadhar',
                        'identityNumber' => $_POST['IdNumber']
                    );
                    $insert = $this->db->insert('searchnotification',$notifyData);
                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                    {
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }

                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                    {
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }
                            
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }else{
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }
                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }
                }
                $insertdata = array(
                    'lapataId' => $lapataId,
                    'isLapata' => $isLapata,
                    'khoyaId' => $khoyaId,
                    'isKhoya' => $isKhoya,
                    'wantedIds' => implode(',',$wantedId),
                    'criminalIds' => implode(',',$criminalId),
                    'Idtype' => $_POST['idType'],
                    'IdNumber' => $idNumber,
                    'userId' => $_SESSION['user_id'],
                    'isFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'missingId' => implode(',',$missingId),
                    'personId' => $personId
                );
                $insert = $this->db->insert('searchpersonhistory',$insertdata);
                if($insert)
                {
                    if($isAadharCorrect == 1)
                    {
                        $_SESSION['searchId'] = $this->db->insert_id();
                        $isOnlyUser = 0;
                        if(!$isWanted && !$isLapata && !$isCriminal && !$isMissing)
                        {
                            $isOnlyUser = 1;
                        }
                        $response = array(
                            'personId' => $personId,
                            'isOnlyUser' => $isOnlyUser,
                            'status' => 'success',
                            'personName' => $personName,
                            'isKhoya' => $isKhoya,
                            'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                            'gender' => strtolower($gender),
                            'isWanted' => $isWanted,
                            'isLapata' => $isLapata,
                            'isCriminal' => $isCriminal,
                            'age' => $age,
                            'address' => $address,
                            'isAadharCorrect' => $isAadharCorrect,
                            'isDobCorrect' => 1,
                            'isGenderCorrect' => 1,
                            'message' => 'Person Found',
                            'isVisible' => $isVisible,
                            'isMissing' => $isMissing,
                            'isVerified' => $isVerified,
                            'isRegistered' => $isUserFound,
                            'image' => ($userphoto != '' ? $userphoto : base_url().'assets/img/noimage.jpg')
                        );
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                            'isDobCorrect' => 1,
                            'isGenderCorrect' => 1,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }   
            }
        }
        if($_POST['idType'] == 'dl')
        {
            $idNumber = $_POST['IdNumber'];
            $getIfAlready = $this->db->query('select * from dllist where dlNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $personId = $getIfPersonAvailable[0]['uid'];
                $isAadharCorrect = 1;
                $isVisible = $getIfPersonAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y);
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getIfWantedAvailable = $this->db->query('select * from criminals where aadharNumber="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFinalSubmitted=1 and type="wanted" and status="Active"')->result_array();   
            }else{
                $getIfWantedAvailable = array();
            }
            if(count($getIfWantedAvailable) > 0)
            {
                $isVisible = 1;
                $isAadharCorrect = 1;
                $isWanted = 1;
                if($isUserFound != 1)
                {
                    $personName = $getIfWantedAvailable[0]['personName'];
                    $gender = $getIfWantedAvailable[0]['gender'];
                    $aadhar = $getIfWantedAvailable[0]['aadharNumber'];
                    if($getIfWantedAvailable[0]['dob'] != '0000-00-00')
                    {
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfWantedAvailable[0]['dob']);
                        $age = ($from->diff($to)->y);
                    }else{
                        $age = '';
                    }
                    $address = '';
                    if($getIfWantedAvailable[0]['state'] != '')
                    {
                        $address .= $getIfWantedAvailable[0]['state'];
                    }
                    if($getIfWantedAvailable[0]['district'] != '')
                    {
                        if($address != '')
                        {
                            $address .= ' , '.$getIfWantedAvailable[0]['district'];
                        }else{
                            $address .= $getIfWantedAvailable[0]['district'];
                        }
                    }
                    if($getIfWantedAvailable[0]['city'] != '')
                    {
                        if($address != '')
                        {
                            $address .= ' , '.$getIfWantedAvailable[0]['city'];
                        }else{
                            $address .= $getIfWantedAvailable[0]['city'];
                        }
                    }
                    $getPhotos = $this->db->query('select * from criminalphotos where crimeId='.$getIfWantedAvailable[0]['Id'])->result_array();
                    if($userphoto == '' || $userphoto == base_url())
                    {
                        $userphoto = ((count($getPhotos) > 0) ? base_url().''.$getPhotos[0]['photourl'] : base_url().''.$getIfWantedAvailable[0]['photo']);   
                    }
                }
                foreach($getIfWantedAvailable as $k=>$v)
                {
                    array_push($wantedId,$v['Id']);
                }
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getIfCriminalAvailable = $this->db->query('select * from criminals where aadharNumber="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFinalSubmitted=1 and type="criminal" and status="Active"')->result_array();   
            }else{
                $getIfCriminalAvailable = array();
            }
            if(count($getIfCriminalAvailable) > 0)
            {
                $isVisible = 1;
                $isAadharCorrect = 1;
                $isCriminal = 1;
                if($isUserFound != 1)
                {
                    $personName = $getIfCriminalAvailable[0]['personName'];
                    $gender = $getIfCriminalAvailable[0]['gender'];
                    $aadhar = $getIfCriminalAvailable[0]['aadharNumber'];
                    if($getIfCriminalAvailable[0]['dob'] != '0000-00-00')
                    {
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfCriminalAvailable[0]['dob']);
                        $age = ($from->diff($to)->y);
                    }else{
                        $age = '';
                    }
                    $address = '';
                    if($getIfCriminalAvailable[0]['state'] != '')
                    {
                        $address .= $getIfCriminalAvailable[0]['state'];
                    }
                    if($getIfCriminalAvailable[0]['district'] != '')
                    {
                        if($address != '')
                        {
                            $address .= ' , '.$getIfCriminalAvailable[0]['district'];
                        }else{
                            $address .= $getIfCriminalAvailable[0]['district'];
                        }
                    }
                    if($getIfCriminalAvailable[0]['city'] != '')
                    {
                        if($address != '')
                        {
                            $address .= ' , '.$getIfCriminalAvailable[0]['city'];
                        }else{
                            $address .= $getIfCriminalAvailable[0]['city'];
                        }
                    }
                    $getPhotos = $this->db->query('select * from criminalphotos where crimeId='.$getIfCriminalAvailable[0]['Id'])->result_array();
                    if($userphoto == '' || $userphoto == base_url())
                    {
                        $userphoto = ((count($getPhotos) > 0) ? base_url().''.$getPhotos[0]['photourl'] : base_url().''.$getIfCriminalAvailable[0]['photo']);   
                    }
                }
                foreach($getIfCriminalAvailable as $k=>$v)
                {
                    array_push($criminalId,$v['Id']);
                }
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
            }else{
                $getMissingPerson = array();
            }
            if(count($getMissingPerson) > 0)
            {
                $isVisible = 1;
                $isAadharCorrect = 1;
                if($getMissingPerson[0]['missinggender'] != NULL)
                {
                    $isMissing = 1;
                    if($isUserFound != 1)
                    {
                        $personName = $getMissingPerson[0]['missingname'];
                        $gender = $getMissingPerson[0]['missinggender'];
                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                        $age = ($from->diff($to)->y);
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        }else{
                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                        }
                        if(count($getIfPersonAvailable) == 0)
                        {
                            if($userphoto == '' || $userphoto == base_url())
                            {
                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : '');
                            }
                        }
                    }
                }else{
                    $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                    if(count($getFullDetail) > 0)
                    {
                        $isMissing = 1; 
                        if($isUserFound != 1)
                        {
                            $personName = $getMissingPerson[0]['missingname'];
                            $gender = $getMissingPerson[0]['missinggender'];
                            $aadhar = $getMissingPerson[0]['missingaadhar'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getMissingPerson[0]['missingdob']);
                            $age = ($from->diff($to)->y);
                            if(count($getIfPersonAvailable) > 0)
                            {
                                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                            }else{
                                $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                            }
                            if(count($getIfPersonAvailable) == 0)
                            {
                                if($userphoto == '' || $userphoto == base_url())
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : '');
                                }
                            }
                        }
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            $isMissing = 1; 
                            if($isUserFound != 1)
                            {
                                $personName = $getUserDetail[0]['aadharname'];
                                $gender = $getUserDetail[0]['gender'];
                                $aadhar = $getUserDetail[0]['aadhar_id'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getUserDetail[0]['dob']);
                                $age = ($from->diff($to)->y);
                                $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    if($userphoto == '' || $userphoto == base_url())
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : '');
                                    }
                                }
                            }
                        }
                    }
                }
            }
            $getIfLapataAvailable = $this->db->query('select * from unknown_person where isFinalSubmitted=1 and awsEventName="All" and isFound=0 and DL_no="'.$_POST['IdNumber'].'" and expiryDate >= "'.date('Y-m-d h:i:s').'"')->result_array();
            if(count($getIfLapataAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isVisible = 1;
                $isLapata = 1;
                $lapataId = $getIfLapataAvailable[0]['id'];
                $isMissing = 0;
                $missingId = array();
                if(!$isUserFound)
                {
                    $isVerified = 0;
                    $personName = $getIfLapataAvailable[0]['person_name'];
                    $gender = ($getIfLapataAvailable[0]['Gender'] == 'boy' ? 'MALE' : 'FEMALE');
                    $aadhar = $getIfLapataAvailable[0]['aadharNumber'];
                    $age = ($getIfLapataAvailable[0]['Age']);
                    $address = $getIfLapataAvailable[0]['city'].','.$getIfLapataAvailable[0]['state'];
                    $userphoto = base_url().''.(($getIfLapataAvailable[0]['Photo'] != NULL) ? $getIfLapataAvailable[0]['Photo'] : $userphoto);
                }
            }
            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
            if($this->getSettings('generalNotification') == 'true')
            {
                if($personId != '')
                {
                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$personId);
                    $query_res = $query->result_array();
                    
                    if(count($query_res) > 0)
                    {
                        foreach ($query_res as $query_res_data) {
                            $registrationIds[] =$query_res_data['token'];
                        }
                        
                        $url ="https://fcm.googleapis.com/fcm/send";
                        $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                        $fields=array(
                            "registration_ids"=>$registrationIds,
                            'data' => array("msg"=>"Khoji"),
                            'priority' => 'high',
                            "click_action"=>base_url(),
                            "notification"=>array(
                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                "title"=>"Khoji",
                            )   
                        );
                        $headers=array(
                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                            'Content-Type:application/json'
                        );
                        $ch=curl_init();
                        curl_setopt($ch,CURLOPT_URL,$url);
                        curl_setopt($ch,CURLOPT_POST,true);
                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                        curl_exec($ch);
                    }
                }   
            }

            if($this->getSettings('mahakumbhIdentity') == 'Yes')
            {
                $getIfKhoyaPayaAvailable = $this->db->query('select * from mahakumbhSpecial where isFound=0 and DL_no="'.$_POST['IdNumber'].'" order by dateCreated desc')->result_array();
                if(count($getIfKhoyaPayaAvailable) > 0)
                {
                    $isAadharCorrect = 1;
                    $isVisible = 1;
                    $isKhoya = 1;
                    $khoyaId = $getIfKhoyaPayaAvailable[0]['id'];
                    $isMissing = 0;
                    $missingId = array();
                    if(!$isUserFound)
                    {
                        $isVerified = 0;
                        $personName = $getIfKhoyaPayaAvailable[0]['person_name'];
                        $gender = ($getIfKhoyaPayaAvailable[0]['Gender'] == 'Male' ? 'MALE' : 'FEMALE');
                        $aadhar = $getIfKhoyaPayaAvailable[0]['aadharNumber'];
                        $age = ($getIfKhoyaPayaAvailable[0]['AgeBand']);
                        $address = $getIfKhoyaPayaAvailable[0]['district'].','.$getIfKhoyaPayaAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfKhoyaPayaAvailable[0]['Photo'] != NULL) ? $getIfKhoyaPayaAvailable[0]['Photo'] : $userphoto);
                    }
                }
            }

            if($isLapata != 1)
            {
                $getIfUnknownAvailable = $this->db->query('select * from unknown_person where isFinalSubmitted=1 and awsEventName !="All" and isFound=0 and DL_no="'.$_POST['IdNumber'].'" order by id desc')->result_array();
                // $getIfUnknownAvailable = array();
                if(count($getIfUnknownAvailable) > 0)
                {
                    $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$getIfUnknownAvailable[0]['id'])->result_array();
                    if($getApplicationNumber[0]['isKyc'] == 1)
                    {
                        $notifyData = array(
                            'isLogin' => 1,
                            'loggedInUserId' => $_SESSION['user_id'],
                            'loginUserType' => $_SESSION['login_type'],
                            'dateCreated' => date('Y-m-d H:i:s'),
                            'mobileNumber' => $_SESSION['landingMob'],
                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                            'searchType' => 'Unknown',
                            'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                            'isIdentity' => 1,
                            'identityType' => 'aadhar',
                            'identityNumber' => $_POST['IdNumber']
                        );
                        $insert = $this->db->insert('searchnotification',$notifyData);
                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }

                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else{
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }
                    }else{
                        $notifyData = array(
                            'isLogin' => 1,
                            'loggedInUserId' => $_SESSION['user_id'],
                            'loginUserType' => $_SESSION['login_type'],
                            'dateCreated' => date('Y-m-d H:i:s'),
                            'mobileNumber' => $_SESSION['landingMob'],
                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                            'searchType' => 'Unknown',
                            'complainantUserType' => 'NonKyc',
                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                            'isIdentity' => 1,
                            'identityType' => 'aadhar',
                            'identityNumber' => $_POST['IdNumber']
                        );
                        $insert = $this->db->insert('searchnotification',$notifyData);
                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }

                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else{
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }
                    }
                    if($isUserFound != 1)
                    {
                        if($getIfUnknownAvailable[0]['uploaded_by'] == 'police')
                        {
                            $getPoliceDetail = $this->db->query('select * from police where police_id='.$getIfUnknownAvailable[0]['policeId'])->result_array();
                            $finalresponse = array(
                                'isUserFound' => $isUserFound,
                                'status' => 'unknown',
                                'isKhoya' => $isKhoya,
                                'isLapata' => $isLapata,
                                'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                'type' => 'police',
                                'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                'address' => strtoupper($getPoliceDetail[0]['thanaName'].' - '.$getPoliceDetail[0]['state'].', '.$getPoliceDetail[0]['district']),
                                'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                'age' => $getIfUnknownAvailable[0]['Age'],
                                'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                'id' => $getIfUnknownAvailable[0]['Application_no'],
                                'registration_mobile' => (($getPoliceDetail[0]['registration_mobile'] != NULL) ? $getPoliceDetail[0]['registration_mobile'] : ''),
                                'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                            );   
                        }
                        else
                        {
                            if($getIfUnknownAvailable[0]['uploaded_by']=='user')
                            {
                                $getUserDetail = $this->db->query('select * from user where uid='.$getIfUnknownAvailable[0]['userId'])->result_array();
                                $finalresponse = array(
                                    'status' => 'unknown',
                                    'isUserFound' => $isUserFound,
                                    'isKhoya' => $isKhoya,
                                    'isLapata' => $isLapata,
                                    'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                    'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                    'type' => 'ngo',
                                    'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                    'address' => strtoupper($getUserDetail[0]['vtc'].' - '.$getUserDetail[0]['state'].', '.$getUserDetail[0]['district']),
                                    'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                    'age' => $getIfUnknownAvailable[0]['Age'],
                                    'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                    'registration_mobile' => (($getUserDetail[0]['registration_mobile'] != NULL) ? $getUserDetail[0]['registration_mobile'] : ''),
                                    'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                    'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                    'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                                    'id' => $getIfUnknownAvailable[0]['Application_no']
                                );   
                            }
                            else
                            {
                                $getNgoDetail = $this->db->query('select * from ngo where Id='.$getIfUnknownAvailable[0]['ngoId'])->result_array();
                                $finalresponse = array(
                                    'status' => 'unknown',
                                    'isUserFound' => $isUserFound,
                                    'isKhoya' => $isKhoya,
                                    'isLapata' => $isLapata,
                                    'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                    'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                    'type' => 'ngo',
                                    'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                    'address' => strtoupper($getNgoDetail[0]['ngoName'].' - '.$getNgoDetail[0]['ngoState'].', '.$getNgoDetail[0]['ngoDistrict'].', '.$getNgoDetail[0]['ngoCity']),
                                    'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                    'age' => $getIfUnknownAvailable[0]['Age'],
                                    'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                    'registration_mobile' => (($getNgoDetail[0]['ngoRegistrationNumber'] != NULL) ? $getNgoDetail[0]['ngoRegistrationNumber'] : ''),
                                    'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                    'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                    'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                                    'id' => $getIfUnknownAvailable[0]['Application_no']
                                );  
                            }
                             
                        }
                    }else{
                        $finalresponse = array(
                            'isUserFound' => $isUserFound,
                            'status' => 'unknown',
                            'isLapata' => $isLapata,
                            'isKhoya' => $isKhoya,
                            'personName' => strtoupper($personName),
                            'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                            'address' => strtoupper($address),
                            'photo' => ($userphoto != '' ? $userphoto : base_url().$getIfUnknownAvailable[0]['Photo']),
                            'age' => $age,
                            'gender' => strtolower($gender),
                            'id' => $getIfUnknownAvailable[0]['Application_no']
                        );
                    }
                    $insertdata = array(
                        'khoyaId' => $khoyaId,
                        'isKhoya' => $isKhoya,
                        'lapataId' => $lapataId,
                        'isLapata' => $isLapata,
                        'wantedIds' => implode(',',$wantedId),
                        'criminalIds' => implode(',',$criminalId),
                        'Idtype' => $_POST['idType'],
                        'IdNumber' => $idNumber,
                        'userId' => $_SESSION['user_id'],
                        'isFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'missingId' => implode(',',$missingId),
                        'personId' => $personId
                    );
                    $insert = $this->db->insert('searchpersonhistory',$insertdata);
                    $_SESSION['searchId'] = $this->db->insert_id();
                    echo json_encode($finalresponse);
                }else{
                    $insertdata = array(
                        'lapataId' => $lapataId,
                        'khoyaId' => $khoyaId,
                        'isKhoya' => $isKhoya,
                        'isLapata' => $isLapata,
                        'wantedIds' => implode(',',$wantedId),
                        'criminalIds' => implode(',',$criminalId),
                        'Idtype' => $_POST['idType'],
                        'IdNumber' => $idNumber,
                        'userId' => $_SESSION['user_id'],
                        'isFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'missingId' => implode(',',$missingId),
                        'personId' => $personId
                    );
                    $insert = $this->db->insert('searchpersonhistory',$insertdata);
                    if($insert)
                    {
                        if($isAadharCorrect == 1)
                        {
                            $_SESSION['searchId'] = $this->db->insert_id();
                            $isOnlyUser = 0;
                            if(!$isWanted && !$isLapata && !$isCriminal && !$isMissing)
                            {
                                $isOnlyUser = 1;
                            }
                            $response = array(
                                'personId' => $personId,
                                'isOnlyUser' => $isOnlyUser,
                                'status' => 'success',
                                'isKhoya' => $isKhoya,
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'isWanted' => $isWanted,
                                'isLapata' => $isLapata,
                                'isCriminal' => $isCriminal,
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                                'message' => 'Person Found',
                                'isVisible' => $isVisible,
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => ($userphoto != '' ? $userphoto : base_url().'assets/img/noimage.jpg')
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }   
                }   
            }else{
                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$lapataId)->result_array();
                if($getApplicationNumber[0]['isKyc'] == 0)
                {
                    $notifyData = array(
                        'isLogin' => 1,
                        'loggedInUserId' => $_SESSION['user_id'],
                        'loginUserType' => $_SESSION['login_type'],
                        'dateCreated' => date('Y-m-d H:i:s'),
                        'mobileNumber' => $_SESSION['landingMob'],
                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                        'searchType' => 'Lapata',
                        'complainantUserType' => 'NonKyc',
                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                        'isIdentity' => 1,
                        'identityType' => 'aadhar',
                        'identityNumber' => $_POST['IdNumber']
                    );
                    $insert = $this->db->insert('searchnotification',$notifyData);
                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                    {
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }

                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                    {
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }
                            
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }else{
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }
                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }
                }else{
                    $notifyData = array(
                        'isLogin' => 1,
                        'loggedInUserId' => $_SESSION['user_id'],
                        'loginUserType' => $_SESSION['login_type'],
                        'dateCreated' => date('Y-m-d H:i:s'),
                        'mobileNumber' => $_SESSION['landingMob'],
                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                        'searchType' => 'Lapata',
                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                        'isIdentity' => 1,
                        'identityType' => 'aadhar',
                        'identityNumber' => $_POST['IdNumber']
                    );
                    $insert = $this->db->insert('searchnotification',$notifyData);
                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                    {
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }

                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                    {
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }
                            
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }else{
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }
                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }
                }
                $insertdata = array(
                    'lapataId' => $lapataId,
                    'isLapata' => $isLapata,
                    'khoyaId' => $khoyaId,
                    'isKhoya' => $isKhoya,
                    'wantedIds' => implode(',',$wantedId),
                    'criminalIds' => implode(',',$criminalId),
                    'Idtype' => $_POST['idType'],
                    'IdNumber' => $idNumber,
                    'userId' => $_SESSION['user_id'],
                    'isFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'missingId' => implode(',',$missingId),
                    'personId' => $personId
                );
                $insert = $this->db->insert('searchpersonhistory',$insertdata);
                if($insert)
                {
                    if($isAadharCorrect == 1)
                    {
                        $_SESSION['searchId'] = $this->db->insert_id();
                        $isOnlyUser = 0;
                        if(!$isWanted && !$isLapata && !$isCriminal && !$isMissing)
                        {
                            $isOnlyUser = 1;
                        }
                        $response = array(
                            'personId' => $personId,
                            'isOnlyUser' => $isOnlyUser,
                            'isKhoya' => $isKhoya,
                            'status' => 'success',
                            'personName' => $personName,
                            'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                            'gender' => strtolower($gender),
                            'isWanted' => $isWanted,
                            'isLapata' => $isLapata,
                            'isCriminal' => $isCriminal,
                            'age' => $age,
                            'address' => $address,
                            'isAadharCorrect' => $isAadharCorrect,
                            'isDobCorrect' => 1,
                            'isGenderCorrect' => 1,
                            'message' => 'Person Found',
                            'isVisible' => $isVisible,
                            'isMissing' => $isMissing,
                            'isVerified' => $isVerified,
                            'isRegistered' => $isUserFound,
                            'image' => ($userphoto != '' ? $userphoto : base_url().'assets/img/noimage.jpg')
                        );
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                            'isDobCorrect' => 1,
                            'isGenderCorrect' => 1,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }   
            }
        }
        if($_POST['idType'] == 'voter')
        {
            $idNumber = $_POST['IdNumber'];
            $getIfAlready = $this->db->query('select * from voterslist where voterNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $personId = $getIfPersonAvailable[0]['uid'];
                $isAadharCorrect = 1;
                $isVisible = $getIfPersonAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y);
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getIfWantedAvailable = $this->db->query('select * from criminals where aadharNumber="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFinalSubmitted=1 and type="wanted" and status="Active"')->result_array();   
            }else{
                $getIfWantedAvailable = array();
            }
            if(count($getIfWantedAvailable) > 0)
            {
                $isVisible = 1;
                $isAadharCorrect = 1;
                $isWanted = 1;
                if($isUserFound != 1)
                {
                    $personName = $getIfWantedAvailable[0]['personName'];
                    $gender = $getIfWantedAvailable[0]['gender'];
                    $aadhar = $getIfWantedAvailable[0]['aadharNumber'];
                    if($getIfWantedAvailable[0]['dob'] != '0000-00-00')
                    {
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfWantedAvailable[0]['dob']);
                        $age = ($from->diff($to)->y);
                    }else{
                        $age = '';
                    }
                    $address = '';
                    if($getIfWantedAvailable[0]['state'] != '')
                    {
                        $address .= $getIfWantedAvailable[0]['state'];
                    }
                    if($getIfWantedAvailable[0]['district'] != '')
                    {
                        if($address != '')
                        {
                            $address .= ' , '.$getIfWantedAvailable[0]['district'];
                        }else{
                            $address .= $getIfWantedAvailable[0]['district'];
                        }
                    }
                    if($getIfWantedAvailable[0]['city'] != '')
                    {
                        if($address != '')
                        {
                            $address .= ' , '.$getIfWantedAvailable[0]['city'];
                        }else{
                            $address .= $getIfWantedAvailable[0]['city'];
                        }
                    }
                    $getPhotos = $this->db->query('select * from criminalphotos where crimeId='.$getIfWantedAvailable[0]['Id'])->result_array();
                    if($userphoto == '' || $userphoto == base_url())
                    {
                        $userphoto = ((count($getPhotos) > 0) ? base_url().''.$getPhotos[0]['photourl'] : base_url().''.$getIfWantedAvailable[0]['photo']);   
                    }
                }
                foreach($getIfWantedAvailable as $k=>$v)
                {
                    array_push($wantedId,$v['Id']);
                }
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getIfCriminalAvailable = $this->db->query('select * from criminals where aadharNumber="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFinalSubmitted=1 and type="criminal" and status="Active"')->result_array();   
            }else{
                $getIfCriminalAvailable = array();
            }
            if(count($getIfCriminalAvailable) > 0)
            {
                $isVisible = 1;
                $isAadharCorrect = 1;
                $isCriminal = 1;
                if($isUserFound != 1)
                {
                    $personName = $getIfCriminalAvailable[0]['personName'];
                    $gender = $getIfCriminalAvailable[0]['gender'];
                    $aadhar = $getIfCriminalAvailable[0]['aadharNumber'];
                    if($getIfCriminalAvailable[0]['dob'] != '0000-00-00')
                    {
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfCriminalAvailable[0]['dob']);
                        $age = ($from->diff($to)->y);
                    }else{
                        $age = '';
                    }
                    $address = '';
                    if($getIfCriminalAvailable[0]['state'] != '')
                    {
                        $address .= $getIfCriminalAvailable[0]['state'];
                    }
                    if($getIfCriminalAvailable[0]['district'] != '')
                    {
                        if($address != '')
                        {
                            $address .= ' , '.$getIfCriminalAvailable[0]['district'];
                        }else{
                            $address .= $getIfCriminalAvailable[0]['district'];
                        }
                    }
                    if($getIfCriminalAvailable[0]['city'] != '')
                    {
                        if($address != '')
                        {
                            $address .= ' , '.$getIfCriminalAvailable[0]['city'];
                        }else{
                            $address .= $getIfCriminalAvailable[0]['city'];
                        }
                    }
                    $getPhotos = $this->db->query('select * from criminalphotos where crimeId='.$getIfCriminalAvailable[0]['Id'])->result_array();
                    if($userphoto == '' || $userphoto == base_url())
                    {
                        $userphoto = ((count($getPhotos) > 0) ? base_url().''.$getPhotos[0]['photourl'] : base_url().''.$getIfCriminalAvailable[0]['photo']);   
                    }
                }
                foreach($getIfCriminalAvailable as $k=>$v)
                {
                    array_push($criminalId,$v['Id']);
                }
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
            }else{
                $getMissingPerson = array();
            }
            if(count($getMissingPerson) > 0)
            {
                $isVisible = 1;
                $isAadharCorrect = 1;
                if($getMissingPerson[0]['missinggender'] != NULL)
                {
                    $isMissing = 1;
                    if($isUserFound != 1)
                    {
                        $personName = $getMissingPerson[0]['missingname'];
                        $gender = $getMissingPerson[0]['missinggender'];
                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                        $age = ($from->diff($to)->y);
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        }else{
                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                        }
                        if(count($getIfPersonAvailable) == 0)
                        {
                            if($userphoto == '' || $userphoto == base_url())
                            {
                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : '');
                            }
                        }
                    }
                }else{
                    $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                    if(count($getFullDetail) > 0)
                    {
                        $isMissing = 1; 
                        if($isUserFound != 1)
                        {
                            $personName = $getMissingPerson[0]['missingname'];
                            $gender = $getMissingPerson[0]['missinggender'];
                            $aadhar = $getMissingPerson[0]['missingaadhar'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getMissingPerson[0]['missingdob']);
                            $age = ($from->diff($to)->y);
                            if(count($getIfPersonAvailable) > 0)
                            {
                                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                            }else{
                                $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                            }
                            if(count($getIfPersonAvailable) == 0)
                            {
                                if($userphoto == '' || $userphoto == base_url())
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : '');
                                }
                            }
                        }
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            $isMissing = 1; 
                            if($isUserFound != 1)
                            {
                                $personName = $getUserDetail[0]['aadharname'];
                                $gender = $getUserDetail[0]['gender'];
                                $aadhar = $getUserDetail[0]['aadhar_id'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getUserDetail[0]['dob']);
                                $age = ($from->diff($to)->y);
                                $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    if($userphoto == '' || $userphoto == base_url())
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : '');
                                    }
                                }
                            }
                        }
                    }
                }
            }
            $getIfLapataAvailable = $this->db->query('select * from unknown_person where isFinalSubmitted=1 and awsEventName="All" and isFound=0 and voter_id="'.$_POST['IdNumber'].'" and expiryDate >= "'.date('Y-m-d h:i:s').'"')->result_array();
            if(count($getIfLapataAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isVisible = 1;
                $isLapata = 1;
                $lapataId = $getIfLapataAvailable[0]['id'];
                $isMissing = 0;
                $missingId = array();
                if(!$isUserFound)
                {
                    $isVerified = 0;
                    $personName = $getIfLapataAvailable[0]['person_name'];
                    $gender = ($getIfLapataAvailable[0]['Gender'] == 'boy' ? 'MALE' : 'FEMALE');
                    $aadhar = $getIfLapataAvailable[0]['aadharNumber'];
                    $age = ($getIfLapataAvailable[0]['Age']);
                    $address = $getIfLapataAvailable[0]['city'].','.$getIfLapataAvailable[0]['state'];
                    $userphoto = base_url().''.(($getIfLapataAvailable[0]['Photo'] != NULL) ? $getIfLapataAvailable[0]['Photo'] : $userphoto);
                }
            }
            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
            if($this->getSettings('generalNotification') == 'true')
            {
                if($personId != '')
                {
                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$personId);
                    $query_res = $query->result_array();
                    
                    if(count($query_res) > 0)
                    {
                        foreach ($query_res as $query_res_data) {
                            $registrationIds[] =$query_res_data['token'];
                        }
                        
                        $url ="https://fcm.googleapis.com/fcm/send";
                        $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                        $fields=array(
                            "registration_ids"=>$registrationIds,
                            'data' => array("msg"=>"Khoji"),
                            'priority' => 'high',
                            "click_action"=>base_url(),
                            "notification"=>array(
                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                "title"=>"Khoji",
                            )   
                        );
                        $headers=array(
                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                            'Content-Type:application/json'
                        );
                        $ch=curl_init();
                        curl_setopt($ch,CURLOPT_URL,$url);
                        curl_setopt($ch,CURLOPT_POST,true);
                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                        curl_exec($ch);
                    }
                }   
            }
            if($this->getSettings('mahakumbhIdentity') == 'Yes')
            {
                $getIfKhoyaPayaAvailable = $this->db->query('select * from mahakumbhSpecial where isFound=0 and voter_id="'.$_POST['IdNumber'].'" order by dateCreated desc')->result_array();
                if(count($getIfKhoyaPayaAvailable) > 0)
                {
                    $isAadharCorrect = 1;
                    $isVisible = 1;
                    $isKhoya = 1;
                    $khoyaId = $getIfKhoyaPayaAvailable[0]['id'];
                    $isMissing = 0;
                    $missingId = array();
                    if(!$isUserFound)
                    {
                        $isVerified = 0;
                        $personName = $getIfKhoyaPayaAvailable[0]['person_name'];
                        $gender = ($getIfKhoyaPayaAvailable[0]['Gender'] == 'Male' ? 'MALE' : 'FEMALE');
                        $aadhar = $getIfKhoyaPayaAvailable[0]['aadharNumber'];
                        $age = ($getIfKhoyaPayaAvailable[0]['AgeBand']);
                        $address = $getIfKhoyaPayaAvailable[0]['district'].','.$getIfKhoyaPayaAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfKhoyaPayaAvailable[0]['Photo'] != NULL) ? $getIfKhoyaPayaAvailable[0]['Photo'] : $userphoto);
                    }
                }
            }
            if($isLapata != 1)
            {
                $getIfUnknownAvailable = $this->db->query('select * from unknown_person where isFinalSubmitted=1 and awsEventName !="All" and isFound=0 and voter_id="'.$_POST['IdNumber'].'" order by id desc')->result_array();
                // $getIfUnknownAvailable = array();
                if(count($getIfUnknownAvailable) > 0)
                {
                    $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$getIfUnknownAvailable[0]['id'])->result_array();
                    if($getApplicationNumber[0]['isKyc'] == 0)
                    {
                        $notifyData = array(
                            'isLogin' => 1,
                            'loggedInUserId' => $_SESSION['user_id'],
                            'loginUserType' => $_SESSION['login_type'],
                            'dateCreated' => date('Y-m-d H:i:s'),
                            'mobileNumber' => $_SESSION['landingMob'],
                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                            'searchType' => 'Lapata',
                            'complainantUserType' => 'NonKyc',
                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                            'isIdentity' => 1,
                            'identityType' => 'voter',
                            'identityNumber' => $_POST['IdNumber']
                        );
                        $insert = $this->db->insert('searchnotification',$notifyData);
                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }

                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else{
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }
                    }else{
                        $notifyData = array(
                            'isLogin' => 1,
                            'loggedInUserId' => $_SESSION['user_id'],
                            'loginUserType' => $_SESSION['login_type'],
                            'dateCreated' => date('Y-m-d H:i:s'),
                            'mobileNumber' => $_SESSION['landingMob'],
                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                            'searchType' => 'Lapata',
                            'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                            'isIdentity' => 1,
                            'identityType' => 'voter',
                            'identityNumber' => $_POST['IdNumber']
                        );
                        $insert = $this->db->insert('searchnotification',$notifyData);
                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }

                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else{
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }
                    }
                    if($isUserFound != 1)
                    {
                        if($getIfUnknownAvailable[0]['uploaded_by'] == 'police')
                        {
                            $getPoliceDetail = $this->db->query('select * from police where police_id='.$getIfUnknownAvailable[0]['policeId'])->result_array();
                            $finalresponse = array(
                                'status' => 'unknown',
                                'isLapata' => $isLapata,
                                'isKhoya' => $isKhoya,
                                'isUserFound' => $isUserFound,
                                'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                'type' => 'police',
                                'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                'address' => strtoupper($getPoliceDetail[0]['thanaName'].' - '.$getPoliceDetail[0]['state'].', '.$getPoliceDetail[0]['district']),
                                'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                'age' => $getIfUnknownAvailable[0]['Age'],
                                'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                'id' => $getIfUnknownAvailable[0]['Application_no'],
                                'registration_mobile' => (($getPoliceDetail[0]['registration_mobile'] != NULL) ? $getPoliceDetail[0]['registration_mobile'] : ''),
                                'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                            );   
                        }
                        else
                        {
                            if($getIfUnknownAvailable[0]['uploaded_by']=='user')
                            {
                                $getUserDetail = $this->db->query('select * from user where uid='.$getIfUnknownAvailable[0]['userId'])->result_array();
                                $finalresponse = array(
                                    'status' => 'unknown',
                                    'isUserFound' => $isUserFound,
                                    'isKhoya' => $isKhoya,
                                    'isLapata' => $isLapata,
                                    'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                    'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                    'type' => 'ngo',
                                    'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                    'address' => strtoupper($getUserDetail[0]['vtc'].' - '.$getUserDetail[0]['state'].', '.$getUserDetail[0]['district']),
                                    'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                    'age' => $getIfUnknownAvailable[0]['Age'],
                                    'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                    'registration_mobile' => (($getUserDetail[0]['registration_mobile'] != NULL) ? $getUserDetail[0]['registration_mobile'] : ''),
                                    'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                    'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                    'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                                    'id' => $getIfUnknownAvailable[0]['Application_no']
                                );   
                            }
                            else
                            {
                                $getNgoDetail = $this->db->query('select * from ngo where Id='.$getIfUnknownAvailable[0]['ngoId'])->result_array();
                                $finalresponse = array(
                                    'status' => 'unknown',
                                    'isLapata' => $isLapata,
                                    'isKhoya' => $isKhoya,
                                    'isUserFound' => $isUserFound,
                                    'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                    'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                    'type' => 'ngo',
                                    'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                    'address' => strtoupper($getNgoDetail[0]['ngoName'].' - '.$getNgoDetail[0]['ngoState'].', '.$getNgoDetail[0]['ngoDistrict'].', '.$getNgoDetail[0]['ngoCity']),
                                    'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                    'age' => $getIfUnknownAvailable[0]['Age'],
                                    'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                    'registration_mobile' => (($getNgoDetail[0]['ngoRegistrationNumber'] != NULL) ? $getNgoDetail[0]['ngoRegistrationNumber'] : ''),
                                    'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                    'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                    'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                                    'id' => $getIfUnknownAvailable[0]['Application_no']
                                );   
                            }
                            
                        }
                    }else{
                        $finalresponse = array(
                            'isUserFound' => $isUserFound,
                            'status' => 'unknown',
                            'isLapata' => $isLapata,
                            'isKhoya' => $isKhoya,
                            'personName' => strtoupper($personName),
                            'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                            'address' => strtoupper($address),
                            'photo' => ($userphoto != '' ? $userphoto : base_url().$getIfUnknownAvailable[0]['Photo']),
                            'age' => $age,
                            'gender' => strtolower($gender),
                            'id' => $getIfUnknownAvailable[0]['Application_no']
                        );
                    }
                    $insertdata = array(
                        'lapataId' => $lapataId,
                        'isLapata' => $isLapata,
                        'khoyaId' => $khoyaId,
                        'isKhoya' => $isKhoya,
                        'wantedIds' => implode(',',$wantedId),
                        'criminalIds' => implode(',',$criminalId),
                        'Idtype' => $_POST['idType'],
                        'IdNumber' => $idNumber,
                        'userId' => $_SESSION['user_id'],
                        'isFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'missingId' => implode(',',$missingId),
                        'personId' => $personId
                    );
                    $insert = $this->db->insert('searchpersonhistory',$insertdata);
                    $_SESSION['searchId'] = $this->db->insert_id();
                    echo json_encode($finalresponse);
                }else{
                    $insertdata = array(
                        'lapataId' => $lapataId,
                        'isLapata' => $isLapata,
                        'khoyaId' => $khoyaId,
                        'isKhoya' => $isKhoya,
                        'wantedIds' => implode(',',$wantedId),
                        'criminalIds' => implode(',',$criminalId),
                        'Idtype' => $_POST['idType'],
                        'IdNumber' => $idNumber,
                        'userId' => $_SESSION['user_id'],
                        'isFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'missingId' => implode(',',$missingId),
                        'personId' => $personId
                    );
                    $insert = $this->db->insert('searchpersonhistory',$insertdata);
                    if($insert)
                    {
                        if($isAadharCorrect == 1)
                        {
                            $_SESSION['searchId'] = $this->db->insert_id();
                            $isOnlyUser = 0;
                            if(!$isWanted && !$isLapata && !$isCriminal && !$isMissing)
                            {
                                $isOnlyUser = 1;
                            }
                            $response = array(
                                'personId' => $personId,
                                'isOnlyUser' => $isOnlyUser,
                                'status' => 'success',
                                'isKhoya' => $isKhoya,
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'isWanted' => $isWanted,
                                'isLapata' => $isLapata,
                                'isCriminal' => $isCriminal,
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                                'message' => 'Person Found',
                                'isVisible' => $isVisible,
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => ($userphoto != '' ? $userphoto : base_url().'assets/img/noimage.jpg')
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }   
                }   
            }else{
                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$lapataId)->result_array();
                if($getApplicationNumber[0]['isKyc'] == 0)
                {
                    $notifyData = array(
                        'isLogin' => 1,
                        'loggedInUserId' => $_SESSION['user_id'],
                        'loginUserType' => $_SESSION['login_type'],
                        'dateCreated' => date('Y-m-d H:i:s'),
                        'mobileNumber' => $_SESSION['landingMob'],
                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                        'searchType' => 'Unknown',
                        'complainantUserType' => 'NonKyc',
                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                        'isIdentity' => 1,
                        'identityType' => 'voter',
                        'identityNumber' => $_POST['IdNumber']
                    );
                    $insert = $this->db->insert('searchnotification',$notifyData);
                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                    {
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }

                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                    {
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }
                            
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }else{
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }
                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }
                }else{
                    $notifyData = array(
                        'isLogin' => 1,
                        'loggedInUserId' => $_SESSION['user_id'],
                        'loginUserType' => $_SESSION['login_type'],
                        'dateCreated' => date('Y-m-d H:i:s'),
                        'mobileNumber' => $_SESSION['landingMob'],
                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                        'searchType' => 'Lapata',
                        'complainantUserType' => 'NonKyc',
                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                        'isIdentity' => 1,
                        'identityType' => 'voter',
                        'identityNumber' => $_POST['IdNumber']
                    );
                    $insert = $this->db->insert('searchnotification',$notifyData);
                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                    {
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }

                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                    {
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }
                            
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }else{
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }
                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }
                }
                $insertdata = array(
                    'lapataId' => $lapataId,
                    'isLapata' => $isLapata,
                    'khoyaId' => $khoyaId,
                    'isKhoya' => $isKhoya,
                    'wantedIds' => implode(',',$wantedId),
                    'criminalIds' => implode(',',$criminalId),
                    'Idtype' => $_POST['idType'],
                    'IdNumber' => $idNumber,
                    'userId' => $_SESSION['user_id'],
                    'isFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'missingId' => implode(',',$missingId),
                    'personId' => $personId
                );
                $insert = $this->db->insert('searchpersonhistory',$insertdata);
                if($insert)
                {
                    if($isAadharCorrect == 1)
                    {
                        $_SESSION['searchId'] = $this->db->insert_id();
                        $isOnlyUser = 0;
                        if(!$isWanted && !$isLapata && !$isCriminal && !$isMissing)
                        {
                            $isOnlyUser = 1;
                        }
                        $response = array(
                            'personId' => $personId,
                            'status' => 'success',
                            'isOnlyUser' => $isOnlyUser,
                            'personName' => $personName,
                            'isKhoya' => $isKhoya,
                            'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                            'gender' => strtolower($gender),
                            'isWanted' => $isWanted,
                            'isLapata' => $isLapata,
                            'isCriminal' => $isCriminal,
                            'age' => $age,
                            'address' => $address,
                            'isAadharCorrect' => $isAadharCorrect,
                            'isDobCorrect' => 1,
                            'isGenderCorrect' => 1,
                            'message' => 'Person Found',
                            'isVisible' => $isVisible,
                            'isMissing' => $isMissing,
                            'isVerified' => $isVerified,
                            'isRegistered' => $isUserFound,
                            'image' => ($userphoto != '' ? $userphoto : base_url().'assets/img/noimage.jpg')
                        );
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                            'isDobCorrect' => 1,
                            'isGenderCorrect' => 1,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }   
            }
        }
        if($_POST['idType'] == 'pan')
        {
            $idNumber = $_POST['IdNumber'];
            $getIfAlready = $this->db->query('select * from panlist where panNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $personId = $getIfPersonAvailable[0]['uid'];
                $isAadharCorrect = 1;
                $isVisible = $getIfPersonAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y);
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getIfWantedAvailable = $this->db->query('select * from criminals where aadharNumber="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFinalSubmitted=1 and type="wanted" and status="Active"')->result_array();   
            }else{
                $getIfWantedAvailable = array();
            }
            if(count($getIfWantedAvailable) > 0)
            {
                $isVisible = 1;
                $isAadharCorrect = 1;
                $isWanted = 1;
                if($isUserFound != 1)
                {
                    $personName = $getIfWantedAvailable[0]['personName'];
                    $gender = $getIfWantedAvailable[0]['gender'];
                    $aadhar = $getIfWantedAvailable[0]['aadharNumber'];
                    if($getIfWantedAvailable[0]['dob'] != '0000-00-00')
                    {
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfWantedAvailable[0]['dob']);
                        $age = ($from->diff($to)->y);
                    }else{
                        $age = '';
                    }
                    $address = '';
                    if($getIfWantedAvailable[0]['state'] != '')
                    {
                        $address .= $getIfWantedAvailable[0]['state'];
                    }
                    if($getIfWantedAvailable[0]['district'] != '')
                    {
                        if($address != '')
                        {
                            $address .= ' , '.$getIfWantedAvailable[0]['district'];
                        }else{
                            $address .= $getIfWantedAvailable[0]['district'];
                        }
                    }
                    if($getIfWantedAvailable[0]['city'] != '')
                    {
                        if($address != '')
                        {
                            $address .= ' , '.$getIfWantedAvailable[0]['city'];
                        }else{
                            $address .= $getIfWantedAvailable[0]['city'];
                        }
                    }
                    $getPhotos = $this->db->query('select * from criminalphotos where crimeId='.$getIfWantedAvailable[0]['Id'])->result_array();
                    if($userphoto == '' || $userphoto == base_url())
                    {
                        $userphoto = ((count($getPhotos) > 0) ? base_url().''.$getPhotos[0]['photourl'] : base_url().''.$getIfWantedAvailable[0]['photo']);   
                    }
                }
                foreach($getIfWantedAvailable as $k=>$v)
                {
                    array_push($wantedId,$v['Id']);
                }
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getIfCriminalAvailable = $this->db->query('select * from criminals where aadharNumber="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFinalSubmitted=1 and type="criminal" and status="Active"')->result_array();   
            }else{
                $getIfCriminalAvailable = array();
            }
            if(count($getIfCriminalAvailable) > 0)
            {
                $isVisible = 1;
                $isAadharCorrect = 1;
                $isCriminal = 1;
                if($isUserFound != 1)
                {
                    $personName = $getIfCriminalAvailable[0]['personName'];
                    $gender = $getIfCriminalAvailable[0]['gender'];
                    $aadhar = $getIfCriminalAvailable[0]['aadharNumber'];
                    if($getIfCriminalAvailable[0]['dob'] != '0000-00-00')
                    {
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getIfCriminalAvailable[0]['dob']);
                        $age = ($from->diff($to)->y);
                    }else{
                        $age = '';
                    }
                    $address = '';
                    if($getIfCriminalAvailable[0]['state'] != '')
                    {
                        $address .= $getIfCriminalAvailable[0]['state'];
                    }
                    if($getIfCriminalAvailable[0]['district'] != '')
                    {
                        if($address != '')
                        {
                            $address .= ' , '.$getIfCriminalAvailable[0]['district'];
                        }else{
                            $address .= $getIfCriminalAvailable[0]['district'];
                        }
                    }
                    if($getIfCriminalAvailable[0]['city'] != '')
                    {
                        if($address != '')
                        {
                            $address .= ' , '.$getIfCriminalAvailable[0]['city'];
                        }else{
                            $address .= $getIfCriminalAvailable[0]['city'];
                        }
                    }
                    $getPhotos = $this->db->query('select * from criminalphotos where crimeId='.$getIfCriminalAvailable[0]['Id'])->result_array();
                    if($userphoto == '' || $userphoto == base_url())
                    {
                        $userphoto = ((count($getPhotos) > 0) ? base_url().''.$getPhotos[0]['photourl'] : base_url().''.$getIfCriminalAvailable[0]['photo']);   
                    }
                }
                foreach($getIfCriminalAvailable as $k=>$v)
                {
                    array_push($criminalId,$v['Id']);
                }
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
            }else{
                $getMissingPerson = array();
            }
            if(count($getMissingPerson) > 0)
            {
                $isVisible = 1;
                $isAadharCorrect = 1;
                if($getMissingPerson[0]['missinggender'] != NULL)
                {
                    $isMissing = 1;
                    if($isUserFound != 1)
                    {
                        $personName = $getMissingPerson[0]['missingname'];
                        $gender = $getMissingPerson[0]['missinggender'];
                        $aadhar = $getMissingPerson[0]['missingaadhar'];
                        $from=new DateTime(date('Y-m-d'));
                        $to   = new DateTime($getMissingPerson[0]['missingdob']);
                        $age = ($from->diff($to)->y);
                        if(count($getIfPersonAvailable) > 0)
                        {
                            $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                        }else{
                            $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                        }
                        if(count($getIfPersonAvailable) == 0)
                        {
                            if($userphoto == '' || $userphoto == base_url())
                            {
                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : '');
                            }
                        }
                    }
                }else{
                    $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                    if(count($getFullDetail) > 0)
                    {
                        $isMissing = 1; 
                        if($isUserFound != 1)
                        {
                            $personName = $getMissingPerson[0]['missingname'];
                            $gender = $getMissingPerson[0]['missinggender'];
                            $aadhar = $getMissingPerson[0]['missingaadhar'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getMissingPerson[0]['missingdob']);
                            $age = ($from->diff($to)->y);
                            if(count($getIfPersonAvailable) > 0)
                            {
                                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                            }else{
                                $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                            }
                            if(count($getIfPersonAvailable) == 0)
                            {
                                if($userphoto == '' || $userphoto == base_url())
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : '');
                                }
                            }
                        }
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            $isMissing = 1; 
                            if($isUserFound != 1)
                            {
                                $personName = $getUserDetail[0]['aadharname'];
                                $gender = $getUserDetail[0]['gender'];
                                $aadhar = $getUserDetail[0]['aadhar_id'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getUserDetail[0]['dob']);
                                $age = ($from->diff($to)->y);
                                $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    if($userphoto == '' || $userphoto == base_url())
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : '');
                                    }
                                }
                            }
                        }
                    }
                }
            }
            $getIfLapataAvailable = $this->db->query('select * from unknown_person where isFinalSubmitted=1 and awsEventName="All" and isFound=0 and PAN="'.$_POST['IdNumber'].'" and expiryDate >= "'.date('Y-m-d h:i:s').'"')->result_array();
            if(count($getIfLapataAvailable) > 0)
            {
                $isAadharCorrect = 1;
                $isVisible = 1;
                $isLapata = 1;
                $lapataId = $getIfLapataAvailable[0]['id'];
                $isMissing = 0;
                $missingId = array();
                if(!$isUserFound)
                {
                    $isVerified = 0;
                    $personName = $getIfLapataAvailable[0]['person_name'];
                    $gender = ($getIfLapataAvailable[0]['Gender'] == 'boy' ? 'MALE' : 'FEMALE');
                    $aadhar = $getIfLapataAvailable[0]['aadharNumber'];
                    $age = ($getIfLapataAvailable[0]['Age']);
                    $address = $getIfLapataAvailable[0]['city'].','.$getIfLapataAvailable[0]['state'];
                    $userphoto = base_url().''.(($getIfLapataAvailable[0]['Photo'] != NULL) ? $getIfLapataAvailable[0]['Photo'] : $userphoto);
                }
            }
            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
            if($this->getSettings('generalNotification') == 'true')
            {
                if($personId != '')
                {
                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$personId);
                    $query_res = $query->result_array();
                    
                    if(count($query_res) > 0)
                    {
                        foreach ($query_res as $query_res_data) {
                            $registrationIds[] =$query_res_data['token'];
                        }
                        
                        $url ="https://fcm.googleapis.com/fcm/send";
                        $fields=array(
                            "registration_ids"=>$registrationIds,
                            'data' => array("msg"=>"Khoji"),
                            'priority' => 'high',
                            "click_action"=>base_url(),
                            "notification"=>array(
                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                "title"=>"Khoji",
                            )   
                        );
                        $headers=array(
                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                            'Content-Type:application/json'
                        );
                        $ch=curl_init();
                        curl_setopt($ch,CURLOPT_URL,$url);
                        curl_setopt($ch,CURLOPT_POST,true);
                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                        curl_exec($ch);
                    }
                }   
            }
            if($this->getSettings('mahakumbhIdentity') == 'Yes')
            {
                $getIfKhoyaPayaAvailable = $this->db->query('select * from mahakumbhSpecial where isFound=0 and PAN="'.$_POST['IdNumber'].'" order by dateCreated desc')->result_array();
                if(count($getIfKhoyaPayaAvailable) > 0)
                {
                    $isAadharCorrect = 1;
                    $isVisible = 1;
                    $isKhoya = 1;
                    $khoyaId = $getIfKhoyaPayaAvailable[0]['id'];
                    $isMissing = 0;
                    $missingId = array();
                    if(!$isUserFound)
                    {
                        $isVerified = 0;
                        $personName = $getIfKhoyaPayaAvailable[0]['person_name'];
                        $gender = ($getIfKhoyaPayaAvailable[0]['Gender'] == 'Male' ? 'MALE' : 'FEMALE');
                        $aadhar = $getIfKhoyaPayaAvailable[0]['aadharNumber'];
                        $age = ($getIfKhoyaPayaAvailable[0]['AgeBand']);
                        $address = $getIfKhoyaPayaAvailable[0]['district'].','.$getIfKhoyaPayaAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfKhoyaPayaAvailable[0]['Photo'] != NULL) ? $getIfKhoyaPayaAvailable[0]['Photo'] : $userphoto);
                    }
                }
            }
            if($isLapata != 1)
            {
                $getIfUnknownAvailable = $this->db->query('select * from unknown_person where isFinalSubmitted=1 and awsEventName !="All" and isFound=0 and PAN="'.$_POST['IdNumber'].'" order by id desc')->result_array();
                // $getIfUnknownAvailable = array();
                if(count($getIfUnknownAvailable) > 0)
                {
                    $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$getIfUnknownAvailable[0]['id'])->result_array();
                    if($getApplicationNumber[0]['isKyc'] == 1)
                    {
                        $notifyData = array(
                            'isLogin' => 1,
                            'loggedInUserId' => $_SESSION['user_id'],
                            'loginUserType' => $_SESSION['login_type'],
                            'dateCreated' => date('Y-m-d H:i:s'),
                            'mobileNumber' => $_SESSION['landingMob'],
                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                            'searchType' => 'Unknown',
                            'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                            'isIdentity' => 1,
                            'identityType' => 'pan',
                            'identityNumber' => $_POST['IdNumber']
                        );
                        $insert = $this->db->insert('searchnotification',$notifyData);
                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }

                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else{
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }
                    }else{
                        $notifyData = array(
                            'isLogin' => 1,
                            'loggedInUserId' => $_SESSION['user_id'],
                            'loginUserType' => $_SESSION['login_type'],
                            'dateCreated' => date('Y-m-d H:i:s'),
                            'mobileNumber' => $_SESSION['landingMob'],
                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                            'searchType' => 'Unknown',
                            'complainantUserType' => 'NonKyc',
                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                            'isIdentity' => 1,
                            'identityType' => 'pan',
                            'identityNumber' => $_POST['IdNumber']
                        );
                        $insert = $this->db->insert('searchnotification',$notifyData);
                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }

                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else{
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }
                    }
                    if($isUserFound != 1)
                    {
                        if($getIfUnknownAvailable[0]['uploaded_by'] == 'police')
                        {
                            $getPoliceDetail = $this->db->query('select * from police where police_id='.$getIfUnknownAvailable[0]['policeId'])->result_array();
                            $finalresponse = array(
                                'isKhoya' => $isKhoya,
                                'isUserFound' => $isUserFound,
                                'status' => 'unknown',
                                'isLapata' => $isLapata,
                                'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                'type' => 'police',
                                'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                'address' => strtoupper($getPoliceDetail[0]['thanaName'].' - '.$getPoliceDetail[0]['state'].', '.$getPoliceDetail[0]['district']),
                                'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                'age' => $getIfUnknownAvailable[0]['Age'],
                                'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                'id' => $getIfUnknownAvailable[0]['Application_no'],
                                'registration_mobile' => (($getPoliceDetail[0]['registration_mobile'] != NULL) ? $getPoliceDetail[0]['registration_mobile'] : ''),
                                'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                            );   
                        }
                        else
                        {
                            if($getIfUnknownAvailable[0]['uploaded_by']=='user')
                            {
                                $getUserDetail = $this->db->query('select * from user where uid='.$getIfUnknownAvailable[0]['userId'])->result_array();
                                $finalresponse = array(
                                    'status' => 'unknown',
                                    'isKhoya' => $isKhoya,
                                    'isUserFound' => $isUserFound,
                                    'isLapata' => $isLapata,
                                    'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                    'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                    'type' => 'ngo',
                                    'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                    'address' => strtoupper($getUserDetail[0]['vtc'].' - '.$getUserDetail[0]['state'].', '.$getUserDetail[0]['district']),
                                    'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                    'age' => $getIfUnknownAvailable[0]['Age'],
                                    'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                    'registration_mobile' => (($getUserDetail[0]['registration_mobile'] != NULL) ? $getUserDetail[0]['registration_mobile'] : ''),
                                    'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                    'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                    'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                                    'id' => $getIfUnknownAvailable[0]['Application_no']
                                );   
                            }
                            else
                            {
                                $getNgoDetail = $this->db->query('select * from ngo where Id='.$getIfUnknownAvailable[0]['ngoId'])->result_array();
                                $finalresponse = array(
                                    'status' => 'unknown',
                                    'isKhoya' => $isKhoya,
                                    'isUserFound' => $isUserFound,
                                    'isLapata' => $isLapata,
                                    'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                    'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                    'type' => 'ngo',
                                    'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                    'address' => strtoupper($getNgoDetail[0]['ngoName'].' - '.$getNgoDetail[0]['ngoState'].', '.$getNgoDetail[0]['ngoDistrict'].', '.$getNgoDetail[0]['ngoCity']),
                                    'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                    'age' => $getIfUnknownAvailable[0]['Age'],
                                    'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                    'registration_mobile' => (($getNgoDetail[0]['ngoRegistrationNumber'] != NULL) ? $getNgoDetail[0]['ngoRegistrationNumber'] : ''),
                                    'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                    'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                    'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                                    'id' => $getIfUnknownAvailable[0]['Application_no']
                                );   
                            }
                            

                           
                        }
                    }
                    else{
                        $finalresponse = array(
                            'isUserFound' => $isUserFound,
                            'status' => 'unknown',
                            'isKhoya' => $isKhoya,
                            'isLapata' => $isLapata,
                            'personName' => strtoupper($personName),
                            'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                            'address' => strtoupper($address),
                            'photo' => ($userphoto != '' ? $userphoto : base_url().$getIfUnknownAvailable[0]['Photo']),
                            'age' => $age,
                            'gender' => strtolower($gender),
                            'id' => $getIfUnknownAvailable[0]['Application_no']
                        );
                    }
                    $insertdata = array(
                        'lapataId' => $lapataId,
                        'isLapata' => $isLapata,
                        'khoyaId' => $khoyaId,
                        'isKhoya' => $isKhoya,
                        'wantedIds' => implode(',',$wantedId),
                        'criminalIds' => implode(',',$criminalId),
                        'Idtype' => $_POST['idType'],
                        'IdNumber' => $idNumber,
                        'userId' => $_SESSION['user_id'],
                        'isFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'missingId' => implode(',',$missingId),
                        'personId' => $personId
                    );
                    $insert = $this->db->insert('searchpersonhistory',$insertdata);
                    $_SESSION['searchId'] = $this->db->insert_id();
                    echo json_encode($finalresponse);
                }
                else
                {
                    $insertdata = array(
                        'lapataId' => $lapataId,
                        'isLapata' => $isLapata,
                        'khoyaId' => $khoyaId,
                        'isKhoya' => $isKhoya,
                        'wantedIds' => implode(',',$wantedId),
                        'criminalIds' => implode(',',$criminalId),
                        'Idtype' => $_POST['idType'],
                        'IdNumber' => $idNumber,
                        'userId' => $_SESSION['user_id'],
                        'isFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'missingId' => implode(',',$missingId),
                        'personId' => $personId
                    );
                    $insert = $this->db->insert('searchpersonhistory',$insertdata);
                    if($insert)
                    {
                        if($isAadharCorrect == 1)
                        {
                            $_SESSION['searchId'] = $this->db->insert_id();
                            $isOnlyUser = 0;
                            if(!$isWanted && !$isLapata && !$isCriminal && !$isMissing)
                            {
                                $isOnlyUser = 1;
                            }
                            $response = array(
                                'personId' => $personId,
                                'isOnlyUser' => $isOnlyUser,
                                'status' => 'success',
                                'isKhoya' => $isKhoya,
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'isWanted' => $isWanted,
                                'isLapata' => $isLapata,
                                'isCriminal' => $isCriminal,
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                                'message' => 'Person Found',
                                'isVisible' => $isVisible,
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => ($userphoto != '' ? $userphoto : base_url().'assets/img/noimage.jpg')
                            );
                            echo json_encode($response);   
                        }else{
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }   
            }
            else
            {
                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$lapataId)->result_array();
                if($getApplicationNumber[0]['isKyc'] == 1)
                {
                    $notifyData = array(
                        'isLogin' => 1,
                        'loggedInUserId' => $_SESSION['user_id'],
                        'loginUserType' => $_SESSION['login_type'],
                        'dateCreated' => date('Y-m-d H:i:s'),
                        'mobileNumber' => $_SESSION['landingMob'],
                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                        'searchType' => 'Lapata',
                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                        'isIdentity' => 1,
                        'identityType' => 'pan',
                        'identityNumber' => $_POST['IdNumber']
                    );
                    $insert = $this->db->insert('searchnotification',$notifyData);
                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                    {
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }

                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                    {
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }
                            
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }else{
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }
                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }
                }else{
                    $notifyData = array(
                        'isLogin' => 1,
                        'loggedInUserId' => $_SESSION['user_id'],
                        'loginUserType' => $_SESSION['login_type'],
                        'dateCreated' => date('Y-m-d H:i:s'),
                        'mobileNumber' => $_SESSION['landingMob'],
                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                        'searchType' => 'Lapata',
                        'complainantUserType' => 'NonKyc',
                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                        'isIdentity' => 1,
                        'identityType' => 'pan',
                        'identityNumber' => $_POST['IdNumber']
                    );
                    $insert = $this->db->insert('searchnotification',$notifyData);
                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                    {
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }

                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                    {
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }
                            
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }else{
                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                        $query_res = $query->result_array();
                        
                        if(count($query_res) > 0)
                        {
                            foreach ($query_res as $query_res_data) {
                                $registrationIds[] =$query_res_data['token'];
                            }
                            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                            $url ="https://fcm.googleapis.com/fcm/send";
                            $fields=array(
                                "registration_ids"=>$registrationIds,
                                'data' => array("msg"=>"Khoji"),
                                'priority' => 'high',
                                "click_action"=>base_url(),
                                "notification"=>array(
                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                    "title"=>"Khoji",
                                )   
                            );
                            $headers=array(
                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                'Content-Type:application/json'
                            );
                            $ch=curl_init();
                            curl_setopt($ch,CURLOPT_URL,$url);
                            curl_setopt($ch,CURLOPT_POST,true);
                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                            curl_exec($ch);
                        }
                    }
                }
                $insertdata = array(
                    'lapataId' => $lapataId,
                    'isLapata' => $isLapata,
                    'khoyaId' => $khoyaId,
                    'isKhoya' => $isKhoya,
                    'wantedIds' => implode(',',$wantedId),
                    'criminalIds' => implode(',',$criminalId),
                    'Idtype' => $_POST['idType'],
                    'IdNumber' => $idNumber,
                    'userId' => $_SESSION['user_id'],
                    'isFound' => $isUserFound,
                    'isMissing' => $isMissing,
                    'missingId' => implode(',',$missingId),
                    'personId' => $personId
                );
                $insert = $this->db->insert('searchpersonhistory',$insertdata);
                if($insert)
                {
                    if($isAadharCorrect == 1)
                    {
                        $_SESSION['searchId'] = $this->db->insert_id();
                        $isOnlyUser = 0;
                        if(!$isWanted && !$isLapata && !$isCriminal && !$isMissing)
                        {
                            $isOnlyUser = 1;
                        }
                        $response = array(
                            'personId' => $personId,
                            'isOnlyUser' => $isOnlyUser,
                            'isKhoya' => $isKhoya,
                            'status' => 'success',
                            'personName' => $personName,
                            'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                            'gender' => strtolower($gender),
                            'isWanted' => $isWanted,
                            'isLapata' => $isLapata,
                            'isCriminal' => $isCriminal,
                            'age' => $age,
                            'address' => $address,
                            'isAadharCorrect' => $isAadharCorrect,
                            'isDobCorrect' => 1,
                            'isGenderCorrect' => 1,
                            'message' => 'Person Found',
                            'isVisible' => $isVisible,
                            'isMissing' => $isMissing,
                            'isVerified' => $isVerified,
                            'isRegistered' => $isUserFound,
                            'image' => ($userphoto != '' ? $userphoto : base_url().'assets/img/noimage.jpg')
                        );
                        echo json_encode($response);   
                    }else{
                        $response = array(
                            'status' => 'incorrect',
                            'isAadharCorrect' => $isAadharCorrect,
                            'isDobCorrect' => 1,
                            'isGenderCorrect' => 1,
                        );
                        echo json_encode($response);   
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }   
            }
        }
        if($_POST['idType'] == 'gold')
        {
            
            $idNumber = $_POST['IdNumber'];
            if(strlen($_POST['IdNumber']) != 6)
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Gold HUID number must be of 6 characters'
                );
                echo json_encode($response);
                return;
            }
            $personCount = 1;
            $this->db->or_where('goldHUIDNumber1', $_POST['IdNumber']);
            $this->db->or_where('goldHUIDNumber2', $_POST['IdNumber']);
            $this->db->or_where('goldHUIDNumber3', $_POST['IdNumber']);
            $getIfPersonAvailable = $this->db->get('user')->result_array();
            
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                foreach($getIfPersonAvailable as $k=>$v)
                {
                    $personCount++;
                }
                $personId = $getIfPersonAvailable[0]['uid'];
                $isAadharCorrect = 1;
                $isVisible = $getIfPersonAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y);
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            
            $getMissingPerson = $this->db->query('select * from missingperson where goldId="'.$_POST['IdNumber'].'" and isFound !=1 and isFinalSubmitted = 1')->result_array();
            if(count($getMissingPerson) > 0)
            {
                $isVisible = 1;
                $isMissing = 1;
                if($isUserFound != 1)
                {
                    $personName = $getMissingPerson[0]['missingname'];
                    if($gender == '')
                    {
                        $gender = $getMissingPerson[0]['missinggender'];
                    }
                    $aadhar = $getMissingPerson[0]['missingaadhar'];
                    $from=new DateTime(date('Y-m-d'));
                    $to   = new DateTime($getMissingPerson[0]['missingdob']);
                    if($age == '')
                    {
                        $age = ($from->diff($to)->y);
                    }
                    $missingId = $getMissingPerson[0]['Id'];
                    if(count($getIfPersonAvailable) > 0)
                    {
                        $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                    }else{
                        $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                    }
                    if(count($getIfPersonAvailable) == 0)
                    {
                        if($userphoto == '' || $userphoto == base_url())
                        {
                            $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : '');
                        }
                    }
                }
            }
            
            $this->db->like('goldHUID',$_POST['IdNumber'],'both');
            $getIfAlready = $this->db->get('unknownPersonGold')->result_array();
            if(count($getIfAlready) > 0)
            {   
                $getIfLapataAvailable = $this->db->query('select * from unknown_person where isFinalSubmitted=1 and awsEventName="All" and isFound=0 and id='.$getIfAlready[(count($getIfAlready) - 1)]['unknownId'].' and expiryDate >= "'.date('Y-m-d h:i:s').'" order by dateCreated desc')->result_array();
            }else{
                $getIfLapataAvailable = array();
            }
            if(count($getIfLapataAvailable) > 0)
            {
                $personCount = 1;
                $isAadharCorrect = 1;
                $isVisible = 1;
                $isLapata = 1;
                $lapataId = $getIfLapataAvailable[0]['id'];
                $isMissing = 0;
                $missingId = array();
                if(!$isUserFound)
                {
                    $isVerified = 0;
                    $personName = $getIfLapataAvailable[0]['person_name'];
                    $gender = ($getIfLapataAvailable[0]['Gender'] == 'boy' ? 'MALE' : 'FEMALE');
                    $aadhar = $getIfLapataAvailable[0]['aadharNumber'];
                    $age = ($getIfLapataAvailable[0]['Age']);
                    $address = $getIfLapataAvailable[0]['city'].','.$getIfLapataAvailable[0]['state'];
                    $userphoto = base_url().''.(($getIfLapataAvailable[0]['Photo'] != NULL) ? $getIfLapataAvailable[0]['Photo'] : $userphoto);
                }
            }
           
            
            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
            if($this->getSettings('generalNotification') == 'true')
            {
                if($personId != '')
                {
                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$personId);
                    $query_res = $query->result_array();
                    
                    if(count($query_res) > 0)
                    {
                        foreach ($query_res as $query_res_data) {
                            $registrationIds[] =$query_res_data['token'];
                        }
                        
                        $url ="https://fcm.googleapis.com/fcm/send";
                        $fields=array(
                            "registration_ids"=>$registrationIds,
                            'data' => array("msg"=>"Khoji"),
                            'priority' => 'high',
                            "click_action"=>base_url(),
                            "notification"=>array(
                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                "title"=>"Khoji",
                            )   
                        );
                        $headers=array(
                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                            'Content-Type:application/json'
                        );
                        $ch=curl_init();
                        curl_setopt($ch,CURLOPT_URL,$url);
                        curl_setopt($ch,CURLOPT_POST,true);
                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                        curl_exec($ch);
                    }
                }   
            }
            if($isUserFound !=1)
            {
                if($isLapata != 1)
                {
                    $getIfUnknownGold = $this->db->query('select * from unknownPersonGold where goldHUID ="'.$_POST['IdNumber'].'" order by Id desc')->result_array();
                    if(count($getIfUnknownGold) > 0)
                    {
                        $id = array();
                        foreach($getIfUnknownGold as $k=>$v)
                        {
                            $getIfUnknownAvailable = $this->db->query('select * from unknown_person where isFinalSubmitted=1 and awsEventName !="All" and isFound=0 and id='.$v['unknownId'].' order by id desc')->result_array();      
                            if(count($getIfUnknownAvailable) > 0)
                            {
                                array_push($id,$getIfUnknownAvailable[0]['id']);
                                break;
                            }
                        }
                        if(count($id) > 0)
                        {
                            $getIfUnknownAvailable = $this->db->query('select * from unknown_person where id='.$id[0])->result_array();      
                        }else{
                            $getIfUnknownAvailable = array();    
                        }
                    }
                    else
                    {
                        $getIfUnknownAvailable = array();
                    }
                    // $getIfUnknownAvailable = array();
                    if(count($getIfUnknownAvailable) > 0)
                    {
                        $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$getIfUnknownAvailable[0]['id'])->result_array();
                        if($getApplicationNumber[0]['isKyc'] == 1)
                        {
                            $notifyData = array(
                                'isLogin' => 1,
                                'loggedInUserId' => $_SESSION['user_id'],
                                'loginUserType' => $_SESSION['login_type'],
                                'dateCreated' => date('Y-m-d H:i:s'),
                                'mobileNumber' => $_SESSION['landingMob'],
                                'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                'searchType' => 'Unknown',
                                'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                                'isIdentity' => 1,
                                'identityType' => 'gold',
                                'identityNumber' => $_POST['IdNumber']
                            );
                            $insert = $this->db->insert('searchnotification',$notifyData);
                            if($getApplicationNumber[0]['uploaded_by'] == 'user')
                            {
                                $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                $query_res = $query->result_array();
                                
                                if(count($query_res) > 0)
                                {
                                    foreach ($query_res as $query_res_data) {
                                        $registrationIds[] =$query_res_data['token'];
                                    }

                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    
                                    $url ="https://fcm.googleapis.com/fcm/send";
                                    $fields=array(
                                        "registration_ids"=>$registrationIds,
                                        'data' => array("msg"=>"Khoji"),
                                        'priority' => 'high',
                                        "click_action"=>base_url(),
                                        "notification"=>array(
                                            "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                            "title"=>"Khoji",
                                        )   
                                    );
                                    $headers=array(
                                        'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                        'Content-Type:application/json'
                                    );
                                    $ch=curl_init();
                                    curl_setopt($ch,CURLOPT_URL,$url);
                                    curl_setopt($ch,CURLOPT_POST,true);
                                    curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                    curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                    curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                    curl_exec($ch);
                                }
                            }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                            {
                                $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                $query_res = $query->result_array();
                                
                                if(count($query_res) > 0)
                                {
                                    foreach ($query_res as $query_res_data) {
                                        $registrationIds[] =$query_res_data['token'];
                                    }
                                    
                                    $url ="https://fcm.googleapis.com/fcm/send";
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    $fields=array(
                                        "registration_ids"=>$registrationIds,
                                        'data' => array("msg"=>"Khoji"),
                                        'priority' => 'high',
                                        "click_action"=>base_url(),
                                        "notification"=>array(
                                            "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                            "title"=>"Khoji",
                                        )   
                                    );
                                    $headers=array(
                                        'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                        'Content-Type:application/json'
                                    );
                                    $ch=curl_init();
                                    curl_setopt($ch,CURLOPT_URL,$url);
                                    curl_setopt($ch,CURLOPT_POST,true);
                                    curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                    curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                    curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                    curl_exec($ch);
                                }
                            }else{
                                $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                $query_res = $query->result_array();
                                
                                if(count($query_res) > 0)
                                {
                                    foreach ($query_res as $query_res_data) {
                                        $registrationIds[] =$query_res_data['token'];
                                    }
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    $url ="https://fcm.googleapis.com/fcm/send";
                                    $fields=array(
                                        "registration_ids"=>$registrationIds,
                                        'data' => array("msg"=>"Khoji"),
                                        'priority' => 'high',
                                        "click_action"=>base_url(),
                                        "notification"=>array(
                                            "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                            "title"=>"Khoji",
                                        )   
                                    );
                                    $headers=array(
                                        'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                        'Content-Type:application/json'
                                    );
                                    $ch=curl_init();
                                    curl_setopt($ch,CURLOPT_URL,$url);
                                    curl_setopt($ch,CURLOPT_POST,true);
                                    curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                    curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                    curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                    curl_exec($ch);
                                }
                            }
                        }else{
                            $notifyData = array(
                                'isLogin' => 1,
                                'loggedInUserId' => $_SESSION['user_id'],
                                'loginUserType' => $_SESSION['login_type'],
                                'dateCreated' => date('Y-m-d H:i:s'),
                                'mobileNumber' => $_SESSION['landingMob'],
                                'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                'searchType' => 'Unknown',
                                'complainantUserType' => 'NonKyc',
                                'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                                'isIdentity' => 1,
                                'identityType' => 'gold',
                                'identityNumber' => $_POST['IdNumber']
                            );
                            $insert = $this->db->insert('searchnotification',$notifyData);
                            if($getApplicationNumber[0]['uploaded_by'] == 'user')
                            {
                                $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                $query_res = $query->result_array();
                                
                                if(count($query_res) > 0)
                                {
                                    foreach ($query_res as $query_res_data) {
                                        $registrationIds[] =$query_res_data['token'];
                                    }

                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    
                                    $url ="https://fcm.googleapis.com/fcm/send";
                                    $fields=array(
                                        "registration_ids"=>$registrationIds,
                                        'data' => array("msg"=>"Khoji"),
                                        'priority' => 'high',
                                        "click_action"=>base_url(),
                                        "notification"=>array(
                                            "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                            "title"=>"Khoji",
                                        )   
                                    );
                                    $headers=array(
                                        'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                        'Content-Type:application/json'
                                    );
                                    $ch=curl_init();
                                    curl_setopt($ch,CURLOPT_URL,$url);
                                    curl_setopt($ch,CURLOPT_POST,true);
                                    curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                    curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                    curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                    curl_exec($ch);
                                }
                            }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                            {
                                $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                $query_res = $query->result_array();
                                
                                if(count($query_res) > 0)
                                {
                                    foreach ($query_res as $query_res_data) {
                                        $registrationIds[] =$query_res_data['token'];
                                    }
                                    
                                    $url ="https://fcm.googleapis.com/fcm/send";
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    $fields=array(
                                        "registration_ids"=>$registrationIds,
                                        'data' => array("msg"=>"Khoji"),
                                        'priority' => 'high',
                                        "click_action"=>base_url(),
                                        "notification"=>array(
                                            "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                            "title"=>"Khoji",
                                        )   
                                    );
                                    $headers=array(
                                        'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                        'Content-Type:application/json'
                                    );
                                    $ch=curl_init();
                                    curl_setopt($ch,CURLOPT_URL,$url);
                                    curl_setopt($ch,CURLOPT_POST,true);
                                    curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                    curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                    curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                    curl_exec($ch);
                                }
                            }else{
                                $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                $query_res = $query->result_array();
                                
                                if(count($query_res) > 0)
                                {
                                    foreach ($query_res as $query_res_data) {
                                        $registrationIds[] =$query_res_data['token'];
                                    }
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    $url ="https://fcm.googleapis.com/fcm/send";
                                    $fields=array(
                                        "registration_ids"=>$registrationIds,
                                        'data' => array("msg"=>"Khoji"),
                                        'priority' => 'high',
                                        "click_action"=>base_url(),
                                        "notification"=>array(
                                            "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                            "title"=>"Khoji",
                                        )   
                                    );
                                    $headers=array(
                                        'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                        'Content-Type:application/json'
                                    );
                                    $ch=curl_init();
                                    curl_setopt($ch,CURLOPT_URL,$url);
                                    curl_setopt($ch,CURLOPT_POST,true);
                                    curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                    curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                    curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                    curl_exec($ch);
                                }
                            }
                        }
                        if($isUserFound != 1)
                        {
                            if($getIfUnknownAvailable[0]['uploaded_by'] == 'police')
                            {
                                $getPoliceDetail = $this->db->query('select * from police where police_id='.$getIfUnknownAvailable[0]['policeId'])->result_array();
                                $finalresponse = array(
                                    'isUserFound' => $isUserFound,
                                    'status' => 'unknown',
                                    'isLapata' => $isLapata,
                                    'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                    'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                    'type' => 'police',
                                    'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                    'address' => strtoupper($getPoliceDetail[0]['thanaName'].' - '.$getPoliceDetail[0]['state'].', '.$getPoliceDetail[0]['district']),
                                    'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                    'age' => $getIfUnknownAvailable[0]['Age'],
                                    'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                    'id' => $getIfUnknownAvailable[0]['Application_no'],
                                    'registration_mobile' => (($getPoliceDetail[0]['registration_mobile'] != NULL) ? $getPoliceDetail[0]['registration_mobile'] : ''),
                                    'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                    'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                    'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                                );   
                            }
                            else
                            {
                                if($getIfUnknownAvailable[0]['uploaded_by']=='user')
                                {
                                    $getUserDetail = $this->db->query('select * from user where uid='.$getIfUnknownAvailable[0]['userId'])->result_array();
                                    $finalresponse = array(
                                        'status' => 'unknown',
                                        'isUserFound' => $isUserFound,
                                        'isLapata' => $isLapata,
                                        'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                        'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                        'type' => 'ngo',
                                        'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                        'address' => strtoupper($getUserDetail[0]['vtc'].' - '.$getUserDetail[0]['state'].', '.$getUserDetail[0]['district']),
                                        'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                        'age' => $getIfUnknownAvailable[0]['Age'],
                                        'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                        'registration_mobile' => (($getUserDetail[0]['registration_mobile'] != NULL) ? $getUserDetail[0]['registration_mobile'] : ''),
                                        'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                        'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                        'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                                        'id' => $getIfUnknownAvailable[0]['Application_no']
                                    );   
                                }
                                else
                                {
                                    $getNgoDetail = $this->db->query('select * from ngo where Id='.$getIfUnknownAvailable[0]['ngoId'])->result_array();
                                    $finalresponse = array(
                                        'status' => 'unknown',
                                        'isLapata' => $isLapata,
                                        'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                        'isUserFound' => $isUserFound,
                                        'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                        'type' => 'ngo',
                                        'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                        'address' => strtoupper($getNgoDetail[0]['ngoName'].' - '.$getNgoDetail[0]['ngoState'].', '.$getNgoDetail[0]['ngoDistrict'].', '.$getNgoDetail[0]['ngoCity']),
                                        'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                        'age' => $getIfUnknownAvailable[0]['Age'],
                                        'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                        'registration_mobile' => (($getNgoDetail[0]['ngoRegistrationNumber'] != NULL) ? $getNgoDetail[0]['ngoRegistrationNumber'] : ''),
                                        'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                        'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                        'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                                        'id' => $getIfUnknownAvailable[0]['Application_no']
                                    ); 
                                }
                                
                            }
                        }else{
                            $finalresponse = array(
                                'isUserFound' => $isUserFound,
                                'status' => 'unknown',
                                'isLapata' => $isLapata,
                                'personName' => strtoupper($personName),
                                'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                'address' => strtoupper($address),
                                'photo' => ($userphoto != '' ? $userphoto : base_url().$getIfUnknownAvailable[0]['Photo']),
                                'age' => $age,
                                'gender' => strtolower($gender),
                                'id' => $getIfUnknownAvailable[0]['Application_no']
                            );
                        }
                        $insertdata = array(
                            'lapataId' => $lapataId,
                            'isLapata' => $isLapata,
                            'wantedIds' => implode(',',$wantedId),
                            'criminalIds' => implode(',',$criminalId),
                            'Idtype' => $_POST['idType'],
                            'IdNumber' => $idNumber,
                            'userId' => $_SESSION['user_id'],
                            'isFound' => $isUserFound,
                            'isMissing' => $isMissing,
                            'missingId' => implode(',',$missingId),
                            'personId' => $personId
                        );
                        $insert = $this->db->insert('searchpersonhistory',$insertdata);
                        $_SESSION['searchId'] = $this->db->insert_id();
                        echo json_encode($finalresponse);
                    }
                    else
                    {
                        $insertdata = array(
                            'lapataId' => $lapataId,
                            'isLapata' => $isLapata,
                            'wantedIds' => implode(',',$wantedId),
                            'criminalIds' => implode(',',$criminalId),
                            'Idtype' => $_POST['idType'],
                            'IdNumber' => $idNumber,
                            'userId' => $_SESSION['user_id'],
                            'isFound' => $isUserFound,
                            'isMissing' => $isMissing,
                            'missingId' => implode(',',$missingId),
                            'personId' => $personId
                        );
                        $insert = $this->db->insert('searchpersonhistory',$insertdata);
                        if($insert)
                        {
                            if($isAadharCorrect == 1)
                            {
                                $_SESSION['searchId'] = $this->db->insert_id();
                                $isOnlyUser = 0;
                                if(!$isWanted && !$isLapata && !$isCriminal && !$isMissing)
                                {
                                    $isOnlyUser = 1;
                                }
                                $response = array(
                                    'personId' => $personId,
                                    'isOnlyUser' => $isOnlyUser,
                                    'status' => 'success',
                                    'personName' => $personName,
                                    'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                    'gender' => strtolower($gender),
                                    'isWanted' => $isWanted,
                                    'isLapata' => $isLapata,
                                    'isCriminal' => $isCriminal,
                                    'age' => $age,
                                    'address' => $address,
                                    'isAadharCorrect' => $isAadharCorrect,
                                    'isDobCorrect' => 1,
                                    'isGenderCorrect' => 1,
                                    'message' => 'Person Found',
                                    'isVisible' => $isVisible,
                                    'isMissing' => $isMissing,
                                    'isVerified' => $isVerified,
                                    'isRegistered' => $isUserFound,
                                    'image' => ($userphoto != '' ? $userphoto : base_url().'assets/img/noimage.jpg')
                                );
                                echo json_encode($response);   
                            }else{
                                $response = array(
                                    'status' => 'incorrect',
                                    'isAadharCorrect' => $isAadharCorrect,
                                    'isDobCorrect' => 1,
                                    'isGenderCorrect' => 1,
                                );
                                echo json_encode($response);   
                            }
                        }else{
                            $response = array(
                                'status' => 'error',
                                'message' => 'Something Went Wrong'
                            );
                            echo json_encode($response);
                        }   
                    }   
                }
                else
                {
                    $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$lapataId)->result_array();
                    if($getApplicationNumber[0]['isKyc'] == 1)
                    {
                        $notifyData = array(
                            'isLogin' => 1,
                            'loggedInUserId' => $_SESSION['user_id'],
                            'loginUserType' => $_SESSION['login_type'],
                            'dateCreated' => date('Y-m-d H:i:s'),
                            'mobileNumber' => $_SESSION['landingMob'],
                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                            'searchType' => 'Lapata',
                            'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                            'isIdentity' => 1,
                            'identityType' => 'gold',
                            'identityNumber' => $_POST['IdNumber']
                        );
                        $insert = $this->db->insert('searchnotification',$notifyData);
                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }

                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else{
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }
                    }else{
                        $notifyData = array(
                            'isLogin' => 1,
                            'loggedInUserId' => $_SESSION['user_id'],
                            'loginUserType' => $_SESSION['login_type'],
                            'dateCreated' => date('Y-m-d H:i:s'),
                            'mobileNumber' => $_SESSION['landingMob'],
                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                            'searchType' => 'Lapata',
                            'complainantUserType' => 'NonKyc',
                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                            'isIdentity' => 1,
                            'identityType' => 'gold',
                            'identityNumber' => $_POST['IdNumber']
                        );
                        $insert = $this->db->insert('searchnotification',$notifyData);
                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }

                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else{
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }
                    }
                    $insertdata = array(
                        'lapataId' => $lapataId,
                        'isLapata' => $isLapata,
                        'wantedIds' => implode(',',$wantedId),
                        'criminalIds' => implode(',',$criminalId),
                        'Idtype' => $_POST['idType'],
                        'IdNumber' => $idNumber,
                        'userId' => $_SESSION['user_id'],
                        'isFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'missingId' => implode(',',$missingId),
                        'personId' => $personId
                    );
                    $insert = $this->db->insert('searchpersonhistory',$insertdata);
                    
                    if($insert)
                    {
                        if($isAadharCorrect == 1)
                        {
                            $_SESSION['searchId'] = $this->db->insert_id();
                            $isOnlyUser = 0;
                            if(!$isWanted && !$isLapata && !$isCriminal && !$isMissing)
                            {
                                $isOnlyUser = 1;
                            }
                            $response = array(
                                'personId' => $personId,
                                'isOnlyUser' => $isOnlyUser,
                                'status' => 'success',
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'isWanted' => $isWanted,
                                'isLapata' => $isLapata,
                                'isCriminal' => $isCriminal,
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                                'message' => 'Person Found',
                                'isVisible' => $isVisible,
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => ($userphoto != '' ? $userphoto : base_url().'assets/img/noimage.jpg')
                            );
                            echo json_encode($response);   
                        }
                        else
                        {
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }   
                }
            }
            else
            {
                if($isLapata == 1)
                {
                    $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$lapataId)->result_array();
                    if($getApplicationNumber[0]['isKyc'] == 1)
                    {
                        $notifyData = array(
                            'isLogin' => 1,
                            'loggedInUserId' => $_SESSION['user_id'],
                            'loginUserType' => $_SESSION['login_type'],
                            'dateCreated' => date('Y-m-d H:i:s'),
                            'mobileNumber' => $_SESSION['landingMob'],
                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                            'searchType' => 'Lapata',
                            'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                            'isIdentity' => 1,
                            'identityType' => 'gold',
                            'identityNumber' => $_POST['IdNumber']
                        );
                        $insert = $this->db->insert('searchnotification',$notifyData);
                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }

                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else{
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }
                    }else{
                        $notifyData = array(
                            'isLogin' => 1,
                            'loggedInUserId' => $_SESSION['user_id'],
                            'loginUserType' => $_SESSION['login_type'],
                            'dateCreated' => date('Y-m-d H:i:s'),
                            'mobileNumber' => $_SESSION['landingMob'],
                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                            'searchType' => 'Lapata',
                            'complainantUserType' => 'NonKyc',
                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                            'isIdentity' => 1,
                            'identityType' => 'gold',
                            'identityNumber' => $_POST['IdNumber']
                        );
                        $insert = $this->db->insert('searchnotification',$notifyData);
                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }

                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else{
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }
                    }
                    $insertdata = array(
                        'lapataId' => $lapataId,
                        'isLapata' => $isLapata,
                        'wantedIds' => implode(',',$wantedId),
                        'criminalIds' => implode(',',$criminalId),
                        'Idtype' => $_POST['idType'],
                        'IdNumber' => $idNumber,
                        'userId' => $_SESSION['user_id'],
                        'isFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'missingId' => implode(',',$missingId),
                        'personId' => $personId
                    );
                    $insert = $this->db->insert('searchpersonhistory',$insertdata);
                    
                    if($insert)
                    {
                        if($isAadharCorrect == 1)
                        {
                            $_SESSION['searchId'] = $this->db->insert_id();
                            $isOnlyUser = 0;
                            if(!$isWanted && !$isLapata && !$isCriminal && !$isMissing)
                            {
                                $isOnlyUser = 1;
                            }
                            $response = array(
                                'personId' => $personId,
                                'isOnlyUser' => $isOnlyUser,
                                'status' => 'success',
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'isWanted' => $isWanted,
                                'isLapata' => $isLapata,
                                'isCriminal' => $isCriminal,
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                                'message' => 'Person Found',
                                'isVisible' => $isVisible,
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => ($userphoto != '' ? $userphoto : base_url().'assets/img/noimage.jpg')
                            );
                            echo json_encode($response);   
                        }
                        else
                        {
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }   
                }
                else
                {
                    $insertdata = array(
                        'lapataId' => $lapataId,
                        'isLapata' => $isLapata,
                        'wantedIds' => implode(',',$wantedId),
                        'criminalIds' => implode(',',$criminalId),
                        'Idtype' => $_POST['idType'],
                        'IdNumber' => $idNumber,
                        'userId' => $_SESSION['user_id'],
                        'isFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'missingId' => implode(',',$missingId),
                        'personId' => $personId
                    );
                    $insert = $this->db->insert('searchpersonhistory',$insertdata);
                    
                    if($insert)
                    {
                        if($isAadharCorrect == 1)
                        {
                            $_SESSION['searchId'] = $this->db->insert_id();
                            $isOnlyUser = 0;
                            if(!$isWanted && !$isLapata && !$isCriminal && !$isMissing)
                            {
                                $isOnlyUser = 1;
                            }
                            $response = array(
                                'personId' => $personId,
                                'isOnlyUser' => $isOnlyUser,
                                'status' => 'success',
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'isWanted' => $isWanted,
                                'isLapata' => $isLapata,
                                'isCriminal' => $isCriminal,
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                                'message' => 'Person Found',
                                'isVisible' => $isVisible,
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => ($userphoto != '' ? $userphoto : base_url().'assets/img/noimage.jpg')
                            );
                            echo json_encode($response);   
                        }
                        else
                        {
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }   
                }
            }
            
        }
        if($_POST['idType'] == 'vehicle')
        {
            
            $idNumber = $_POST['IdNumber'];
            
            $personCount = 1;
            $this->db->or_where('vehicleNumber1', $_POST['IdNumber']);
            $this->db->or_where('vehicleNumber2', $_POST['IdNumber']);
            $this->db->or_where('vehicleNumber3', $_POST['IdNumber']);
            $getIfPersonAvailable = $this->db->get('user')->result_array();
            
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                foreach($getIfPersonAvailable as $k=>$v)
                {
                    $personCount++;
                }
                $personId = $getIfPersonAvailable[0]['uid'];
                $isAadharCorrect = 1;
                $isVisible = $getIfPersonAvailable[0]['visibility'];
                $isVerified = 1;
                $isUserFound = 1;
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y);
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            
            
            $getIfLapataAvailable = $this->db->query('select * from unknown_person where isFinalSubmitted=1 and uploaded_by = "user" and isFound=0 and vehicle_no like "%'.$_POST['IdNumber'].'%" and expiryDate >= "'.date('Y-m-d h:i:s').'" order by id desc')->result_array();   
            if(count($getIfLapataAvailable) > 0)
            {
                $personCount = 1;
                $isAadharCorrect = 1;
                $isVisible = 1;
                $isLapata = 1;
                $lapataId = $getIfLapataAvailable[0]['id'];
                $isMissing = 0;
                $missingId = array();
                if(!$isUserFound)
                {
                    $isVerified = 0;
                    $personName = $getIfLapataAvailable[0]['person_name'];
                    $gender = ($getIfLapataAvailable[0]['Gender'] == 'boy' ? 'MALE' : 'FEMALE');
                    $aadhar = $getIfLapataAvailable[0]['aadharNumber'];
                    $age = ($getIfLapataAvailable[0]['Age']);
                    $address = $getIfLapataAvailable[0]['city'].','.$getIfLapataAvailable[0]['state'];
                    $userphoto = base_url().''.(($getIfLapataAvailable[0]['Photo'] != NULL) ? $getIfLapataAvailable[0]['Photo'] : $userphoto);
                }
            }
           
            
            $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
            if($this->getSettings('generalNotification') == 'true')
            {
                if($personId != '')
                {
                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$personId);
                    $query_res = $query->result_array();
                    
                    if(count($query_res) > 0)
                    {
                        foreach ($query_res as $query_res_data) {
                            $registrationIds[] =$query_res_data['token'];
                        }
                        
                        $url ="https://fcm.googleapis.com/fcm/send";
                        $fields=array(
                            "registration_ids"=>$registrationIds,
                            'data' => array("msg"=>"Khoji"),
                            'priority' => 'high',
                            "click_action"=>base_url(),
                            "notification"=>array(
                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                "title"=>"Khoji",
                            )   
                        );
                        $headers=array(
                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                            'Content-Type:application/json'
                        );
                        $ch=curl_init();
                        curl_setopt($ch,CURLOPT_URL,$url);
                        curl_setopt($ch,CURLOPT_POST,true);
                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                        curl_exec($ch);
                    }
                }   
            }
            if($this->getSettings('mahakumbhIdentity') == 'Yes')
            {
                $getIfKhoyaPayaAvailable = $this->db->query('select * from mahakumbhSpecial where isFound=0 and vehicle_no="'.$_POST['IdNumber'].'" order by dateCreated desc')->result_array();
                if(count($getIfKhoyaPayaAvailable) > 0)
                {
                    $isAadharCorrect = 1;
                    $isVisible = 1;
                    $isKhoya = 1;
                    $khoyaId = $getIfKhoyaPayaAvailable[0]['id'];
                    $isMissing = 0;
                    $missingId = array();
                    if(!$isUserFound)
                    {
                        $isVerified = 0;
                        $personName = $getIfKhoyaPayaAvailable[0]['person_name'];
                        $gender = ($getIfKhoyaPayaAvailable[0]['Gender'] == 'Male' ? 'MALE' : 'FEMALE');
                        $aadhar = $getIfKhoyaPayaAvailable[0]['aadharNumber'];
                        $age = ($getIfKhoyaPayaAvailable[0]['AgeBand']);
                        $address = $getIfKhoyaPayaAvailable[0]['district'].','.$getIfKhoyaPayaAvailable[0]['state'];
                        $userphoto = base_url().''.(($getIfKhoyaPayaAvailable[0]['Photo'] != NULL) ? $getIfKhoyaPayaAvailable[0]['Photo'] : $userphoto);
                    }
                }
            }
            if($isUserFound !=1)
            {
                if($isLapata != 1)
                {
                    $getIfUnknownAvailable = $this->db->query('select * from unknown_person where isFinalSubmitted=1 and awsEventName !="All" and isFound=0 and vehicle_no="'.$_POST['IdNumber'].'" order by id desc')->result_array();
                    // $getIfUnknownAvailable = array();
                    if(count($getIfUnknownAvailable) > 0)
                    {
                        $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$getIfUnknownAvailable[0]['id'])->result_array();
                        if($getApplicationNumber[0]['isKyc'] == 1)
                        {
                            $notifyData = array(
                                'isLogin' => 1,
                                'loggedInUserId' => $_SESSION['user_id'],
                                'loginUserType' => $_SESSION['login_type'],
                                'dateCreated' => date('Y-m-d H:i:s'),
                                'mobileNumber' => $_SESSION['landingMob'],
                                'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                'searchType' => 'Unknown',
                                'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                                'isIdentity' => 1,
                                'identityType' => 'vehicle',
                                'identityNumber' => $_POST['IdNumber']
                            );
                            $insert = $this->db->insert('searchnotification',$notifyData);
                            if($getApplicationNumber[0]['uploaded_by'] == 'user')
                            {
                                $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                $query_res = $query->result_array();
                                
                                if(count($query_res) > 0)
                                {
                                    foreach ($query_res as $query_res_data) {
                                        $registrationIds[] =$query_res_data['token'];
                                    }

                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    
                                    $url ="https://fcm.googleapis.com/fcm/send";
                                    $fields=array(
                                        "registration_ids"=>$registrationIds,
                                        'data' => array("msg"=>"Khoji"),
                                        'priority' => 'high',
                                        "click_action"=>base_url(),
                                        "notification"=>array(
                                            "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                            "title"=>"Khoji",
                                        )   
                                    );
                                    $headers=array(
                                        'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                        'Content-Type:application/json'
                                    );
                                    $ch=curl_init();
                                    curl_setopt($ch,CURLOPT_URL,$url);
                                    curl_setopt($ch,CURLOPT_POST,true);
                                    curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                    curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                    curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                    curl_exec($ch);
                                }
                            }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                            {
                                $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                $query_res = $query->result_array();
                                
                                if(count($query_res) > 0)
                                {
                                    foreach ($query_res as $query_res_data) {
                                        $registrationIds[] =$query_res_data['token'];
                                    }
                                    
                                    $url ="https://fcm.googleapis.com/fcm/send";
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    $fields=array(
                                        "registration_ids"=>$registrationIds,
                                        'data' => array("msg"=>"Khoji"),
                                        'priority' => 'high',
                                        "click_action"=>base_url(),
                                        "notification"=>array(
                                            "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                            "title"=>"Khoji",
                                        )   
                                    );
                                    $headers=array(
                                        'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                        'Content-Type:application/json'
                                    );
                                    $ch=curl_init();
                                    curl_setopt($ch,CURLOPT_URL,$url);
                                    curl_setopt($ch,CURLOPT_POST,true);
                                    curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                    curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                    curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                    curl_exec($ch);
                                }
                            }else{
                                $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                $query_res = $query->result_array();
                                
                                if(count($query_res) > 0)
                                {
                                    foreach ($query_res as $query_res_data) {
                                        $registrationIds[] =$query_res_data['token'];
                                    }
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    $url ="https://fcm.googleapis.com/fcm/send";
                                    $fields=array(
                                        "registration_ids"=>$registrationIds,
                                        'data' => array("msg"=>"Khoji"),
                                        'priority' => 'high',
                                        "click_action"=>base_url(),
                                        "notification"=>array(
                                            "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                            "title"=>"Khoji",
                                        )   
                                    );
                                    $headers=array(
                                        'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                        'Content-Type:application/json'
                                    );
                                    $ch=curl_init();
                                    curl_setopt($ch,CURLOPT_URL,$url);
                                    curl_setopt($ch,CURLOPT_POST,true);
                                    curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                    curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                    curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                    curl_exec($ch);
                                }
                            }
                        }else{
                            $notifyData = array(
                                'isLogin' => 1,
                                'loggedInUserId' => $_SESSION['user_id'],
                                'loginUserType' => $_SESSION['login_type'],
                                'dateCreated' => date('Y-m-d H:i:s'),
                                'mobileNumber' => $_SESSION['landingMob'],
                                'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                'searchType' => 'Unknown',
                                'complainantUserType' => 'NonKyc',
                                'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                                'isIdentity' => 1,
                                'identityType' => 'vehicle',
                                'identityNumber' => $_POST['IdNumber']
                            );
                            $insert = $this->db->insert('searchnotification',$notifyData);
                            if($getApplicationNumber[0]['uploaded_by'] == 'user')
                            {
                                $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                $query_res = $query->result_array();
                                
                                if(count($query_res) > 0)
                                {
                                    foreach ($query_res as $query_res_data) {
                                        $registrationIds[] =$query_res_data['token'];
                                    }

                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    
                                    $url ="https://fcm.googleapis.com/fcm/send";
                                    $fields=array(
                                        "registration_ids"=>$registrationIds,
                                        'data' => array("msg"=>"Khoji"),
                                        'priority' => 'high',
                                        "click_action"=>base_url(),
                                        "notification"=>array(
                                            "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                            "title"=>"Khoji",
                                        )   
                                    );
                                    $headers=array(
                                        'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                        'Content-Type:application/json'
                                    );
                                    $ch=curl_init();
                                    curl_setopt($ch,CURLOPT_URL,$url);
                                    curl_setopt($ch,CURLOPT_POST,true);
                                    curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                    curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                    curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                    curl_exec($ch);
                                }
                            }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                            {
                                $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                $query_res = $query->result_array();
                                
                                if(count($query_res) > 0)
                                {
                                    foreach ($query_res as $query_res_data) {
                                        $registrationIds[] =$query_res_data['token'];
                                    }
                                    
                                    $url ="https://fcm.googleapis.com/fcm/send";
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    $fields=array(
                                        "registration_ids"=>$registrationIds,
                                        'data' => array("msg"=>"Khoji"),
                                        'priority' => 'high',
                                        "click_action"=>base_url(),
                                        "notification"=>array(
                                            "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                            "title"=>"Khoji",
                                        )   
                                    );
                                    $headers=array(
                                        'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                        'Content-Type:application/json'
                                    );
                                    $ch=curl_init();
                                    curl_setopt($ch,CURLOPT_URL,$url);
                                    curl_setopt($ch,CURLOPT_POST,true);
                                    curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                    curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                    curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                    curl_exec($ch);
                                }
                            }else{
                                $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                $query_res = $query->result_array();
                                
                                if(count($query_res) > 0)
                                {
                                    foreach ($query_res as $query_res_data) {
                                        $registrationIds[] =$query_res_data['token'];
                                    }
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    $url ="https://fcm.googleapis.com/fcm/send";
                                    $fields=array(
                                        "registration_ids"=>$registrationIds,
                                        'data' => array("msg"=>"Khoji"),
                                        'priority' => 'high',
                                        "click_action"=>base_url(),
                                        "notification"=>array(
                                            "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                            "title"=>"Khoji",
                                        )   
                                    );
                                    $headers=array(
                                        'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                        'Content-Type:application/json'
                                    );
                                    $ch=curl_init();
                                    curl_setopt($ch,CURLOPT_URL,$url);
                                    curl_setopt($ch,CURLOPT_POST,true);
                                    curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                    curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                    curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                    curl_exec($ch);
                                }
                            }
                        }
                        if($isUserFound != 1)
                        {
                            if($getIfUnknownAvailable[0]['uploaded_by'] == 'police')
                            {
                                $getPoliceDetail = $this->db->query('select * from police where police_id='.$getIfUnknownAvailable[0]['policeId'])->result_array();
                                $finalresponse = array(
                                    'isUserFound' => $isUserFound,
                                    'status' => 'unknown',
                                    'isKhoya' => $isKhoya,
                                    'isLapata' => $isLapata,
                                    'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                    'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                    'type' => 'police',
                                    'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                    'address' => strtoupper($getPoliceDetail[0]['thanaName'].' - '.$getPoliceDetail[0]['state'].', '.$getPoliceDetail[0]['district']),
                                    'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                    'age' => $getIfUnknownAvailable[0]['Age'],
                                    'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                    'id' => $getIfUnknownAvailable[0]['Application_no'],
                                    'registration_mobile' => (($getPoliceDetail[0]['registration_mobile'] != NULL) ? $getPoliceDetail[0]['registration_mobile'] : ''),
                                    'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                    'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                    'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                                );   
                            }
                            else
                            {
                                if($getIfUnknownAvailable[0]['uploaded_by']=='user')
                                {
                                    $getUserDetail = $this->db->query('select * from user where uid='.$getIfUnknownAvailable[0]['userId'])->result_array();
                                    $finalresponse = array(
                                        'status' => 'unknown',
                                        'isKhoya' => $isKhoya,
                                        'isUserFound' => $isUserFound,
                                        'isLapata' => $isLapata,
                                        'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                        'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                        'type' => 'ngo',
                                        'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                        'address' => strtoupper($getUserDetail[0]['vtc'].' - '.$getUserDetail[0]['state'].', '.$getUserDetail[0]['district']),
                                        'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                        'age' => $getIfUnknownAvailable[0]['Age'],
                                        'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                        'registration_mobile' => (($getUserDetail[0]['registration_mobile'] != NULL) ? $getUserDetail[0]['registration_mobile'] : ''),
                                        'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                        'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                        'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                                        'id' => $getIfUnknownAvailable[0]['Application_no']
                                    );   
                                }
                                else
                                {
                                    $getNgoDetail = $this->db->query('select * from ngo where Id='.$getIfUnknownAvailable[0]['ngoId'])->result_array();
                                    $finalresponse = array(
                                        'status' => 'unknown',
                                        'isKhoya' => $isKhoya,
                                        'isLapata' => $isLapata,
                                        'personName' => strtoupper($getIfUnknownAvailable[0]['person_name']),
                                        'isUserFound' => $isUserFound,
                                        'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                        'type' => 'ngo',
                                        'date' => date('d-m-Y h:i A',strtotime($getIfUnknownAvailable[0]['dateCreated'])),
                                        'address' => strtoupper($getNgoDetail[0]['ngoName'].' - '.$getNgoDetail[0]['ngoState'].', '.$getNgoDetail[0]['ngoDistrict'].', '.$getNgoDetail[0]['ngoCity']),
                                        'photo' => base_url().''.$getIfUnknownAvailable[0]['Photo'],
                                        'age' => $getIfUnknownAvailable[0]['Age'],
                                        'gender' => ($getIfUnknownAvailable[0]['Gender'] == 'boy' ? 'Male' : 'Female'),
                                        'registration_mobile' => (($getNgoDetail[0]['ngoRegistrationNumber'] != NULL) ? $getNgoDetail[0]['ngoRegistrationNumber'] : ''),
                                        'mobile1' => (($getIfUnknownAvailable[0]['well1'] != NULL) ? $getIfUnknownAvailable[0]['well1'] : ''),
                                        'mobile2' => (($getIfUnknownAvailable[0]['well2'] != NULL) ? $getIfUnknownAvailable[0]['well2'] : ''),
                                        'mobile3' => (($getIfUnknownAvailable[0]['well3'] != NULL) ? $getIfUnknownAvailable[0]['well3'] : ''),
                                        'id' => $getIfUnknownAvailable[0]['Application_no']
                                    ); 
                                }
                                
                            }
                        }else{
                            $finalresponse = array(
                                'isUserFound' => $isUserFound,
                                'status' => 'unknown',
                                'isKhoya' => $isKhoya,
                                'isLapata' => $isLapata,
                                'personName' => strtoupper($personName),
                                'aadharNumber' => substr_replace((($getIfUnknownAvailable[0]['aadharNumber'] != '') ? $getIfUnknownAvailable[0]['aadharNumber'] : $aadhar),'xxxxxxxx',0,8),
                                'address' => strtoupper($address),
                                'photo' => ($userphoto != '' ? $userphoto : base_url().$getIfUnknownAvailable[0]['Photo']),
                                'age' => $age,
                                'gender' => strtolower($gender),
                                'id' => $getIfUnknownAvailable[0]['Application_no']
                            );
                        }
                        $insertdata = array(
                            'lapataId' => $lapataId,
                            'isLapata' => $isLapata,
                            'khoyaId' => $khoyaId,
                            'isKhoya' => $isKhoya,
                            'wantedIds' => implode(',',$wantedId),
                            'criminalIds' => implode(',',$criminalId),
                            'Idtype' => $_POST['idType'],
                            'IdNumber' => $idNumber,
                            'userId' => $_SESSION['user_id'],
                            'isFound' => $isUserFound,
                            'isMissing' => $isMissing,
                            'missingId' => implode(',',$missingId),
                            'personId' => $personId
                        );
                        $insert = $this->db->insert('searchpersonhistory',$insertdata);
                        $_SESSION['searchId'] = $this->db->insert_id();
                        echo json_encode($finalresponse);
                    }
                    else
                    {
                        $insertdata = array(
                            'lapataId' => $lapataId,
                            'isLapata' => $isLapata,
                            'khoyaId' => $khoyaId,
                            'isKhoya' => $isKhoya,
                            'wantedIds' => implode(',',$wantedId),
                            'criminalIds' => implode(',',$criminalId),
                            'Idtype' => $_POST['idType'],
                            'IdNumber' => $idNumber,
                            'userId' => $_SESSION['user_id'],
                            'isFound' => $isUserFound,
                            'isMissing' => $isMissing,
                            'missingId' => implode(',',$missingId),
                            'personId' => $personId
                        );
                        $insert = $this->db->insert('searchpersonhistory',$insertdata);
                        if($insert)
                        {
                            if($isAadharCorrect == 1)
                            {
                                $_SESSION['searchId'] = $this->db->insert_id();
                                $isOnlyUser = 0;
                                if(!$isWanted && !$isLapata && !$isCriminal && !$isMissing)
                                {
                                    $isOnlyUser = 1;
                                }
                                $response = array(
                                    'personId' => $personId,
                                    'isOnlyUser' => $isOnlyUser,
                                    'status' => 'success',
                                    'personName' => $personName,
                                    'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                    'gender' => strtolower($gender),
                                    'isWanted' => $isWanted,
                                    'isKhoya' => $isKhoya,
                                    'isLapata' => $isLapata,
                                    'isCriminal' => $isCriminal,
                                    'age' => $age,
                                    'address' => $address,
                                    'isAadharCorrect' => $isAadharCorrect,
                                    'isDobCorrect' => 1,
                                    'isGenderCorrect' => 1,
                                    'message' => 'Person Found',
                                    'isVisible' => $isVisible,
                                    'isMissing' => $isMissing,
                                    'isVerified' => $isVerified,
                                    'isRegistered' => $isUserFound,
                                    'image' => ($userphoto != '' ? $userphoto : base_url().'assets/img/noimage.jpg')
                                );
                                echo json_encode($response);   
                            }else{
                                $response = array(
                                    'status' => 'incorrect',
                                    'isAadharCorrect' => $isAadharCorrect,
                                    'isDobCorrect' => 1,
                                    'isGenderCorrect' => 1,
                                );
                                echo json_encode($response);   
                            }
                        }else{
                            $response = array(
                                'status' => 'error',
                                'message' => 'Something Went Wrong'
                            );
                            echo json_encode($response);
                        }   
                    }   
                    
                }
                else
                {
                    $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$lapataId)->result_array();
                    if($getApplicationNumber[0]['isKyc'] == 1)
                    {
                        $notifyData = array(
                            'isLogin' => 1,
                            'loggedInUserId' => $_SESSION['user_id'],
                            'loginUserType' => $_SESSION['login_type'],
                            'dateCreated' => date('Y-m-d H:i:s'),
                            'mobileNumber' => $_SESSION['landingMob'],
                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                            'searchType' => 'Lapata',
                            'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                            'isIdentity' => 1,
                            'identityType' => 'vehicle',
                            'identityNumber' => $_POST['IdNumber']
                        );
                        $insert = $this->db->insert('searchnotification',$notifyData);
                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }

                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else{
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }
                    }else{
                        $notifyData = array(
                            'isLogin' => 1,
                            'loggedInUserId' => $_SESSION['user_id'],
                            'loginUserType' => $_SESSION['login_type'],
                            'dateCreated' => date('Y-m-d H:i:s'),
                            'mobileNumber' => $_SESSION['landingMob'],
                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                            'searchType' => 'Lapata',
                            'complainantUserType' => 'NonKyc',
                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                            'isIdentity' => 1,
                            'identityType' => 'vehicle',
                            'identityNumber' => $_POST['IdNumber']
                        );
                        $insert = $this->db->insert('searchnotification',$notifyData);
                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }

                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else{
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }
                    }
                    $insertdata = array(
                        'lapataId' => $lapataId,
                        'isLapata' => $isLapata,
                        'khoyaId' => $khoyaId,
                        'isKhoya' => $isKhoya,
                        'wantedIds' => implode(',',$wantedId),
                        'criminalIds' => implode(',',$criminalId),
                        'Idtype' => $_POST['idType'],
                        'IdNumber' => $idNumber,
                        'userId' => $_SESSION['user_id'],
                        'isFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'missingId' => implode(',',$missingId),
                        'personId' => $personId
                    );
                    $insert = $this->db->insert('searchpersonhistory',$insertdata);
                    
                    if($insert)
                    {
                        if($isAadharCorrect == 1)
                        {
                            $_SESSION['searchId'] = $this->db->insert_id();
                            $isOnlyUser = 0;
                            if(!$isWanted && !$isLapata && !$isCriminal && !$isMissing)
                            {
                                $isOnlyUser = 1;
                            }
                            $response = array(
                                'personId' => $personId,
                                'isOnlyUser' => $isOnlyUser,
                                'status' => 'success',
                                'isKhoya' => $isKhoya,
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'isWanted' => $isWanted,
                                'isLapata' => $isLapata,
                                'isCriminal' => $isCriminal,
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                                'message' => 'Person Found',
                                'isVisible' => $isVisible,
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => ($userphoto != '' ? $userphoto : base_url().'assets/img/noimage.jpg')
                            );
                            echo json_encode($response);   
                        }
                        else
                        {
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }   
                }
            }
            else
            {
                if($isLapata == 1)
                {
                    $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$lapataId)->result_array();
                    if($getApplicationNumber[0]['isKyc'] == 1)
                    {
                        $notifyData = array(
                            'isLogin' => 1,
                            'loggedInUserId' => $_SESSION['user_id'],
                            'loginUserType' => $_SESSION['login_type'],
                            'dateCreated' => date('Y-m-d H:i:s'),
                            'mobileNumber' => $_SESSION['landingMob'],
                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                            'searchType' => 'Lapata',
                            'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                            'isIdentity' => 1,
                            'identityType' => 'vehicle',
                            'identityNumber' => $_POST['IdNumber']
                        );
                        $insert = $this->db->insert('searchnotification',$notifyData);
                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }

                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else{
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }
                    }else{
                        $notifyData = array(
                            'isLogin' => 1,
                            'loggedInUserId' => $_SESSION['user_id'],
                            'loginUserType' => $_SESSION['login_type'],
                            'dateCreated' => date('Y-m-d H:i:s'),
                            'mobileNumber' => $_SESSION['landingMob'],
                            'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                            'searchType' => 'Lapata',
                            'complainantUserType' => 'NonKyc',
                            'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId'])),
                            'isIdentity' => 1,
                            'identityType' => 'vehicle',
                            'identityNumber' => $_POST['IdNumber']
                        );
                        $insert = $this->db->insert('searchnotification',$notifyData);
                        if($getApplicationNumber[0]['uploaded_by'] == 'user')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }

                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                        {
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }else{
                            $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                            $query_res = $query->result_array();
                            
                            if(count($query_res) > 0)
                            {
                                foreach ($query_res as $query_res_data) {
                                    $registrationIds[] =$query_res_data['token'];
                                }
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                $url ="https://fcm.googleapis.com/fcm/send";
                                $fields=array(
                                    "registration_ids"=>$registrationIds,
                                    'data' => array("msg"=>"Khoji"),
                                    'priority' => 'high',
                                    "click_action"=>base_url(),
                                    "notification"=>array(
                                        "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - GENERAL USER -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                        "title"=>"Khoji",
                                    )   
                                );
                                $headers=array(
                                    'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                    'Content-Type:application/json'
                                );
                                $ch=curl_init();
                                curl_setopt($ch,CURLOPT_URL,$url);
                                curl_setopt($ch,CURLOPT_POST,true);
                                curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                curl_exec($ch);
                            }
                        }
                    }
                    $insertdata = array(
                        'lapataId' => $lapataId,
                        'isLapata' => $isLapata,
                        'khoyaId' => $khoyaId,
                        'isKhoya' => $isKhoya,
                        'wantedIds' => implode(',',$wantedId),
                        'criminalIds' => implode(',',$criminalId),
                        'Idtype' => $_POST['idType'],
                        'IdNumber' => $idNumber,
                        'userId' => $_SESSION['user_id'],
                        'isFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'missingId' => implode(',',$missingId),
                        'personId' => $personId
                    );
                    $insert = $this->db->insert('searchpersonhistory',$insertdata);
                    
                    if($insert)
                    {
                        if($isAadharCorrect == 1)
                        {
                            $_SESSION['searchId'] = $this->db->insert_id();
                            $isOnlyUser = 0;
                            if(!$isWanted && !$isLapata && !$isCriminal && !$isMissing)
                            {
                                $isOnlyUser = 1;
                            }
                            $response = array(
                                'personId' => $personId,
                                'isOnlyUser' => $isOnlyUser,
                                'status' => 'success',
                                'isKhoya' => $isKhoya,
                                'personName' => $personName,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'isWanted' => $isWanted,
                                'isLapata' => $isLapata,
                                'isCriminal' => $isCriminal,
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                                'message' => 'Person Found',
                                'isVisible' => $isVisible,
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => ($userphoto != '' ? $userphoto : base_url().'assets/img/noimage.jpg')
                            );
                            echo json_encode($response);   
                        }
                        else
                        {
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }   
                }
                else
                {
                    $insertdata = array(
                        'lapataId' => $lapataId,
                        'isLapata' => $isLapata,
                        'khoyaId' => $khoyaId,
                        'isKhoya' => $isKhoya,
                        'wantedIds' => implode(',',$wantedId),
                        'criminalIds' => implode(',',$criminalId),
                        'Idtype' => $_POST['idType'],
                        'IdNumber' => $idNumber,
                        'userId' => $_SESSION['user_id'],
                        'isFound' => $isUserFound,
                        'isMissing' => $isMissing,
                        'missingId' => implode(',',$missingId),
                        'personId' => $personId
                    );
                    $insert = $this->db->insert('searchpersonhistory',$insertdata);
                    
                    if($insert)
                    {
                        if($isAadharCorrect == 1)
                        {
                            $_SESSION['searchId'] = $this->db->insert_id();
                            $isOnlyUser = 0;
                            if(!$isWanted && !$isLapata && !$isCriminal && !$isMissing)
                            {
                                $isOnlyUser = 1;
                            }
                            $response = array(
                                'personId' => $personId,
                                'isOnlyUser' => $isOnlyUser,
                                'status' => 'success',
                                'personName' => $personName,
                                'isKhoya' => $isKhoya,
                                'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                                'gender' => strtolower($gender),
                                'isWanted' => $isWanted,
                                'isLapata' => $isLapata,
                                'isCriminal' => $isCriminal,
                                'age' => $age,
                                'address' => $address,
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                                'message' => 'Person Found',
                                'isVisible' => $isVisible,
                                'isMissing' => $isMissing,
                                'isVerified' => $isVerified,
                                'isRegistered' => $isUserFound,
                                'image' => ($userphoto != '' ? $userphoto : base_url().'assets/img/noimage.jpg')
                            );
                            echo json_encode($response);   
                        }
                        else
                        {
                            $response = array(
                                'status' => 'incorrect',
                                'isAadharCorrect' => $isAadharCorrect,
                                'isDobCorrect' => 1,
                                'isGenderCorrect' => 1,
                            );
                            echo json_encode($response);   
                        }
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }   
                }
            }
            
        }
        
        
    }
    
    function checkPersonByAll()
    {
        $idNumber = '';
        if($_POST['idType'] == 'aadhar')
        {
            $idNumber = $_POST['aadhar_id'];
        }
        if($_POST['idType'] == 'dl')
        {
            $idNumber = $_POST['dlNumber'];
        }
        if($_POST['idType'] == 'voter')
        {
            $idNumber = $_POST['voterId'];
        }
        if($_POST['idType'] == 'pan')
        {
            $idNumber = $_POST['panNumber'];
        }
        $personName = '';
        $gender = '';
        $aadhar = '';
        $gender = '';
        $age = '';
        $address = '';
        $isUserFound = 0;
        $isGenderCorrect = 0;
        $isAadharCorrect = 0;
        $isDobCorrect = 0;
        $isMissing = 0;
        $personId = 0;
        $missingId = 0;
        $_POST['dob'] = $_POST['date'].'-'.$_POST['month'].'-'.$_POST['year'];
        if($_POST['idType'] == 'aadhar')
        {
            $idNumber = $_POST['aadhar_id'];
            if(strlen($_POST['aadhar_id']) != 12)
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Aadhar number must be 12 digit number'
                );
                echo json_encode($response);
                return;
            }
            $getIfPersonAvailable = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'" and gender="'.$_POST['gender'].'" and dob="'.date('Y-m-d',strtotime($_POST['dob'])).'"')->result_array();
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $isUserFound = 1;
                $personId= $getIfPersonAvailable[0]['uid'];
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y).'- Years';
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$_POST['aadhar_id'].'" and isFound != 1')->result_array();
            if(count($getMissingPerson) > 0)
            {
                $missingId = $getMissingPerson[0]['Id'];
                $isAadharCorrect = 1;
                if($getMissingPerson[0]['missinggender'] != NULL)
                {
                    if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                    {
                        $isDobCorrect = 1;
                    }
                    if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                    {
                        $isGenderCorrect = 1;
                        if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                            $isMissing = 1;
                            $personName = $getMissingPerson[0]['missingname'];
                            $gender = $getMissingPerson[0]['missinggender'];
                            $aadhar = $getMissingPerson[0]['missingaadhar'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getMissingPerson[0]['missingdob']);
                            $age = ($from->diff($to)->y).'- Years';
                            if(count($getIfPersonAvailable) > 0)
                            {
                                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                            }else{
                                $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                            }
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }else{
                    $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                    if(count($getFullDetail) > 0)
                    {
                        if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                        }
                        if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                        {
                            $isGenderCorrect = 1;
                            if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                                $isMissing = 1; 
                                $personName = $getMissingPerson[0]['missingname'];
                                $gender = $getMissingPerson[0]['missinggender'];
                                $aadhar = $getMissingPerson[0]['missingaadhar'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                $age = ($from->diff($to)->y).'- Years';
                                if(count($getIfPersonAvailable) > 0)
                                {
                                    $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                }else{
                                    $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                }
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }   
                            }
                        }   
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                }
            }else{
                $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'"')->result_array();
                if(count($getUserDetail) > 0)
                {
                    $isAadharCorrect = 1;
                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                    {
                        $isDobCorrect = 1;
                    }
                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                    {
                        $isGenderCorrect = 1;
                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                            $isMissing = 0; 
                            $personName = $getUserDetail[0]['aadharname'];
                            $gender = $getUserDetail[0]['gender'];
                            $aadhar = $getUserDetail[0]['aadhar_id'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getUserDetail[0]['dob']);
                            $age = ($from->diff($to)->y).'- Years';
                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }
            }
            $insertdata = array(
                'gender' => $_POST['gender'],
                'dob' => $_POST['dob'],
                'Idtype' => $_POST['idType'],
                'IdNumber' => $idNumber,
                'userId' => $_SESSION['user_id'],
                'isFound' => $isUserFound,
                'isMissing' => $isMissing,
                'missingId' => $missingId,
                'personId' => $personId
            );
            $insert = $this->db->insert('searchpersonhistory',$insertdata);
            if($insert)
            {
                if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                {
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                        'message' => 'Person Found',
                        'isMissing' => $isMissing,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto
                    );
                    $_SESSION['searchId'] = $this->db->insert_id();
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'incorrect',
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                    );
                    echo json_encode($response);   
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
        if($_POST['idType'] == 'dl')
        {
            $idNumber = $_POST['dlNumber'];
            $getIfAlready = $this->db->query('select * from dllist where dlNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $isUserFound = 1;
                $personId= $getIfPersonAvailable[0]['uid'];
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y).'- Years';
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];                
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
            }else{
                $getMissingPerson = array();
            }
            if(count($getMissingPerson) > 0)
            {
                $missingId = $getMissingPerson[0]['Id'];
                $isAadharCorrect = 1;
                if($getMissingPerson[0]['missinggender'] != NULL)
                {
                    if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                    {
                        $isDobCorrect = 1;
                    }
                    if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                    {
                        $isGenderCorrect = 1;
                        if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                            $isMissing = 1;
                            $personName = $getMissingPerson[0]['missingname'];
                            $gender = $getMissingPerson[0]['missinggender'];
                            $aadhar = $getMissingPerson[0]['missingaadhar'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getMissingPerson[0]['missingdob']);
                            $age = ($from->diff($to)->y).'- Years';
                            if(count($getIfPersonAvailable) > 0)
                            {
                                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                            }else{
                                $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                            }
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }else{
                    $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                    if(count($getFullDetail) > 0)
                    {
                        if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                        }
                        if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                        {
                            $isGenderCorrect = 1;
                            if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                                $isMissing = 1; 
                                $personName = $getMissingPerson[0]['missingname'];
                                $gender = $getMissingPerson[0]['missinggender'];
                                $aadhar = $getMissingPerson[0]['missingaadhar'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                $age = ($from->diff($to)->y).'- Years';
                                if(count($getIfPersonAvailable) > 0)
                                {
                                    $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                }else{
                                    $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                }
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }   
                            }
                        }   
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1; 
                                    $personName = $getMissingPerson[0]['missingname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                }
            }else{
                if(count($getIfPersonAvailable) > 0)
                {
                    $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                }else{
                    $getUserDetail = array();
                }
                if(count($getUserDetail) > 0)
                {
                    $isAadharCorrect = 1;
                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                    {
                        $isDobCorrect = 1;
                    }
                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                    {
                        $isGenderCorrect = 1;
                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                            $isMissing = 0; 
                            $personName = $getUserDetail[0]['aadharname'];
                            $gender = $getUserDetail[0]['gender'];
                            $aadhar = $getUserDetail[0]['aadhar_id'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getUserDetail[0]['dob']);
                            $age = ($from->diff($to)->y).'- Years';
                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }
            }
            $insertdata = array(
                'gender' => $_POST['gender'],
                'dob' => $_POST['dob'],
                'Idtype' => $_POST['idType'],
                'IdNumber' => $idNumber,
                'userId' => $_SESSION['user_id'],
                'isFound' => $isUserFound,
                'isMissing' => $isMissing,
                'missingId' => $missingId,
                'personId' => $personId
            );
            $insert = $this->db->insert('searchpersonhistory',$insertdata);
            if($insert)
            {
                if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                {
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                        'message' => 'Person Found',
                        'isMissing' => $isMissing,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto
                    );
                    $_SESSION['searchId'] = $this->db->insert_id();
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'incorrect',
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                    );
                    echo json_encode($response);   
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
        if($_POST['idType'] == 'voter')
        {
            $idNumber = $_POST['voterId'];
            $getIfAlready = $this->db->query('select * from voterslist where voterNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'].' and gender="'.$_POST['gender'].'" and dob="'.date('Y-m-d',strtotime($_POST['dob'])).'"')->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $isUserFound = 1;
                $personId= $getIfPersonAvailable[0]['uid'];
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y).'- Years';
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
            }else{
                $getMissingPerson = array();
            }
            if(count($getMissingPerson) > 0)
            {
                $missingId = $getMissingPerson[0]['Id'];
                $isAadharCorrect = 1;
                if($getMissingPerson[0]['missinggender'] != NULL)
                {
                    if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                    {
                        $isDobCorrect = 1;
                    }
                    if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                    {
                        $isGenderCorrect = 1;
                        if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                            $isMissing = 1;
                            $personName = $getMissingPerson[0]['missingname'];
                            $gender = $getMissingPerson[0]['missinggender'];
                            $aadhar = $getMissingPerson[0]['missingaadhar'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getMissingPerson[0]['missingdob']);
                            $age = ($from->diff($to)->y).'- Years';
                            if(count($getIfPersonAvailable) > 0)
                            {
                                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                            }else{
                                $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                            }
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }else{
                    $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                    if(count($getFullDetail) > 0)
                    {
                        if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                        }
                        if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                        {
                            $isGenderCorrect = 1;
                            if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                                $isMissing = 1; 
                                $personName = $getMissingPerson[0]['missingname'];
                                $gender = $getMissingPerson[0]['missinggender'];
                                $aadhar = $getMissingPerson[0]['missingaadhar'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                $age = ($from->diff($to)->y).'- Years';
                                if(count($getIfPersonAvailable) > 0)
                                {
                                    $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                }else{
                                    $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                }
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }   
                            }
                        }   
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                }
            }else{
                if(count($getIfPersonAvailable) > 0)
                {
                    $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                }else{
                    $getUserDetail = array();
                }
                if(count($getUserDetail) > 0)
                {
                    $isAadharCorrect = 1;
                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                    {
                        $isDobCorrect = 1;
                    }
                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                    {
                        $isGenderCorrect = 1;
                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                            $isMissing = 0; 
                            $personName = $getUserDetail[0]['aadharname'];
                            $gender = $getUserDetail[0]['gender'];
                            $aadhar = $getUserDetail[0]['aadhar_id'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getUserDetail[0]['dob']);
                            $age = ($from->diff($to)->y).'- Years';
                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }
            }
            $insertdata = array(
                'gender' => $_POST['gender'],
                'dob' => $_POST['dob'],
                'Idtype' => $_POST['idType'],
                'IdNumber' => $idNumber,
                'userId' => $_SESSION['user_id'],
                'isFound' => $isUserFound,
                'isMissing' => $isMissing,
                'missingId' => $missingId,
                'personId' => $personId
            );
            $insert = $this->db->insert('searchpersonhistory',$insertdata);
            if($insert)
            {
                if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                {
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                        'message' => 'Person Found',
                        'isMissing' => $isMissing,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto
                    );
                    $_SESSION['searchId'] = $this->db->insert_id();
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'incorrect',
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                    );
                    echo json_encode($response);   
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
        if($_POST['idType'] == 'pan')
        {
            $idNumber = $_POST['panNumber'];
            $getIfAlready = $this->db->query('select * from panlist where panNumber="'.$idNumber.'"')->result_array();
            if(count($getIfAlready) > 0)
            {
                $getIfPersonAvailable = $this->db->query('select * from user where uid='.$getIfAlready[0]['userId'])->result_array();   
            }else{
                $getIfPersonAvailable = array();
            }
            $userphoto = '';
            if(count($getIfPersonAvailable) > 0)
            {
                $isUserFound = 1;
                $personId= $getIfPersonAvailable[0]['uid'];
                $personName = $getIfPersonAvailable[0]['aadharname'];
                $gender = $getIfPersonAvailable[0]['gender'];
                $aadhar = $getIfPersonAvailable[0]['aadhar_id'];
                $from=new DateTime(date('Y-m-d'));
                $to   = new DateTime($getIfPersonAvailable[0]['dob']);
                $age = ($from->diff($to)->y).'- Years';
                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                $userphoto = base_url().''.(($getIfPersonAvailable[0]['aadharphoto'] != NULL) ? $getIfPersonAvailable[0]['aadharphoto'] : $getIfPersonAvailable[0]['facematchphoto']);
            }
            if(count($getIfPersonAvailable) > 0)
            {
                $getMissingPerson = $this->db->query('select * from missingperson where missingaadhar="'.$getIfPersonAvailable[0]['aadhar_id'].'" and isFound != 1')->result_array();   
            }else{
                $getMissingPerson = array();
            }
            if(count($getMissingPerson) > 0)
            {
                $missingId = $getMissingPerson[0]['Id'];
                $isAadharCorrect = 1;
                if($getMissingPerson[0]['missinggender'] != NULL)
                {
                    if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                    {
                        $isDobCorrect = 1;
                    }
                    if(strtolower($getMissingPerson[0]['missinggender']) == strtolower($_POST['gender']))
                    {
                        $isGenderCorrect = 1;
                        if($getMissingPerson[0]['missingdob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                            $isMissing = 1;
                            $personName = $getMissingPerson[0]['missingname'];
                            $gender = $getMissingPerson[0]['missinggender'];
                            $aadhar = $getMissingPerson[0]['missingaadhar'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getMissingPerson[0]['missingdob']);
                            $age = ($from->diff($to)->y).'- Years';
                            if(count($getIfPersonAvailable) > 0)
                            {
                                $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                            }else{
                                $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                            }
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }else{
                    $getFullDetail = $this->db->query('select * from missingpersondetail where missingId='.$getMissingPerson[0]['Id'])->result_array();
                    if(count($getFullDetail) > 0)
                    {
                        if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                        }
                        if(strtolower($getFullDetail[0]['gender']) == strtolower($_POST['gender']))
                        {
                            $isGenderCorrect = 1;
                            if($getFullDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                                $isMissing = 1; 
                                $personName = $getMissingPerson[0]['missingname'];
                                $gender = $getMissingPerson[0]['missinggender'];
                                $aadhar = $getMissingPerson[0]['missingaadhar'];
                                $from=new DateTime(date('Y-m-d'));
                                $to   = new DateTime($getMissingPerson[0]['missingdob']);
                                $age = ($from->diff($to)->y).'- Years';
                                if(count($getIfPersonAvailable) > 0)
                                {
                                    $address = $getIfPersonAvailable[0]['vtc'].','.$getIfPersonAvailable[0]['state'];
                                }else{
                                    $address = $getMissingPerson[0]['fathercity'].','.$getMissingPerson[0]['fatherstate'];
                                }
                                if(count($getIfPersonAvailable) == 0)
                                {
                                    $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                }   
                            }
                        }   
                    }else{
                        $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar_id'].'"')->result_array();
                        if(count($getUserDetail) > 0)
                        {
                            if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                            {
                                $isDobCorrect = 1;
                            }
                            if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                            {
                                $isGenderCorrect = 1;
                                if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                                {
                                    $isDobCorrect = 1;
                                    $isMissing = 1; 
                                    $personName = $getUserDetail[0]['aadharname'];
                                    $gender = $getUserDetail[0]['gender'];
                                    $aadhar = $getUserDetail[0]['aadhar_id'];
                                    $from=new DateTime(date('Y-m-d'));
                                    $to   = new DateTime($getUserDetail[0]['dob']);
                                    $age = ($from->diff($to)->y).'- Years';
                                    $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                                    if(count($getIfPersonAvailable) == 0)
                                    {
                                        $userphoto = base_url().''.(($getMissingPerson[0]['facematchphoto'] != NULL) ? $getMissingPerson[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                                    }   
                                }
                            }
                        }
                    }
                }
            }else{
                if(count($getIfPersonAvailable) > 0)
                {
                    $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getIfPersonAvailable[0]['aadhar_id'].'"')->result_array();   
                }else{
                    $getUserDetail = array();
                }
                if(count($getUserDetail) > 0)
                {
                    $isAadharCorrect = 1;
                    if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                    {
                        $isDobCorrect = 1;
                    }
                    if(strtolower($getUserDetail[0]['gender']) == strtolower($_POST['gender']))
                    {
                        $isGenderCorrect = 1;
                        if($getUserDetail[0]['dob'] == date('Y-m-d',strtotime($_POST['dob'])))
                        {
                            $isDobCorrect = 1;
                            $isMissing = 0; 
                            $personName = $getUserDetail[0]['aadharname'];
                            $gender = $getUserDetail[0]['gender'];
                            $aadhar = $getUserDetail[0]['aadhar_id'];
                            $from=new DateTime(date('Y-m-d'));
                            $to   = new DateTime($getUserDetail[0]['dob']);
                            $age = ($from->diff($to)->y).'- Years';
                            $address = $getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'];
                            if(count($getIfPersonAvailable) == 0)
                            {
                                $userphoto = base_url().''.(($getUserDetail[0]['facematchphoto'] != NULL) ? $getUserDetail[0]['facematchphoto'] : 'assets/img/noimage.jpg');
                            }   
                        }
                    }
                }
            }
            $insertdata = array(
                'gender' => $_POST['gender'],
                'dob' => $_POST['dob'],
                'Idtype' => $_POST['idType'],
                'IdNumber' => $idNumber,
                'userId' => $_SESSION['user_id'],
                'isFound' => $isUserFound,
                'isMissing' => $isMissing,
                'missingId' => $missingId,
                'personId' => $personId
            );
            $insert = $this->db->insert('searchpersonhistory',$insertdata);
            if($insert)
            {
                if($isGenderCorrect == 1 && $isDobCorrect == 1 && $isAadharCorrect == 1)
                {
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                        'message' => 'Person Found',
                        'isMissing' => $isMissing,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto
                    );
                    $_SESSION['searchId'] = $this->db->insert_id();
                    echo json_encode($response);   
                }else{
                    $response = array(
                        'status' => 'incorrect',
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                    );
                    echo json_encode($response);   
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
    }

    function addFaceSearch()
    {
        $getFinalId = $this->db->query('select max(Id) as Id from searchfacehistoryafterlogin')->result_array();
        if($getFinalId[0]['Id'] != NULL)
        {
            $_SESSION['searchFaceIdAfterLogin'] = $getFinalId[0]['Id'] + 1;
        }else{
            $_SESSION['searchFaceIdAfterLogin'] = 1;
        }
        $insertdata = array(
            'Id' => $_SESSION['searchFaceIdAfterLogin'],
            'userId' => $_SESSION['user_id'],
            'isKyc' => 0
        );
        $insert = $this->db->insert('searchfacehistoryafterlogin',$insertdata);
    }

    function createOverallFaceHistory()
    {
        $getDetails = $this->db->query('select * from searchfacehistoryafterlogin where Id='.$_SESSION['searchFaceIdAfterLogin'])->result_array();
        $insertData = array(
            'dateCreated' => date('Y-m-d H:i:s'),
            'userId' => $_SESSION['user_id'],
            'missingIds' => $getDetails[0]['matchedLapataIds'],
            'unknownIds' => $getDetails[0]['matchedUnknownIds'],
            'searchQuery' => $getDetails[0]['mainPhoto'],
            'searchType' => 'facematch'
        );
        $insertOverall = $this->db->insert('overallHistory',$insertData);
    }

    function searchPersonFace()
    {
        if($_POST['type'] == '')
        {
            $data = $_POST["mainPhotoSelectedFacematch"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = time().''.rand(0,10000);
            $newImagePath = 'upload/searchFacePerson/'.$imageId.'.'.$split1[1];
            file_put_contents($newImagePath, $data);
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcakhoji4",
                "image_url" => base_url().''.$newImagePath,
                "threshold" => (float)$this->getSettings('afterLoginThreshold')
            ));
            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => $postdata,
              CURLOPT_HTTPHEADER => array(
                'Content-Type: application/json',
                'Authorization: '.$this->getSettings('facematchtoken'),
              ),
            ));
            $faceresponse = json_decode(curl_exec($curl),true);
            $personName = '';
            $gender = '';
            $aadhar = '';
            $gender = '';
            $isVerified = 'No';
            $isVisible = 0;
            $age = '';
            $isWanted = 0;
            $isCriminal = 0;
            $wantedId = array();
            $criminalId = array();
            $address = '';
            $userphoto = '';
            $personId = 0;
            $isLapata = 0;
            $missingId = 0;
            $isUserFound = 0;
            $isMissing = 0;
            $isAadharCorrect = 0;
            $isGenderCorrect = 1;
            $isDobCorrect = 1;
            $userId = array();
            $missingId = array();
            $lapataId = array();
            $wantedId = array();
            $criminalId = array();
            $finalcount = 0;
            curl_close($curl);
            if(count($faceresponse) > 0)
            {
                if(count($faceresponse['output']) > 0)
                {
                    foreach($faceresponse['output'] as $k=>$v)
                    {
                        $split = explode('_',$v);
                        if($split[0] == 'GEN')
                        {
                            $this->db->or_where('imageId',$v);
                            $this->db->or_where('imageId1',$v);
                            $this->db->or_where('imageId2',$v);
                            $user = $this->db->get('user')->result_array();
                            if(count($user) > 0)
                            {
                                foreach($user as $k1=>$v1)
                                {
                                    if(strtolower($_POST['gender']) == strtolower($v1['gender']))
                                    {
                                        array_push($userId,$v1['uid']);
                                        $finalcount++;   
                                    }
                                }
                            }else{
                                $getAadharImageId = $this->db->query('select * from user where aadharImageId="'.$v.'"')->result_array();
                                if(count($getAadharImageId) > 0)
                                {
                                    foreach($getAadharImageId as $k1=>$v1)
                                    {
                                        if(strtolower($_POST['gender']) == strtolower($v1['gender']))
                                        {
                                            if(strtotime($v1['aadharExpiryDate']) >= strtotime(date('Y-m-d')))
                                            {
                                                array_push($userId,$v1['uid']);
                                                $finalcount++;   
                                            }
                                        }
                                    }   
                                }
                            }
                        }
                        if($split[0] == 'Missing')
                        {
                            $this->db->where('imageId',$v);
                            $this->db->where('isFinalSubmitted',1);
                            $this->db->where('isFound',0);
                            $missingperson = $this->db->get('missingperson')->result_array();
                            if(count($missingperson) > 0)
                            {
                                foreach($missingperson as $k1=>$v1)
                                {
                                    array_push($missingId,$v1['Id']);
                                    $finalcount++;
                                }
                            }
                        }
                        if($split[0] == 'LAP')
                        {
                            $this->db->or_where('imageId',$v);
                            $this->db->or_where('imageId1',$v);
                            $this->db->or_where('imageId2',$v);
                            $lapata = $this->db->get('unknown_person')->result_array();
                            if(count($lapata) > 0)
                            {
                                foreach($lapata as $k1=>$v1)
                                {
                                    if(strtotime($v1['expiryDate']) >= strtotime(date('Y-m-d')))
                                    {
                                        if($v1['isFound'] == '0')
                                        {
                                            if($v1['awsEventName'] == 'All')
                                            {
                                                $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                                if($gender == strtolower($v1['Gender']))
                                                {
                                                    if($v1['isFinalSubmitted'] == 1)
                                                    {
                                                        array_push($lapataId,$v1['id']);
                                                        $finalcount++;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        if($split[0] == 'Wanted')
                        {
                            $this->db->where('imageId',$v);
                            $this->db->where('isFinalSubmitted',1);
                            $this->db->where('status','Active');
                            $wanted = $this->db->get('criminals')->result_array();
                            if(count($wanted) > 0)
                            {
                                foreach($wanted as $k1=>$v1)
                                {
                                    array_push($wantedId,$v1['Id']);
                                    $finalcount++;
                                }
                            }
                        }
                        if($split[0] == 'Criminal')
                        {
                            $this->db->where('imageId',$v);
                            $this->db->where('isFinalSubmitted',1);
                            $this->db->where('status','Active');
                            $criminal = $this->db->get('criminals')->result_array();
                            if(count($criminal) > 0)
                            {
                                foreach($criminal as $k1=>$v1)
                                {
                                    array_push($criminalId,$v1['Id']);
                                    $finalcount++;
                                }
                            }
                        }
                    }
                }
            }
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcakhoji4",
                "image_url" => base_url().''.$newImagePath,
                "threshold" => (float)$this->getSettings('afterLoginThreshold')
            ));
            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => $postdata,
              CURLOPT_HTTPHEADER => array(
                'Content-Type: application/json',
                'Accept: application/json',
                'Authorization: '.$this->getSettings('facematchtoken'),
              ),
            ));
            
            $faceresponse = json_decode(curl_exec($curl),true);
            $unknownId = array();
            /* if(count($faceresponse['output']) > 0)
            {
                foreach($faceresponse['output'] as $k1=>$v1)
                {
                    $this->db->or_where('imageId',$v1);
                    $this->db->or_where('imageId1',$v1);
                    $this->db->or_where('imageId2',$v1);
                    $getUnknownDetail = $this->db->get('unknown_person')->result_array();
                    if(count($getUnknownDetail) > 0)
                    {
                        foreach($getUnknownDetail as $k=>$v)
                        {
                            if($v['isFound'] == 0 && $v['awsEventName'] != 'All')
                            {
                                $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                if($gender == strtolower($v['Gender']))
                                {
                                    if($v['isFinalSubmitted'] == 1)
                                    {
                                        array_push($unknownId,$v['id']);
                                        $finalcount++;
                                    }
                                }
                            }
                        }
                    }   
                }
            }*/
            if($finalcount > 0)
            {
                if(count($lapataId) > 0)
                {
                    foreach($lapataId as $k=>$v)
                    {
                        if($k == 0)
                        {
                            $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                            if($getApplicationNumber[0]['isKyc'] == 0)
                            {
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['landingMob'],
                                    'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                    'searchType' => 'Lapata',
                                    'searchPhoto' => $newImagePath,
                                    'complainantUserType' => 'NonKyc',
                                    'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else{
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }
                            }else{
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['landingMob'],
                                    'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                    'searchType' => 'Lapata',
                                    'searchPhoto' => $newImagePath,
                                    'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                    'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else{
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }
                            }
                        }
                    }
                }
                if(count($unknownId) > 0)
                {
                    foreach($unknownId as $k=>$v)
                    {
                        if($k == 0)
                        {
                            $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                            if($getApplicationNumber[0]['isKyc'] == 0)
                            {
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['landingMob'],
                                    'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                    'searchType' => 'Unknown',
                                    'searchPhoto' => $newImagePath,
                                    'complainantUserType' => 'NonKyc',
                                    'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else{
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }
                            }else{
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['landingMob'],
                                    'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                    'searchType' => 'Unknown',
                                    'searchPhoto' => $newImagePath,
                                    'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                    'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else{
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }
                            }
                        }
                    }
                }
                $insertdata = array(
                    'matchedLapataIds' => implode(',',$lapataId),
                    'matchedWantedIds' => implode(',',$wantedId),
                    'matchedCriminalIds' => implode(',',$criminalId),
                    'matchedMissingIds' => implode(',',$missingId),
                    'matchedUserIds' => implode(',',$userId),
                    'matchedUnknownIds' => implode(',',$unknownId),
                    'mainPhoto' => $newImagePath
                );
                $this->db->where('Id',$_SESSION['searchFaceIdAfterLogin']);
                $update = $this->db->update('searchfacehistoryafterlogin',$insertdata);
                $response = array(
                    'status' => 'success',
                    'personName' => $personName,
                    'isWanted' => $isWanted,
                    'isCriminal' => $isCriminal,
                    'isLapata' => $isLapata,
                    'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                    'gender' => strtolower($gender),
                    'age' => $age,
                    'address' => $address,
                    'isAadharCorrect' => $isAadharCorrect,
                    'isDobCorrect' => $isDobCorrect,
                    'isGenderCorrect' => $isGenderCorrect,
                    'message' => 'Person Found',
                    'isMissing' => $isMissing,
                    'isRegistered' => $isUserFound,
                    'image' => $userphoto,
                    'finalCount' => $finalcount
                );
                echo json_encode($response);     
            }else{
                $response = array(
                    'status' => 'success',
                    'finalCount' => $finalcount
                );
                echo json_encode($response);     
            }
        }else{
            if($_POST['type'] == 'missing')
            {
                $data = $_POST["mainPhotoSelectedFacematch"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                $imageId = time().''.rand(0,10000);
                $newImagePath = 'upload/searchFacePerson/'.$imageId.'.'.$split1[1];
                file_put_contents($newImagePath, $data);
                $personName = '';
                $gender = '';
                $aadhar = '';
                $gender = '';
                $isVerified = 'No';
                $isVisible = 0;
                $age = '';
                $isWanted = 0;
                $isCriminal = 0;
                $wantedId = array();
                $criminalId = array();
                $address = '';
                $userphoto = '';
                $personId = 0;
                $isLapata = 0;
                $missingId = 0;
                $isUserFound = 0;
                $isMissing = 0;
                $isAadharCorrect = 0;
                $isGenderCorrect = 1;
                $isDobCorrect = 1;
                $userId = array();
                $missingId = array();
                $lapataId = array();
                $wantedId = array();
                $criminalId = array();
                $finalcount = 0;
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                $unknownId = array();
                if(count($faceresponse['output']) > 0)
                {
                    foreach($faceresponse['output'] as $k1=>$v1)
                    {
                        $this->db->or_where('imageId',$v1);
                        $this->db->or_where('imageId1',$v1);
                        $this->db->or_where('imageId2',$v1);
                        $getUnknownDetail = $this->db->get('unknown_person')->result_array();
                        if(count($getUnknownDetail) > 0)
                        {
                            foreach($getUnknownDetail as $k=>$v)
                            {
                                if(strtotime($v['expiryDate']) >= strtotime(date('Y-m-d')))
                                {
                                    if($v['isFound'] == 0 && $v['awsEventName'] == 'All')
                                    {
                                        $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                        if($gender == strtolower($v['Gender']))
                                        {
                                            if($v['isFinalSubmitted'] == 1)
                                            {
                                                array_push($lapataId,$v['id']);
                                                $finalcount++;
                                            }
                                        }
                                    }
                                }
                            }
                        }   
                    }
                }
                if($finalcount > 0)
                {
                    if(count($lapataId) > 0)
                    {
                        foreach($lapataId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['landingMob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['landingMob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if(count($unknownId) > 0)
                    {
                        foreach($unknownId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['landingMob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['landingMob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'matchedLapataIds' => implode(',',$lapataId),
                        'matchedWantedIds' => implode(',',$wantedId),
                        'matchedCriminalIds' => implode(',',$criminalId),
                        'matchedMissingIds' => implode(',',$missingId),
                        'matchedUserIds' => implode(',',$userId),
                        'matchedUnknownIds' => implode(',',$unknownId),
                        'mainPhoto' => $newImagePath
                    );
                    $this->db->where('Id',$_SESSION['searchFaceIdAfterLogin']);
                    $update = $this->db->update('searchfacehistoryafterlogin',$insertdata);
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'isWanted' => $isWanted,
                        'isCriminal' => $isCriminal,
                        'isLapata' => $isLapata,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                        'message' => 'Person Found',
                        'isMissing' => $isMissing,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto,
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }else{
                    $response = array(
                        'status' => 'success',
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }
            }else{
                $data = $_POST["mainPhotoSelectedFacematch"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                $imageId = time().''.rand(0,10000);
                $newImagePath = 'upload/searchFacePerson/'.$imageId.'.'.$split1[1];
                file_put_contents($newImagePath, $data);
                $personName = '';
                $gender = '';
                $aadhar = '';
                $gender = '';
                $isVerified = 'No';
                $isVisible = 0;
                $age = '';
                $isWanted = 0;
                $isCriminal = 0;
                $wantedId = array();
                $criminalId = array();
                $address = '';
                $userphoto = '';
                $personId = 0;
                $isLapata = 0;
                $missingId = 0;
                $isUserFound = 0;
                $isMissing = 0;
                $isAadharCorrect = 0;
                $isGenderCorrect = 1;
                $isDobCorrect = 1;
                $userId = array();
                $missingId = array();
                $lapataId = array();
                $wantedId = array();
                $criminalId = array();
                $finalcount = 0;
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                $unknownId = array();
                /* if(count($faceresponse['output']) > 0)
                {
                    foreach($faceresponse['output'] as $k1=>$v1)
                    {
                        $this->db->or_where('imageId',$v1);
                        $this->db->or_where('imageId1',$v1);
                        $this->db->or_where('imageId2',$v1);
                        $getUnknownDetail = $this->db->get('unknown_person')->result_array();
                        if(count($getUnknownDetail) > 0)
                        {
                            foreach($getUnknownDetail as $k=>$v)
                            {
                                if($v['isFound'] == 0 && $v['awsEventName'] != 'All')
                                {
                                    $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                    if($gender == strtolower($v['Gender']))
                                    {
                                        if($v['isFinalSubmitted'] == 1)
                                        {
                                            array_push($unknownId,$v['id']);
                                            $finalcount++;
                                        }
                                    }
                                }
                            }
                        }   
                    }
                }*/
                if($finalcount > 0)
                {
                    if(count($lapataId) > 0)
                    {
                        foreach($lapataId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['landingMob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['landingMob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if(count($unknownId) > 0)
                    {
                        foreach($unknownId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['landingMob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['landingMob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'matchedLapataIds' => implode(',',$lapataId),
                        'matchedWantedIds' => implode(',',$wantedId),
                        'matchedCriminalIds' => implode(',',$criminalId),
                        'matchedMissingIds' => implode(',',$missingId),
                        'matchedUserIds' => implode(',',$userId),
                        'matchedUnknownIds' => implode(',',$unknownId),
                        'mainPhoto' => $newImagePath
                    );
                    $this->db->where('Id',$_SESSION['searchFaceIdAfterLogin']);
                    $update = $this->db->update('searchfacehistoryafterlogin',$insertdata);
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'isWanted' => $isWanted,
                        'isCriminal' => $isCriminal,
                        'isLapata' => $isLapata,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                        'message' => 'Person Found',
                        'isMissing' => $isMissing,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto,
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }else{
                    $response = array(
                        'status' => 'success',
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }
            }
        }
    }

    function searchPersonFaceNew()
    {
        if($_POST['type'] == '')
        {
            $data = $_POST["mainPhotoSelectedFacematch"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = time().''.rand(0,10000);
            $newImagePath = 'upload/searchFacePerson/'.$imageId.'.'.$split1[1];
            file_put_contents($newImagePath, $data);
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcakhoji4",
                "image_url" => base_url().''.$newImagePath,
                "threshold" => (float)$this->getSettings('afterLoginThreshold')
            ));
            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => $postdata,
              CURLOPT_HTTPHEADER => array(
                'Content-Type: application/json',
                'Authorization: '.$this->getSettings('facematchtoken'),
              ),
            ));
            $faceresponse = json_decode(curl_exec($curl),true);
            $personName = '';
            $gender = '';
            $aadhar = '';
            $gender = '';
            $isVerified = 'No';
            $isVisible = 0;
            $age = '';
            $isWanted = 0;
            $isCriminal = 0;
            $wantedId = array();
            $criminalId = array();
            $address = '';
            $userphoto = '';
            $personId = 0;
            $isLapata = 0;
            $missingId = 0;
            $isUserFound = 0;
            $isMissing = 0;
            $isAadharCorrect = 0;
            $isGenderCorrect = 1;
            $isDobCorrect = 1;
            $userId = array();
            $missingId = array();
            $lapataId = array();
            $wantedId = array();
            $criminalId = array();
            $finalcount = 0;
            curl_close($curl);
            if(count($faceresponse) > 0)
            {
                if(count($faceresponse['output']) > 0)
                {
                    foreach($faceresponse['output'] as $k=>$v)
                    {
                        $split = explode('_',$v);
                        if($split[0] == 'GEN')
                        {
                            $this->db->or_where('imageId',$v);
                            $this->db->or_where('imageId1',$v);
                            $this->db->or_where('imageId2',$v);
                            $user = $this->db->get('user')->result_array();
                            if(count($user) > 0)
                            {
                                foreach($user as $k1=>$v1)
                                {
                                    if(strtolower($_POST['gender']) == strtolower($v1['gender']))
                                    {
                                        array_push($userId,$v1['uid']);
                                        $finalcount++;   
                                    }
                                }
                            }else{
                                $getAadharImageId = $this->db->query('select * from user where aadharImageId="'.$v.'"')->result_array();
                                if(count($getAadharImageId) > 0)
                                {
                                    foreach($getAadharImageId as $k1=>$v1)
                                    {
                                        if(strtolower($_POST['gender']) == strtolower($v1['gender']))
                                        {
                                            if(strtotime($v1['aadharExpiryDate']) >= strtotime(date('Y-m-d')))
                                            {
                                                array_push($userId,$v1['uid']);
                                                $finalcount++;   
                                            }
                                        }
                                    }   
                                }
                            }
                        }
                        if($split[0] == 'Missing')
                        {
                            $this->db->where('imageId',$v);
                            $this->db->where('isFinalSubmitted',1);
                            $this->db->where('isFound',0);
                            $missingperson = $this->db->get('missingperson')->result_array();
                            if(count($missingperson) > 0)
                            {
                                foreach($missingperson as $k1=>$v1)
                                {
                                    array_push($missingId,$v1['Id']);
                                    $finalcount++;
                                }
                            }
                        }
                        if($split[0] == 'LAP')
                        {
                            $this->db->or_where('imageId',$v);
                            $this->db->or_where('imageId1',$v);
                            $this->db->or_where('imageId2',$v);
                            $lapata = $this->db->get('unknown_person')->result_array();
                            if(count($lapata) > 0)
                            {
                                foreach($lapata as $k1=>$v1)
                                {
                                    if(strtotime($v1['expiryDate']) >= strtotime(date('Y-m-d')))
                                    {
                                        if($v1['isFound'] == '0')
                                        {
                                            if($v1['awsEventName'] == 'All')
                                            {
                                                $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                                if($gender == strtolower($v1['Gender']))
                                                {
                                                    if($v1['isFinalSubmitted'] == 1)
                                                    {
                                                        array_push($lapataId,$v1['id']);
                                                        $finalcount++;
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                        if($split[0] == 'Wanted')
                        {
                            $this->db->where('imageId',$v);
                            $this->db->where('isFinalSubmitted',1);
                            $this->db->where('status','Active');
                            $wanted = $this->db->get('criminals')->result_array();
                            if(count($wanted) > 0)
                            {
                                foreach($wanted as $k1=>$v1)
                                {
                                    array_push($wantedId,$v1['Id']);
                                    $finalcount++;
                                }
                            }
                        }
                        if($split[0] == 'Criminal')
                        {
                            $this->db->where('imageId',$v);
                            $this->db->where('isFinalSubmitted',1);
                            $this->db->where('status','Active');
                            $criminal = $this->db->get('criminals')->result_array();
                            if(count($criminal) > 0)
                            {
                                foreach($criminal as $k1=>$v1)
                                {
                                    array_push($criminalId,$v1['Id']);
                                    $finalcount++;
                                }
                            }
                        }
                    }
                }
            }
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcakhoji4",
                "image_url" => base_url().''.$newImagePath,
                "threshold" => (float)$this->getSettings('afterLoginThreshold')
            ));
            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => $postdata,
              CURLOPT_HTTPHEADER => array(
                'Content-Type: application/json',
                'Accept: application/json',
                'Authorization: '.$this->getSettings('facematchtoken'),
              ),
            ));
            
            $faceresponse = json_decode(curl_exec($curl),true);
            $unknownId = array();
            if(count($faceresponse['output']) > 0)
            {
                foreach($faceresponse['output'] as $k1=>$v1)
                {
                    $this->db->or_where('imageId',$v1);
                    $this->db->or_where('imageId1',$v1);
                    $this->db->or_where('imageId2',$v1);
                    $getUnknownDetail = $this->db->get('unknown_person')->result_array();
                    if(count($getUnknownDetail) > 0)
                    {
                        foreach($getUnknownDetail as $k=>$v)
                        {
                            if(strtotime($v['expiryDate']) >= strtotime(date('Y-m-d')))
                            {
                                if($v['isFound'] == 0 && $v['awsEventName'] != 'All')
                                {
                                    $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                    if($gender == strtolower($v['Gender']))
                                    {
                                        if($v['isFinalSubmitted'] == 1)
                                        {
                                            array_push($unknownId,$v['id']);
                                            $finalcount++;
                                        }
                                    }
                                }
                            }
                        }
                    }   
                }
            }
            if($finalcount > 0)
            {
                if(count($lapataId) > 0)
                {
                    foreach($lapataId as $k=>$v)
                    {
                        if($k == 0)
                        {
                            $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                            if($getApplicationNumber[0]['isKyc'] == 0)
                            {
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['landingMob'],
                                    'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                    'searchType' => 'Lapata',
                                    'searchPhoto' => $newImagePath,
                                    'complainantUserType' => 'NonKyc',
                                    'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else{
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }
                            }else{
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['landingMob'],
                                    'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                    'searchType' => 'Lapata',
                                    'searchPhoto' => $newImagePath,
                                    'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                    'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else{
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }
                            }
                        }
                    }
                }
                if(count($unknownId) > 0)
                {
                    foreach($unknownId as $k=>$v)
                    {
                        if($k == 0)
                        {
                            $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                            if($getApplicationNumber[0]['isKyc'] == 0)
                            {
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['landingMob'],
                                    'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                    'searchType' => 'Unknown',
                                    'searchPhoto' => $newImagePath,
                                    'complainantUserType' => 'NonKyc',
                                    'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else{
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }
                            }else{
                                $notifyData = array(
                                    'isLogin' => 1,
                                    'loggedInUserId' => $_SESSION['user_id'],
                                    'loginUserType' => $_SESSION['login_type'],
                                    'dateCreated' => date('Y-m-d H:i:s'),
                                    'mobileNumber' => $_SESSION['landingMob'],
                                    'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                    'searchType' => 'Unknown',
                                    'searchPhoto' => $newImagePath,
                                    'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                    'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                );
                                $insert = $this->db->insert('searchnotification',$notifyData);
                                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                {
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }else{
                                    $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                    $query_res = $query->result_array();
                                    
                                    if(count($query_res) > 0)
                                    {
                                        foreach ($query_res as $query_res_data) {
                                            $registrationIds[] =$query_res_data['token'];
                                        }
                                        
                                        $url ="https://fcm.googleapis.com/fcm/send";
                                        $fields=array(
                                            "registration_ids"=>$registrationIds,
                                            'data' => array("msg"=>"Khoji"),
                                            'priority' => 'high',
                                            "click_action"=>base_url(),
                                            "notification"=>array(
                                                "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                "title"=>"Khoji",
                                            )   
                                        );
                                        $headers=array(
                                            'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                            'Content-Type:application/json'
                                        );
                                        $ch=curl_init();
                                        curl_setopt($ch,CURLOPT_URL,$url);
                                        curl_setopt($ch,CURLOPT_POST,true);
                                        curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                        curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                        curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                        curl_exec($ch);
                                    }
                                }
                            }
                        }
                    }
                }
                $insertdata = array(
                    'matchedLapataIds' => implode(',',$lapataId),
                    'matchedWantedIds' => implode(',',$wantedId),
                    'matchedCriminalIds' => implode(',',$criminalId),
                    'matchedMissingIds' => implode(',',$missingId),
                    'matchedUserIds' => implode(',',$userId),
                    'matchedUnknownIds' => implode(',',$unknownId),
                    'mainPhoto' => $newImagePath
                );
                $this->db->where('Id',$_SESSION['searchFaceIdAfterLogin']);
                $update = $this->db->update('searchfacehistoryafterlogin',$insertdata);
                $response = array(
                    'status' => 'success',
                    'personName' => $personName,
                    'isWanted' => $isWanted,
                    'isCriminal' => $isCriminal,
                    'isLapata' => $isLapata,
                    'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                    'gender' => strtolower($gender),
                    'age' => $age,
                    'address' => $address,
                    'isAadharCorrect' => $isAadharCorrect,
                    'isDobCorrect' => $isDobCorrect,
                    'isGenderCorrect' => $isGenderCorrect,
                    'message' => 'Person Found',
                    'isMissing' => $isMissing,
                    'isRegistered' => $isUserFound,
                    'image' => $userphoto,
                    'finalCount' => $finalcount
                );
                echo json_encode($response);     
            }else{
                $response = array(
                    'status' => 'success',
                    'finalCount' => $finalcount
                );
                echo json_encode($response);     
            }
        }else{
            if($_POST['type'] == 'missing')
            {
                $data = $_POST["mainPhotoSelectedFacematch"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                $imageId = time().''.rand(0,10000);
                $newImagePath = 'upload/searchFacePerson/'.$imageId.'.'.$split1[1];
                file_put_contents($newImagePath, $data);
                $personName = '';
                $gender = '';
                $aadhar = '';
                $gender = '';
                $isVerified = 'No';
                $isVisible = 0;
                $age = '';
                $isWanted = 0;
                $isCriminal = 0;
                $wantedId = array();
                $criminalId = array();
                $address = '';
                $userphoto = '';
                $personId = 0;
                $isLapata = 0;
                $missingId = 0;
                $isUserFound = 0;
                $isMissing = 0;
                $isAadharCorrect = 0;
                $isGenderCorrect = 1;
                $isDobCorrect = 1;
                $userId = array();
                $missingId = array();
                $lapataId = array();
                $wantedId = array();
                $criminalId = array();
                $finalcount = 0;
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                $unknownId = array();
                if(isset($faceresponse['output']) && count($faceresponse['output']) > 0)
                {
                    foreach($faceresponse['output'] as $k1=>$v1)
                    {
                        $this->db->or_where('imageId',$v1);
                        $this->db->or_where('imageId1',$v1);
                        $this->db->or_where('imageId2',$v1);
                        $getUnknownDetail = $this->db->get('unknown_person')->result_array();
                        if(count($getUnknownDetail) > 0)
                        {
                            foreach($getUnknownDetail as $k=>$v)
                            {
                                if(strtotime($v['expiryDate']) >= strtotime(date('Y-m-d')))
                                {
                                    if($v['isFound'] == 0 && $v['awsEventName'] == 'All')
                                    {
                                        $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                        if($gender == strtolower($v['Gender']))
                                        {
                                            if($v['isFinalSubmitted'] == 1)
                                            {
                                                array_push($lapataId,$v['id']);
                                                $finalcount++;
                                            }
                                        }
                                    }
                                }
                            }
                        }   
                    }
                }
                if($finalcount > 0)
                {
                    if(count($lapataId) > 0)
                    {
                        foreach($lapataId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['landingMob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['landingMob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if(count($unknownId) > 0)
                    {
                        foreach($unknownId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['landingMob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['landingMob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'matchedLapataIds' => implode(',',$lapataId),
                        'matchedWantedIds' => implode(',',$wantedId),
                        'matchedCriminalIds' => implode(',',$criminalId),
                        'matchedMissingIds' => implode(',',$missingId),
                        'matchedUserIds' => implode(',',$userId),
                        'matchedUnknownIds' => implode(',',$unknownId),
                        'mainPhoto' => $newImagePath
                    );
                    $this->db->where('Id',$_SESSION['searchFaceIdAfterLogin']);
                    $update = $this->db->update('searchfacehistoryafterlogin',$insertdata);
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'isWanted' => $isWanted,
                        'isCriminal' => $isCriminal,
                        'isLapata' => $isLapata,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                        'message' => 'Person Found',
                        'isMissing' => $isMissing,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto,
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }else{
                    $response = array(
                        'status' => 'success',
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }
            }else{
                $data = $_POST["mainPhotoSelectedFacematch"];
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                $data = base64_decode($image_array_2[1]);
                $imageId = time().''.rand(0,10000);
                $newImagePath = 'upload/searchFacePerson/'.$imageId.'.'.$split1[1];
                file_put_contents($newImagePath, $data);
                $personName = '';
                $gender = '';
                $aadhar = '';
                $gender = '';
                $isVerified = 'No';
                $isVisible = 0;
                $age = '';
                $isWanted = 0;
                $isCriminal = 0;
                $wantedId = array();
                $criminalId = array();
                $address = '';
                $userphoto = '';
                $personId = 0;
                $isLapata = 0;
                $missingId = 0;
                $isUserFound = 0;
                $isMissing = 0;
                $isAadharCorrect = 0;
                $isGenderCorrect = 1;
                $isDobCorrect = 1;
                $userId = array();
                $missingId = array();
                $lapataId = array();
                $wantedId = array();
                $criminalId = array();
                $finalcount = 0;
                $curl = curl_init();
                $postdata = json_encode(array(
                    "collection_id" => "shivaguptabcakhoji4",
                    "image_url" => base_url().''.$newImagePath,
                    "threshold" => (float)$this->getSettings('afterLoginThreshold')
                ));
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'https://z4ff6xy4lixrrupnwfgetu2pye0qjzqn.lambda-url.ap-south-1.on.aws/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => $postdata,
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/json',
                    'Accept: application/json',
                    'Authorization: '.$this->getSettings('facematchtoken'),
                  ),
                ));
                $faceresponse = json_decode(curl_exec($curl),true);
                $unknownId = array();
                if(count($faceresponse['output']) > 0)
                {
                    foreach($faceresponse['output'] as $k1=>$v1)
                    {
                        $this->db->or_where('imageId',$v1);
                        $this->db->or_where('imageId1',$v1);
                        $this->db->or_where('imageId2',$v1);
                        $getUnknownDetail = $this->db->get('unknown_person')->result_array();
                        if(count($getUnknownDetail) > 0)
                        {
                            foreach($getUnknownDetail as $k=>$v)
                            {
                                if(strtotime($v['expiryDate']) >= strtotime(date('Y-m-d')))
                                {
                                    if($v['isFound'] == 0 && $v['awsEventName'] != 'All')
                                    {
                                        $gender = $_POST['gender'] == 'male' ? 'boy' : ($_POST['gender'] == 'female' ? 'girl' : 'other');
                                        if($gender == strtolower($v['Gender']))
                                        {
                                            if($v['isFinalSubmitted'] == 1)
                                            {
                                                array_push($unknownId,$v['id']);
                                                $finalcount++;
                                            }
                                        }
                                    }
                                }
                            }
                        }   
                    }
                }
                if($finalcount > 0)
                {
                    if(count($lapataId) > 0)
                    {
                        foreach($lapataId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['landingMob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['loginmob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['landingMob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Lapata',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - SAMAJSEVI -".$_SESSION['aadharName'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if(count($unknownId) > 0)
                    {
                        foreach($unknownId as $k=>$v)
                        {
                            if($k == 0)
                            {
                                $getApplicationNumber = $this->db->query('select * from unknown_person where id='.$v)->result_array();
                                if($getApplicationNumber[0]['isKyc'] == 0)
                                {
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['landingMob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => 'NonKyc',
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='guest' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }else{
                                    $notifyData = array(
                                        'isLogin' => 1,
                                        'loggedInUserId' => $_SESSION['user_id'],
                                        'loginUserType' => $_SESSION['login_type'],
                                        'dateCreated' => date('Y-m-d H:i:s'),
                                        'mobileNumber' => $_SESSION['landingMob'],
                                        'searchedAppNumber' => $getApplicationNumber[0]['Application_no'],
                                        'searchType' => 'Unknown',
                                        'searchPhoto' => $newImagePath,
                                        'complainantUserType' => $getApplicationNumber[0]['uploaded_by'],
                                        'complainantUserId' => ($getApplicationNumber[0]['uploaded_by'] == 'police' ? $getApplicationNumber[0]['policeId'] : ($getApplicationNumber[0]['uploaded_by'] == 'ngo' ? $getApplicationNumber[0]['ngoId'] : $getApplicationNumber[0]['userId']))
                                    );
                                    $insert = $this->db->insert('searchnotification',$notifyData);
                                    $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                                    if($getApplicationNumber[0]['uploaded_by'] == 'user')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='user' and userId=".$getApplicationNumber[0]['userId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else if($getApplicationNumber[0]['uploaded_by'] == 'police')
                                    {
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='police' and userId=".$getApplicationNumber[0]['policeId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }else{
                                        $query = $this->db->query("SELECT distinct token FROM `notification_tokens_tbl` where delete_status='N' and userType='ngo' and userId=".$getApplicationNumber[0]['ngoId']);
                                        $query_res = $query->result_array();
                                        
                                        if(count($query_res) > 0)
                                        {
                                            foreach ($query_res as $query_res_data) {
                                                $registrationIds[] =$query_res_data['token'];
                                            }
                                            
                                            $url ="https://fcm.googleapis.com/fcm/send";
                                            $fields=array(
                                                "registration_ids"=>$registrationIds,
                                                'data' => array("msg"=>"Khoji"),
                                                'priority' => 'high',
                                                "click_action"=>base_url(),
                                                "notification"=>array(
                                                    "body"=>"MATCH FOUND ALERT !!- PLEASE CHECK YOUR NOTIFICATION - General User -".$_SESSION['landingMob'].' from '.$getUserDetail[0]['vtc'].','.$getUserDetail[0]['state'].' has searched. Click here to check your notification.',
                                                    "title"=>"Khoji",
                                                )   
                                            );
                                            $headers=array(
                                                'Authorization: key=AAAAMgP8g1s:APA91bGPX21cquVsh3YdNZwFhl3us2Mq5p5vjHOf39HF8NK2H0WJvNn8zqlE_jSnhViSCYgmcNmeF_Ekuu8-nsRiFTBP2GNfLwEVH7MTIss8M5sB7rVOZySL3FWFfbVRx5HvUWuTMMtG',
                                                'Content-Type:application/json'
                                            );
                                            $ch=curl_init();
                                            curl_setopt($ch,CURLOPT_URL,$url);
                                            curl_setopt($ch,CURLOPT_POST,true);
                                            curl_setopt($ch,CURLOPT_HTTPHEADER,$headers);
                                            curl_setopt($ch,CURLOPT_RETURNTRANSFER,true);
                                            curl_setopt($ch,CURLOPT_POSTFIELDS,json_encode($fields));
                                            curl_exec($ch);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    $insertdata = array(
                        'matchedLapataIds' => implode(',',$lapataId),
                        'matchedWantedIds' => implode(',',$wantedId),
                        'matchedCriminalIds' => implode(',',$criminalId),
                        'matchedMissingIds' => implode(',',$missingId),
                        'matchedUserIds' => implode(',',$userId),
                        'matchedUnknownIds' => implode(',',$unknownId),
                        'mainPhoto' => $newImagePath
                    );
                    $this->db->where('Id',$_SESSION['searchFaceIdAfterLogin']);
                    $update = $this->db->update('searchfacehistoryafterlogin',$insertdata);
                    $response = array(
                        'status' => 'success',
                        'personName' => $personName,
                        'isWanted' => $isWanted,
                        'isCriminal' => $isCriminal,
                        'isLapata' => $isLapata,
                        'aadhar' => substr_replace($aadhar,'xxxxxxxx',0,8),
                        'gender' => strtolower($gender),
                        'age' => $age,
                        'address' => $address,
                        'isAadharCorrect' => $isAadharCorrect,
                        'isDobCorrect' => $isDobCorrect,
                        'isGenderCorrect' => $isGenderCorrect,
                        'message' => 'Person Found',
                        'isMissing' => $isMissing,
                        'isRegistered' => $isUserFound,
                        'image' => $userphoto,
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }else{
                    $response = array(
                        'status' => 'success',
                        'finalCount' => $finalcount
                    );
                    echo json_encode($response);     
                }
            }
        }
    }

    function deleteComplaint()
    {
        $getData = $this->db->query('select * from unknown_person where Application_no="'.$_POST['id'].'"')->result_array();
        unlink($getData[0]['Photo']);
        $this->db->query('delete from unknownPersonGold where unknownId='.$getData[0]['id']);
        $this->db->query('delete from unknown_person where Application_no="'.$_POST['id'].'"');
    }

    function deleteFunnelComplaint()
    {
        $getData = $this->db->query('select * from funnel_missing where Application_no="'.$_POST['id'].'"')->result_array();
        unlink($getData[0]['Photo']);
        $this->db->query('delete from funnelpersongold where funnelId='.$getData[0]['id']);
        $this->db->query('delete from funnel_missing where Application_no="'.$_POST['id'].'"');
    }

    function search_person_by_identity()
    {
       
        if(isset($_SESSION['landingMob'])){
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page_name'] = 'search_person_by_identity';
            $this->load->view('nonkyc/index', $page_data);
        }else 
        {
            redirect('login','refresh');
        }   
    }
    
    function search_person_details()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page_name'] = 'search_person_details';
            $this->load->view('nonkyc/index', $page_data);
        }else 
        {
            redirect('login','refresh');
        }
    }

    function upload_personal_details()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['userdetail'] = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
            $page_data['page_name'] = 'upload_personal_details';
            $this->load->view('nonkyc/index', $page_data);
        }else 
        {
            redirect('login','refresh');
        }   
    }
    
    
    // nominee
    
    function checkNomineeDetail()
    {
        $getSpouseDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar'].'"')->result_array();
        if(count($getSpouseDetail) > 0)
        {
            if($_POST['aadhar'] != $_SESSION['aadhar_id'])
            {
                $getIfAlreadyOtherInNominee1 = $this->db->query('select * from user where nominee1Aadhar="'.$_POST['aadhar'].'" and uid='.$_SESSION['user_id'])->result_array();
                $getIfAlreadyOtherInNominee2 = $this->db->query('select * from user where nominee2Aadhar="'.$_POST['aadhar'].'" and uid='.$_SESSION['user_id'])->result_array();
                $getIfAlreadyOtherInNominee3 = $this->db->query('select * from user where nominee3Aadhar="'.$_POST['aadhar'].'" and uid='.$_SESSION['user_id'])->result_array();
                if(count($getIfAlreadyOtherInNominee1) > 0 || count($getIfAlreadyOtherInNominee2) > 0 || count($getIfAlreadyOtherInNominee3) > 0)
                {
                    $response = array(
                        'status' => 'username',
                        'message' => 'This aadhar is already available in your nominee details.'
                    );
                    echo json_encode($response);
                }else{
                    $response = array(
                        'status' => 'success',
                        'spouseName' => $getSpouseDetail[0]['aadharname'].','.$getSpouseDetail[0]['vtc'].','.$getSpouseDetail[0]['state'],
                        'data' => array(
                            'mobile1' => $getSpouseDetail[0]['registration_mobile'],
                            'vismobile1' => substr_replace($getSpouseDetail[0]['registration_mobile'],'xxxxxx',0,7),
                        )
                    );
                    echo json_encode($response);      
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'You cannot enter your own aadhar number.'
                );
                echo json_encode($response);    
            }   
           
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Aadhar number does not exists in our records'
            );
            echo json_encode($response);
        }
    }
    
    function checkSpouseDetail()
    {
        $getSpouseDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar'].'"')->result_array();
        if(count($getSpouseDetail) > 0)
        {
            $getIfAlready = $this->db->query('select * from user where spouseAadhar="'.$_POST['aadhar'].'"')->result_array();
            if(count($getIfAlready) == 0)
            {
                if($_POST['aadhar'] != $_SESSION['aadhar_id'])
                {
                    $getLoginDetail = $this->db->query('select * from user where aadhar_id="'.$_SESSION['aadhar_id'].'"')->result_array();
                    if(strtolower($getSpouseDetail[0]['gender']) != strtolower($getLoginDetail[0]['gender']))
                    {
                        $response = array(
                            'status' => 'success',
                            'spouseName' => $getSpouseDetail[0]['aadharname'].','.$getSpouseDetail[0]['vtc'].','.$getSpouseDetail[0]['state'],
                            'data' => array(
                                'mobile1' => $getSpouseDetail[0]['registration_mobile'],
                                'vismobile1' => substr_replace($getSpouseDetail[0]['registration_mobile'],'xxxxxx',0,7),
                            )
                        );
                        echo json_encode($response);      
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Please Enter Aadhar Number of another gender.'
                        );
                        echo json_encode($response);        
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'You cannot enter your own aadhar number.'
                    );
                    echo json_encode($response);    
                }   
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'This person is already Added as Spouse with Another Person.'
                );
                echo json_encode($response);    
            }
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Aadhar no. is not Registered with this Website.'
            );
            echo json_encode($response);
        }
    }
    
    function sendPrivacyOtp()
    {
        $string = '0123456789';
        $string_shuffled = str_shuffle($string);
        $otp = substr($string_shuffled, 1, 4);
        $getPreviousDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
        $this->sendTextLocalOtp($getPreviousDetail[0]['aadharname'],$_SESSION['loginmob'],$otp);
        $updatedata = array(
            'otp' => $otp
        );
        $this->db->where('uid',$_SESSION['user_id']);
        $this->db->update('user',$updatedata);
        echo substr_replace($_SESSION['loginmob'],'xxxxxx',0,7);
    }
    
    function updateVehicleVisibility()
    {
        if(isset($_POST['id']))
        {
            $updatedata = array(
                'visibility' => $_POST['visibility'],
            );
            $this->db->where('Id',$_POST['id']);
            $update = $this->db->update('vehicles',$updatedata);
            echo json_encode($response);   
        }else{
            $updatedata = array(
                'visibility' => $_POST['visibility'],
            );
            $this->db->where('Id',$_SESSION['vehicleId']);
            $update = $this->db->update('vehicles',$updatedata);
            echo json_encode($response);      
        }
    }
    
    function verifyPrivacyOtp()
    {
        $updatedata = array(
            'visibility' => $_POST['visibility'],
        );
        $this->db->where('uid',$_SESSION['user_id']);
        $update = $this->db->update('user',$updatedata);
        $response['status'] = 'success';
        echo json_encode($response);   
    }
    
    function sendSpouseOtp()
    {
        $string = '0123456789';
        $string_shuffled = str_shuffle($string);
        $otp = substr($string_shuffled, 1, 4);
        $split = explode(',',$_POST['name']);
        $this->sendTextLocalOtp($split[0],$_POST['mobile'],$otp);
        $updatedata = array(
            'otp' => $otp
        );
        $this->db->where('uid',$_SESSION['user_id']);
        $this->db->update('user',$updatedata);
        echo substr_replace($_POST['mobile'],'xxxxxx',0,7);
    }
    
    function deleteSpouseDetail()
    {
        $getPreviousDetail = $this->db->query('select * from user where uid="'.$_SESSION['user_id'].'"')->result_array();
        if($getPreviousDetail[0]['otp'] == $_POST['otp'])
        {
            $updatedata = array(
                'isMarried' => 1,
                'spouseAadhar' => NULL,
                'isSpouseNameAdded' => 0
            );
            $this->db->where('uid',$_SESSION['user_id']);
            $update = $this->db->update('user',$updatedata);
            $spouseupdatedata = array(
                'isMarried' => 1,
                'spouseAadhar' => NULL,
                'isSpouseNameAdded' => 0
            );
            $this->db->where('aadhar_id',$getPreviousDetail[0]['spouseAadhar']);
            $update = $this->db->update('user',$spouseupdatedata);
            $response['status'] = 'success';
        }else{
            $response['status'] = 'error';
        }
        echo json_encode($response);
    }
    
    function verifySpouseOtp()
    {
        $getPreviousDetail = $this->db->query('select * from user where uid="'.$_SESSION['user_id'].'"')->result_array();
        if($getPreviousDetail[0]['otp'] == $_POST['otp'])
        {
            $updatedata = array(
                'isMarried' => 1,
                'spouseAadhar' => $_POST['spouseAadhar'],
                'isSpouseNameAdded' => 1
            );
            $this->db->where('uid',$_SESSION['user_id']);
            $update = $this->db->update('user',$updatedata);
            $spouseupdatedata = array(
                'isMarried' => 1,
                'spouseAadhar' => $_SESSION['aadhar_id'],
                'isSpouseNameAdded' => 1
            );
            $this->db->where('aadhar_id',$_POST['spouseAadhar']);
            $update = $this->db->update('user',$spouseupdatedata);
            $response['status'] = 'success';
        }else{
            $response['status'] = 'error';
        }
        echo json_encode($response);
    }
    
    function prostep1()
    {
        unset($_POST['_token']);
        if(isset($_POST['isSame']))
        {
            $_POST['isSame'] = 1;
        }else{
            $_POST['isSame'] = 0;
        }
        $this->db->where('uid',$_SESSION['user_id']);
        $this->db->update('user',$_POST);
        $response = array(
            'status' => 'success'
        );
        echo json_encode($response);
    }

    function comparePhoto()
    {
        $curl = curl_init();
        curl_setopt_array($curl, array(
            CURLOPT_URL => 'https://shammtech.in/api/validate-api',
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_CUSTOMREQUEST => 'GET',
            CURLOPT_HTTPHEADER => array(
                'Accept: application/json',
            ),
        ));
        $response = json_decode(curl_exec($curl),true);
        curl_close($curl);
        if($response['status'] == 'success')
        {
            $data = $_POST["image1"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId1 = 'LAP_'.time().''.rand(0,10000);
            $mainphoto1 = 'upload/lapataperson/nonkyc/'.$imageId1.'.'.$split1[1];
            file_put_contents($mainphoto1, $data);
            $data = $_POST["image2"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId2 = 'LAP_'.time().''.rand(0,10000);
            $mainphoto2 = 'upload/lapataperson/nonkyc/'.$imageId2.'.'.$split1[1];
            file_put_contents($mainphoto2, $data);
            $curl = curl_init();
            curl_setopt_array($curl, array(
              CURLOPT_URL => 'http://ec2-13-201-84-246.ap-south-1.compute.amazonaws.com/',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => 'image1='.base_url().''.$mainphoto1.'&image2='.base_url().''.$mainphoto2,
              CURLOPT_HTTPHEADER => array(
                'Content-Type: application/x-www-form-urlencoded'
              ),
            ));
            
            $response = json_decode(curl_exec($curl),true);
            unlink($mainphoto1);
            unlink($mainphoto2);
            if($response['message'] != 'Internal Server Error')
            {
                if($response['confidence'] >= $this->getSettings('ourFRTThreshold'))
                {
                    curl_close($curl);      
                    $finalresponse = array(
                        'status' => 'success',
                    );
                    echo json_encode($finalresponse);   
                }else{
                    $finalResponse = array(
                        'status' => 'error',
                        'message' => 'Face not matching with first photo'
                    );
                    echo json_encode($finalResponse);   
                    die();    
                }
            }else
            {
                $finalResponse = array(
                    'status' => 'error',
                    'message' => 'Face not matching with first photo'
                );
                echo json_encode($finalResponse);   
                die();
            }
        }else{
            $finalResponse = array(
                'status' => 'error',
                'message' => $response['message']
            );
            echo json_encode($finalResponse);   
            die();       
        }
    }
    
    function prostep3()
    {
        $curl = curl_init();
        curl_setopt_array($curl, array(
            CURLOPT_URL => 'https://shammtech.in/api/validate-api',
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_CUSTOMREQUEST => 'GET',
            CURLOPT_HTTPHEADER => array(
                'Accept: application/json',
            ),
        ));
        $response = json_decode(curl_exec($curl),true);
        curl_close($curl);
        if($response['status'] == 'success')
        {
            $index = $_POST['index'];
            if($_POST['facematch'.$index] != '')
            {
                unset($_POST['_token']);
                unlink($_POST['oldphoto'.$index]);
                
                $data = $_POST["facematch".$index];
        
                $image_array_1 = explode(";", $data);
                $split1 = explode('data:image/',$image_array_1[0]);
                $image_array_2 = explode(",", $image_array_1[1]);
                
                $data = base64_decode($image_array_2[1]);
                
                $imageId = 'GEN_'.time().''.rand(0,10000);
                $newImagePath = 'upload/profile/facematch/'.$imageId.'.'.$split1[1];
                file_put_contents($newImagePath, $data);
                $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                $curl = curl_init();
                curl_setopt_array($curl, array(
                  CURLOPT_URL => 'http://ec2-13-201-84-246.ap-south-1.compute.amazonaws.com/',
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => '',
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 0,
                  CURLOPT_FOLLOWLOCATION => true,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => 'POST',
                  CURLOPT_POSTFIELDS => 'image1='.base_url().''.$newImagePath.'&image2='.base_url().''.$getUserDetail[0]['aadharphoto'],
                  CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/x-www-form-urlencoded'
                  ),
                ));
                
                $response = json_decode(curl_exec($curl),true);
                if($response['message'] != 'Internal Server Error')
                {
                    if($response['confidence'] >= $this->getSettings('ourFRTThreshold'))
                    {
                        curl_close($curl);      
                        $curl = curl_init();
                        $postdata = json_encode(array(
                            "collection_id" => "shivaguptabcakhoji4",
                            "image_id" => $imageId,
                            "image_url" => base_url().''.$newImagePath
                        ));
                        curl_setopt_array($curl, array(
                          CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
                          CURLOPT_RETURNTRANSFER => true,
                          CURLOPT_ENCODING => '',
                          CURLOPT_MAXREDIRS => 10,
                          CURLOPT_TIMEOUT => 0,
                          CURLOPT_FOLLOWLOCATION => true,
                          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                          CURLOPT_CUSTOMREQUEST => 'POST',
                          CURLOPT_POSTFIELDS => $postdata,
                          CURLOPT_HTTPHEADER => array(
                            'Content-Type: application/json',
                            'Authorization: '.$this->getSettings('facematchtoken')
                          ),
                        ));
                        $response = json_decode(curl_exec($curl),true);
                        curl_close($curl);
                        if(count($response) > 0)
                        {
                            if($response['status'] == 200)
                            {
                                if($response['face_count'] == 1)
                                {
                                    if($index == '')
                                    {
                                        $updatedata = array(
                                            'facematchphoto' => $newImagePath,
                                            'imageId' => $imageId,
                                            'awsEventName' => 'All'
                                        );
                                    }else if($index == 1)
                                    {
                                        $updatedata = array(
                                            'facematchphoto1' => $newImagePath,
                                            'imageId1' => $imageId,
                                            'awsEventName' => 'All'
                                        );
                                    }else if($index == 2)
                                    {
                                        $updatedata = array(
                                            'facematchphoto2' => $newImagePath,
                                            'imageId2' => $imageId,
                                            'awsEventName' => 'All'
                                        );
                                    }
                                    $this->db->where('uid',$_SESSION['user_id']);
                                    $this->db->update('user',$updatedata);
                                    $finalresponse = array(
                                        'status' => 'success',
                                    );
                                    echo json_encode($finalresponse);   
                                }else{
                                    if($response['face_count'] > 1)
                                    {
                                        $finalresponse = array(
                                            'status' => 'error',
                                            'message' => 'Multiple faces detected in image'
                                        );
                                        unset($newImagePath);
                                        echo json_encode($finalresponse);
                                    }else{
                                        $finalresponse = array(
                                            'status' => 'error',
                                            'message' => 'No face found in the image'
                                        );
                                        unset($newImagePath);
                                        echo json_encode($finalresponse);
                                    }
                                }
                            }else{
                                $finalresponse = array(
                                    'status' => 'error',
                                    'message' => 'Please upload valid face match image'
                                );
                                unset($newImagePath);
                                echo json_encode($finalresponse);
                            }
                        }else{
                            $finalresponse = array(
                                'status' => 'error',
                                'message' => 'Please upload valid face match image'
                            );
                            unset($newImagePath);
                            echo json_encode($finalresponse);
                        }
                    }else{
                        $finalResponse = array(
                            'status' => 'error',
                            'message' => 'Face not matching with aadhar card photo'
                        );
                        echo json_encode($finalResponse);   
                        die();    
                    }
                }else
                {
                    $finalResponse = array(
                        'status' => 'error',
                        'message' => 'Face not matching with aadhar card photo'
                    );
                    echo json_encode($finalResponse);   
                    die();
                }
            }
        }else{
            $finalResponse = array(
                'status' => 'error',
                'message' => $response['message']
            );
            echo json_encode($finalResponse);   
            die();       
        }
    }
    
    function prostep4()
    {
        if(count($_FILES['photos']['name']) > 0)
        {
            if($_FILES['photos']['name'][0] != '')
            {
                for($i=0;$i<count($_FILES['photos']['name']);$i++)
                {
                    $filename = $_FILES["photos"]["name"][$i];
                    $ext = end((explode(".", $filename)));
                    $filename = 'upload/profile/'.time().''.rand(0,10000).'.'.$ext;
                    move_uploaded_file($_FILES['photos']['tmp_name'][$i], $filename);
                    switch ($ext) {
                        case 'gif': //IMAGETYPE_GIF
                            $image = imagecreatefromgif($filename);
                            break;
                        case 'jpg': //IMAGETYPE_JPEG
                            $image = imagecreatefromjpeg($filename);
                            break;
                        case 'jpeg': //IMAGETYPE_JPEG
                            $image = imagecreatefromjpeg($filename);
                            break;
                        case 'png': //IMAGETYPE_PNG
                            $image = imagecreatefrompng($filename);
                            break;
                        case 'bmp': // IMAGETYPE_BMP
                            $image = imagecreatefrombmp($filename);
                            break;
                        case 'xbm': //IMAGETYPE_XBM
                            $image = imagecreatefromxbm($filename);
                            break;
                    }
                    $newImagePath = 'upload/profile/'.time().''.rand(0,10000).'.webp';
                    imagewebp($image,$newImagePath);
                    imagedestroy($image);
                    $insertdata = array(
                        'photourl' => $newImagePath,
                        'userId' => $_SESSION['user_id']
                    );
                    $this->db->insert('userphotos',$insertdata);
                    unlink($filename);
                }   
            }
        }   
    }
    
    function personstep1()
    {
        $aadhar = '';
        $name = '';
        $getIfAlready = $this->db->query('select * from user where aadhar_id='.$_POST['missingaadhar'])->result_array();
        if(count($getIfAlready) > 0)
        {
            $aadhar = $getIfAlready[0]['aadhar_id'];
            $name = $getIfAlready[0]['aadharname'];
            $txnId = $this->getGUIDnoHash(10);
            $insertdata = array(
                'missingId' => $txnId,
                'userId' => $_SESSION['user_id'],
                'missingaadhar' => $_POST['missingaadhar'],
                'missingname' => $_POST['missingName'],
                'missingdob' => $getIfAlready[0]['dob'],
                'missinggender' => $getIfAlready[0]['gender'],
                'isMissingRegistered' => (isset($_POST['isRegistered']) ? 1 : 0)
            );
            $insert = $this->db->insert('missingperson',$insertdata);
            if($insert)
            {
                $_SESSION['missingNewId'] = $txnId;
                $response = array(
                    'status' => 'success',
                    'message' => 'Please provide some additional details'
                );
                echo json_encode($response);
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }else{
            $response = array(
                'status' => 'error',
                'message'=> 'No user detail found in our records'
            );
            echo json_encode($response);
        }
    }
    
    function missing_details()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['title'] = 'Missing Details';
            $page_data['page_name'] = 'missing_details';
            $this->load->view('nonkyc/index', $page_data);
        }else 
        {
            redirect('login','refresh');
        }
    }

    function khoya_paya_box()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['title'] = 'Upload General / Khoya – Paya Details';
            $page_data['page_name'] = 'khoya_paya_box';
            $this->load->view('nonkyc/index', $page_data);
        }else 
        {
            redirect('login','refresh');
        }
    }

    function createNewAccount()
    {
        $curl = curl_init();
        curl_setopt_array($curl, [
          CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/boson/submit-otp",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "POST",
          CURLOPT_POSTFIELDS => '{"otp": '.$_POST['otp'].'}',
          CURLOPT_HTTPHEADER => [
            "Content-Type: application/json",
            "X-API-Key: ".$this->getSettings(),
            "X-Auth-Type: API-Key",
            "X-Transaction-ID: ".$_SESSION['transactionId']
          ]
        ]);

        $response = JSON_decode(curl_exec($curl),true);
        if($response['status'] == 200)
        {
            if($response['data']['code'] == 1002)
            {
                $aadharphoto = '';
                if(isset($response['data']['aadhaar_data']['photo_base64']))
                {
                    $decoded=base64_decode($response['data']['aadhaar_data']['photo_base64']);
                    $aadharphoto = 'upload/aadhar/'.time().'.JPG';
                    file_put_contents($aadharphoto,$decoded);
                }
                $getPreviousDetail = $this->db->query('select * from user where aadhar_id="'.$_SESSION['aadharId'].'"')->result_array();
                $username = '';
                if(isset($response['data']['aadhaar_data']['name']))
                {
                    $explode = explode(' ',$response['data']['aadhaar_data']['name']);
                    $username = strtolower($explode[0].''.$getPreviousDetail[0]['uid']);
                }
                $updatedata = array(
                    'final_mobile_verification' => 'success',
                    'username' => (isset($response['data']['aadhaar_data']['name']) ? ($username) : NULL),
                    'dob' => (isset($response['data']['aadhaar_data']['date_of_birth']) ? $response['data']['aadhaar_data']['date_of_birth'] : NULL),
                    'gender' => (isset($response['data']['aadhaar_data']['gender']) ? $response['data']['aadhaar_data']['gender'] : NULL),
                    'mobile_hash' => (isset($response['data']['aadhaar_data']['mobile']) ? $response['data']['aadhaar_data']['mobile'] : NULL),
                    'aadharname' => (isset($response['data']['aadhaar_data']['name']) ? $response['data']['aadhaar_data']['name'] : NULL),
                    'careof' => (isset($response['data']['aadhaar_data']['care_of']) ? $response['data']['aadhaar_data']['care_of'] : NULL),
                    'country' => (isset($response['data']['aadhaar_data']['country']) ? $response['data']['aadhaar_data']['country'] : NULL),
                    'district' => (isset($response['data']['aadhaar_data']['district']) ? $response['data']['aadhaar_data']['district'] : NULL),
                    'landmark' => (isset($response['data']['aadhaar_data']['landmark']) ? $response['data']['aadhaar_data']['landmark'] : NULL),
                    'locality' => (isset($response['data']['aadhaar_data']['locality']) ? $response['data']['aadhaar_data']['locality'] : NULL),
                    'pincode' => (isset($response['data']['aadhaar_data']['pincode']) ? $response['data']['aadhaar_data']['pincode'] : NULL),
                    'state' => (isset($response['data']['aadhaar_data']['state']) ? $response['data']['aadhaar_data']['state'] : NULL),
                    'vtc' => (isset($response['data']['aadhaar_data']['vtc_name']) ? $response['data']['aadhaar_data']['vtc_name'] : NULL),
                    'aadharphoto' => $aadharphoto
                );
                $this->db->where('aadhar_id',$_SESSION['aadharId']);
                if($this->db->update('user',$updatedata))
                {
                    $getPreviousDetail = $this->db->query('select * from user where aadhar_id="'.$_SESSION['aadharId'].'"')->result_array();
                    $this->session->set_userdata('user_login', 'yes');
                    $this->session->set_userdata('loginmob',$getPreviousDetail[0]['registration_mobile']);
                    $this->session->set_userdata('user_id', $getPreviousDetail[0]['uid']);
                    $this->session->set_userdata('aadhar_id', $getPreviousDetail[0]['aadhar_id']);
                    $this->session->set_userdata('username', $getPreviousDetail[0]['username']);
                    $this->session->set_userdata('aadharName', $getPreviousDetail[0]['aadharname']);
                    $this->session->set_userdata('login_type', 'user');
                    $finalresponse = array(
                        'status' => 'success',
                        'aadharname' => $response['data']['aadhaar_data']['name'],
                        'username' => $username,
                    );
                }else{
                    $finalresponse = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                }
                echo json_encode($finalresponse);
            }else{
                $finalresponse = array(
                    'status' => 'error',
                    'message' => $response['data']['message'],
                );
                echo json_encode($finalresponse);
            }

        }else{
            $finalresponse = array(
                'status' => 'error',
                'message' => $response['error']['message'],
            );
            echo json_encode($finalresponse);
        }   
    }
    
    function showVehicleRewardsAccordingly()
    {
        $missingvehicle = $this->db->query('select * from missingvehicle where Id='.$_POST['Id'])->result_array();
        $response['missingdate'] = date('d-m-Y',strtotime($missingvehicle[0]['missingdate']));
        $response['firdate'] = date('d-m-Y',strtotime($missingvehicle[0]['firdate']));
        $response['firthanaaddress'] = (($missingvehicle[0]['firpolicethananame'] != NULL ? ($missingvehicle[0]['firpolicethananame'].',') : '')) .''. (($missingvehicle[0]['firstate'] != NULL ? ($missingvehicle[0]['firstate'].',') : '')) .''. (($missingvehicle[0]['firdistrict'] != NULL ? ($missingvehicle[0]['firdistrict'].',') : '')) .''. (($missingvehicle[0]['fircity'] != NULL ? ($missingvehicle[0]['fircity'].',') : '')) .''. (($missingvehicle[0]['firvillage'] != NULL ? ($missingvehicle[0]['firvillage']) : ''));
        $response['images'] = array();
        $decode = json_decode($missingvehicle[0]['photos'],true);
        if(count($decode) > 0)
        {
            foreach($decode as $k=>$v)
            {
                array_push($response['images'],(base_url().''.$v));    
            }
        }else{
            $getLatestUserPhotos = $this->db->query('select * from missingvehiclephotos where missingId='.$missingvehicle[0]['Id'])->result_array();
            foreach($getLatestUserPhotos as $k=>$v)
            {
                array_push($response['images'],(base_url().''.$v['photourl']));    
            }
        }
        $response['personname'] = $missingvehicle[0]['ownerName'];
        $response['careof'] = $missingvehicle[0]['fatherName'];
        $response['address'] = '';
        $response['otherdetail'] = $missingperson[0]['otherDetail'];
        $response['contact'] = $missingperson[0]['mobile1'];
        echo json_encode($response);
    }
    
    function showRewardsAccordingly()
    {
        $missingperson = $this->db->query('select * from missingperson where Id='.$_POST['Id'])->result_array();
        $response['missingdate'] = date('d-m-Y',strtotime($missingperson[0]['dateCreated']));
        $response['firdate'] = date('d-m-Y',strtotime($missingperson[0]['firdate']));
        $response['firthanaaddress'] = (($missingperson[0]['firpolicethananame'] != NULL ? ($missingperson[0]['firpolicethananame'].',') : '')) .''. (($missingperson[0]['firstate'] != NULL ? ($missingperson[0]['firstate'].',') : '')) .''. (($missingperson[0]['firdistrict'] != NULL ? ($missingperson[0]['firdistrict'].',') : '')) .''. (($missingperson[0]['fircity'] != NULL ? ($missingperson[0]['fircity'].',') : '')) .''. (($missingperson[0]['firvillage'] != NULL ? ($missingperson[0]['firvillage']) : ''));
        $response['images'] = array();
        $decode = json_decode($missingperson[0]['photos'],true);
        if(count($decode) > 0)
        {
            foreach($decode as $k=>$v)
            {
                array_push($response['images'],(base_url().''.$v));    
            }
        }else{
            $getLatestUserPhotos = $this->db->query('select * from missingpersonphotos where missingId='.$missingperson[0]['Id'])->result_array();
            foreach($getLatestUserPhotos as $k=>$v)
            {
                array_push($response['images'],(base_url().''.$v['photourl']));    
            }
        }
        $getMissingPersonDetail = $this->db->query('select * from user where aadhar_id="'.$missingperson[0]['missingaadhar'].'"')->result_array();
        if(count($getMissingPersonDetail) > 0)
        {
            $response['personname'] = $getMissingPersonDetail[0]['aadharname'];
            $from=new DateTime(date('Y-m-d'));
            $to   = new DateTime($getMissingPersonDetail[0]['dob']);
            $response['age'] = ($from->diff($to)->y).'- Years';
            $response['gender'] = $getMissingPersonDetail[0]['gender'];
            $response['dob'] = $getMissingPersonDetail[0]['dob'];
            $getUserProperty = $this->db->query('select * from userproperty where personId='.$missingperson[0]['Id'])->result_array();
            $response['userproperty'] = '';
            if(count($getUserProperty) > 0)
            {
                foreach($getUserProperty as $k=>$v)
                {
                    $getCategoryName = $this->db->query('select * from categories where Id='.$v['userCategory'])->result_array();
                    $getSubCategoryName = $this->db->query('select * from subcategories where Id='.$v['userSubCategory'])->result_array();
                    $response['userproperty'] .= '<div class="row mt-2 align-items-center"><div class="col-md-6 col-sm-12 col-6 col-lg-6 text-end"><h6 style="color: black;font-size:0.9em;"><b>'.$getCategoryName[0]['englishCategoryName'].' : </b></h6></div><div class="col-md-6 col-sm-12 col-lg-6 col-6 text-left"><h6 style="color: black;">'.$getSubCategoryName[0]['englishSubCategoryName'].'</h6></div></div><hr style="margin-bottom: 0.4rem;margin-top: 0.4rem;">'; 
                } 
            }
            $response['careof'] = $getMissingPersonDetail[0]['careof'];
            $response['address'] = '';
            if($getMissingPersonDetail[0]['curaddress'] == NULL)
            {
                $response['address'] = (($getMissingPersonDetail[0]['landmark'] != '') ? $getMissingPersonDetail[0]['landmark'].',' : '').''.(($getMissingPersonDetail[0]['locality'] != '') ? $getMissingPersonDetail[0]['locality'] : ''); 
            }else{
                $response['address'] = (($getMissingPersonDetail[0]['curaddress'] != '') ? $getMissingPersonDetail[0]['curaddress'].',' : '').''.(($getMissingPersonDetail[0]['curcity'] != '') ? $getMissingPersonDetail[0]['curcity'].',' : '').''.(($getMissingPersonDetail[0]['curdistrict'] != '') ? $getMissingPersonDetail[0]['curdistrict'].',' : '').''.(($getMissingPersonDetail[0]['curstate'] != '') ? $getMissingPersonDetail[0]['curstate'].',' : '');
            }
            $response['otherdetail'] = $missingperson[0]['otherDetail'];
            $response['contact'] = $missingperson[0]['mobile1'];
        }else{
            $getMissingFullDetails = $this->db->query('select * from missingpersondetail where missingId='.$missingperson[0]['Id'])->result_array();
            $response['personname'] = $missingperson[0]['missingname'];
            $from=new DateTime(date('Y-m-d'));
            $to   = new DateTime($getMissingFullDetails[0]['dob']);
            $response['age'] = ($from->diff($to)->y).'- Years';
            $response['gender'] = $getMissingFullDetails[0]['gender'];
            $response['dob'] = $getMissingFullDetails[0]['dob'];
            $getUserProperty = $this->db->query('select * from userproperty where personId='.$missingperson[0]['Id'])->result_array();
            $response['userproperty'] = '';
            if(count($getUserProperty) > 0)
            {
                foreach($getUserProperty as $k=>$v)
                {
                    $getCategoryName = $this->db->query('select * from categories where Id='.$v['userCategory'])->result_array();
                    $getSubCategoryName = $this->db->query('select * from subcategories where Id='.$v['userSubCategory'])->result_array();
                    $response['userproperty'] .= '<div class="row mt-2 align-items-center"><div class="col-md-6 col-sm-12 col-6 col-lg-6 text-end"><h6 style="color: black;font-size:0.9em;"><b>'.$getCategoryName[0]['englishCategoryName'].' : </b></h6></div><div class="col-md-6 col-sm-12 col-lg-6 col-6 text-left"><h6 style="color: black;">'.$getSubCategoryName[0]['englishSubCategoryName'].'</h6></div></div><hr style="margin-bottom: 0.4rem;margin-top: 0.4rem;">'; 
                } 
            }
            $response['careof'] = $getMissingFullDetails[0]['fatherName'];
            $response['address'] = '';
            $response['otherdetail'] = $missingperson[0]['otherDetail'];
            $response['contact'] = $missingperson[0]['mobile1'];
        }
        echo json_encode($response);
    }

    function createAccount()
    {
        $curl = curl_init();
        curl_setopt_array($curl, [
            CURLOPT_URL => "https://aadhaar-verification-okyc.p.rapidapi.com/api/v1/VerifyOtpAndGetAadhaar",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_FOLLOWLOCATION => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => "{\n\t\"session_id\": \"".$_SESSION['kycId']."\",\n\t\"otp\": \"".$_POST['otp']."\",\n\t\"zip_code\": \"1212\",\n\t\"include_zip_file\": false,\n\t\"include_xml_file\": false\n}",
            CURLOPT_HTTPHEADER => [
                "X-RapidAPI-Host: aadhaar-verification-okyc.p.rapidapi.com",
                "X-RapidAPI-Key: ed9cc705c4mshb8e23e5998d64d2p18f66fjsn9e746ce95eaf",
                "content-type: text/plain"
            ],
        ]);

        $response = JSON_decode(curl_exec($curl),true);
        if($response['status']['code'] == "2000")
        {
            $aadharphoto = '';
            if(isset($response['data']['details']['photo']))
            {
                $decoded=base64_decode($response['data']['details']['photo']);
                $aadharphoto = 'upload/aadhar/'.time().'.JPG';
                file_put_contents($aadharphoto,$decoded);
            }
            $updatedata = array(
                'dob' => (isset($response['data']['details']['poi']['dob']) ? $response['data']['details']['poi']['dob'] : NULL),
                'gender' => (isset($response['data']['details']['poi']['gender']) ? $response['data']['details']['poi']['gender'] : NULL),
                'mobile_hash' => (isset($response['data']['details']['poi']['mobile_hash']) ? $response['data']['details']['poi']['mobile_hash'] : NULL),
                'aadharname' => (isset($response['data']['details']['poi']['name']) ? $response['data']['details']['poi']['name'] : NULL),
                'careof' => (isset($response['data']['details']['poa']['careof']) ? $response['data']['details']['poa']['careof'] : NULL),
                'country' => (isset($response['data']['details']['poa']['country']) ? $response['data']['details']['poa']['country'] : NULL),
                'district' => (isset($response['data']['details']['poa']['dist']) ? $response['data']['details']['poa']['dist'] : NULL),
                'landmark' => (isset($response['data']['details']['poa']['landmark']) ? $response['data']['details']['poa']['landmark'] : NULL),
                'locality' => (isset($response['data']['details']['poa']['locality']) ? $response['data']['details']['poa']['locality'] : NULL),
                'pincode' => (isset($response['data']['details']['poa']['pincode']) ? $response['data']['details']['poa']['pincode'] : NULL),
                'state' => (isset($response['data']['details']['poa']['state']) ? $response['data']['details']['poa']['state'] : NULL),
                'vtc' => (isset($response['data']['details']['poa']['vtc']) ? $response['data']['details']['poa']['vtc'] : NULL),
                'aadharphoto' => $aadharphoto
            );
            $this->db->where('aadhar_id',$_SESSION['aadharId']);
            if($this->db->update('user',$updatedata))
            {
                $finalresponse = array(
                    'status' => 'success'
                );
            }else{
                $finalresponse = array(
                    'status' => 'error'
                );
            }
            echo json_encode($finalresponse);

        }else{
            $finalresponse = array(
                'status' => 'error'
            );
            echo json_encode($finalresponse);
        }
    }

    function generateCaptcha()
    {
        $curl = curl_init();
        curl_setopt_array($curl, [
            CURLOPT_URL => "https://aadhaar-verification-okyc.p.rapidapi.com/api/v1/GetCaptcha",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_FOLLOWLOCATION => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "GET",
            CURLOPT_HTTPHEADER => [
                "X-RapidAPI-Host: aadhaar-verification-okyc.p.rapidapi.com",
                "X-RapidAPI-Key: ed9cc705c4mshb8e23e5998d64d2p18f66fjsn9e746ce95eaf"
            ],
        ]);

        $response = json_decode(curl_exec($curl),true);
        $err = curl_error($curl);

        curl_close($curl);
        if($response['status']['message'] == 'Captcha fetched successfully.')
        {
            $_SESSION['kycId'] = $response['data']['session_id'];
            $decoded=base64_decode($response['data']['captcha_image']);
            $filename = 'upload/captcha/'.time().'.JPG';
            file_put_contents($filename,$decoded);
            $finalresponse = array(
                'status' => true,
                'filename' => $filename
            );
            return $finalresponse;
        }else{
            $finalresponse = array(
                'status' => false
            );
            return $finalresponse;
        }
    }

    function verifyCaptcha()
    {
        $curl = curl_init();
        curl_setopt_array($curl, [
            CURLOPT_URL => "https://aadhaar-verification-okyc.p.rapidapi.com/api/v1/VerifyCaptcha",
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_FOLLOWLOCATION => true,
            CURLOPT_ENCODING => "",
            CURLOPT_MAXREDIRS => 10,
            CURLOPT_TIMEOUT => 30,
            CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
            CURLOPT_CUSTOMREQUEST => "POST",
            CURLOPT_POSTFIELDS => "{
        \t\"session_id\": \"".$_SESSION['kycId']."\",
        \t\"uid_no\": \"".$_POST['aadharNumber']."\",
        \t\"security_code\": \"".$_POST['captcha']."\"
        }",
            CURLOPT_HTTPHEADER => [
                "X-RapidAPI-Host: aadhaar-verification-okyc.p.rapidapi.com",
                "X-RapidAPI-Key: ed9cc705c4mshb8e23e5998d64d2p18f66fjsn9e746ce95eaf",
                "content-type: text/plain"
            ],
        ]);

        $response = json_decode(curl_exec($curl),true);
        $err = curl_error($curl);

        curl_close($curl);
        if($response['status']['code'] == "2000")
        {
            $finalresponse = array(
                'status' => 'success',
                'message' => 'Otp has been sent to your registered mobile number'
            );
        }else
        {
            $finalresponse = array(
                'status' => 'error'
            );
        }
        echo json_encode($finalresponse);
    }

    function checkUsername()
    {
        $getIfAlreadyUsername = $this->db->query('select * from user where username="'.$_POST['value'].'" and aadhar_id !="'.$_SESSION['aadharId'].'"')->result_array();
        if(count($getIfAlreadyUsername) > 0)
        {
            $response = array(
                'status' => 'error',
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'success',
            );
            echo json_encode($response);
        }
    }

    function enterOtp($para = '')
    {
        if($para == '')
        {
            if(isset($_SESSION['landingMob']))
            {
                $page_data['title'] = 'OTP';
                $page_data['control'] = 'user';
                $this->load->view('NonKyc/common/header',$page_data); 
                $this->load->view('NonKyc/enterOtp'); 
                $this->load->view('NonKyc/common/footer'); 
            }else{
                redirect(base_url().'login','refresh');
            }
        }else{
            $getPreviousDetail = $this->db->query('select * from user where aadhar_id="'.$_SESSION['aadharId'].'"')->result_array();
            if($getPreviousDetail[0]['otp'] == $_POST['otp'])
            {
                $this->db->where('uid',$getPreviousDetail[0]['uid']);
                $update = $this->db->update('user',array('final_mobile_verification'=>'success'));
                if($update)
                {
                    $this->session->set_userdata('user_login', 'yes');
                    $this->session->set_userdata('user_id', $getPreviousDetail[0]['uid']);
                    $this->session->set_userdata('aadhar_id', $getPreviousDetail[0]['aadhar_id']);
                    $this->session->set_userdata('username', $getPreviousDetail[0]['username']);
                    $this->session->set_userdata('login_type', 'user');
                    $response = array(
                        'status' => 'success',
                        'message' => 'Id Created Successfully',
                    );
                    echo json_encode($response);    
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong',
                    );
                    echo json_encode($response);    
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Otp Invalid',
                );
                echo json_encode($response);
            }
        }
    }
    
    function sendSearchFilterOtp()
    {
        // $otp = '1234';
        if(isset($_SESSION['filterId']))
        {
            $string = '0123456789';
            $string_shuffled = str_shuffle($string);
            $otp = substr($string_shuffled, 1, 4);
            $this->sendTextLocalOtp($_POST['mobile'],$_POST['mobile'],$otp);
            $updateData = array(
                'mobile' => $_POST['mobile'],
                'otp' => $otp
            );
            $this->db->where('Id',$_SESSION['filterId']);
            $update = $this->db->update('searchFilterLogs',$updateData);    
        }else{
            $string = '0123456789';
            $string_shuffled = str_shuffle($string);
            $otp = substr($string_shuffled, 1, 4);
            $this->sendTextLocalOtp($_POST['mobile'],$_POST['mobile'],$otp);
            $insertData = array(
                'mobile' => $_POST['mobile'],
                'otp' => $otp
            );
            $insert = $this->db->insert('searchFilterLogs',$insertData);
            $_SESSION['filterId'] = $this->db->insert_id();
        }
    }
    
    function getVehicleNumber()
    {
        $getIfAlready = $this->db->query('select * from vehicles where isdeleted=0 and paymentStatus=1 and vehicleType="'.$_POST['type'].'" and userId='.$_SESSION['user_id'])->result_array();
        if(count($getIfAlready) > 0)
        {
            $response = array(
                'status' => 'success',
                'data' => $getIfAlready
            );
        }else{
            $response = array(
                'status' => 'error'
            );
        }
        echo json_encode($response);
    }

    function sendLoginOtp()
    {
        if($_POST['type'] == 'aadhar')
        {
            $getIfAlready = $this->db->query('select * from user where aadhar_id="'.$_POST['typeval'].'"')->result_array();
        }else{
            $getIfAlready = $this->db->query('select * from user where username="'.$_POST['typeval'].'"')->result_array();
        }
        if(count($getIfAlready) > 0)
        {
            $string = '0123456789';
            $string_shuffled = str_shuffle($string);
            $otp = substr($string_shuffled, 1, 4);
            $this->sendTextLocalOtp($getIfAlready[0]['aadharname'],$_POST['mobile'],$otp);
            // $otp = '1234';
            $update = $this->db->query('update user set otp='.$otp.' where uid='.$getIfAlready[0]['uid']);
            if($update)
            {
                $response = array(
                    'status' => 'success'
                );
            }else{
                $response = array(
                    'status' => 'error'
                );
            }
            echo json_encode($response);
        }
    }

    function getMobileDetails()
    {
        if($_POST['type'] == 'aadhar')
        {
            $getIfAlready = $this->db->query('select * from user where aadhar_id="'.$_POST['value'].'"')->result_array();
        }else{
            $getIfAlready = $this->db->query('select * from user where username="'.$_POST['value'].'"')->result_array();
        }
        if(count($getIfAlready) > 0)
        {
            if($getIfAlready[0]['alternate_mobile1'] != NULL && $getIfAlready[0]['alternate_mobile2'] == NULL)
            {
                $response = array(
                    'status' => 'success',
                    'isAlternate' => true,
                    'isAlternate1' => true,
                    'isAlternate2' => false,
                    'data' => array(
                        'mobile1' => $getIfAlready[0]['registration_mobile'],
                        'mobile2' => $getIfAlready[0]['alternate_mobile1'],
                        'vismobile1' => substr_replace($getIfAlready[0]['registration_mobile'],'xxxxxx',0,7),
                        'vismobile2' => substr_replace($getIfAlready[0]['alternate_mobile1'],'xxxxxx',0,7),
                    )
                );
                echo json_encode($response);
            }else if($getIfAlready[0]['alternate_mobile2'] != NULL && $getIfAlready[0]['alternate_mobile1'] == NULL)
            {
                $response = array(
                    'status' => 'success',
                    'isAlternate' => true,
                    'isAlternate1' => false,
                    'isAlternate2' => true,
                    'data' => array(
                        'mobile1' => $getIfAlready[0]['registration_mobile'],
                        'mobile2' => $getIfAlready[0]['alternate_mobile2'],
                        'vismobile1' => substr_replace($getIfAlready[0]['registration_mobile'],'xxxxxx',0,7),
                        'vismobile2' => substr_replace($getIfAlready[0]['alternate_mobile2'],'xxxxxx',0,7)
                    )
                );
                echo json_encode($response);
            }else if($getIfAlready[0]['alternate_mobile2'] != NULL && $getIfAlready[0]['alternate_mobile1'] != NULL)
            {
                $response = array(
                    'status' => 'success',
                    'isAlternate' => true,
                    'isAlternate1' => true,
                    'isAlternate2' => true,
                    'data' => array(
                        'mobile1' => $getIfAlready[0]['registration_mobile'],
                        'mobile2' => $getIfAlready[0]['alternate_mobile1'],
                        'mobile3' => $getIfAlready[0]['alternate_mobile2'],
                        'vismobile1' => substr_replace($getIfAlready[0]['registration_mobile'],'xxxxxx',0,7),
                        'vismobile2' => substr_replace($getIfAlready[0]['alternate_mobile1'],'xxxxxx',0,7),
                        'vismobile3' => substr_replace($getIfAlready[0]['alternate_mobile2'],'xxxxxx',0,7)
                    )
                );
                echo json_encode($response);
            }
            else{
                $response = array(
                    'status' => 'success',
                    'isAlternate' => false,
                    'data' => array(
                        'mobile1' => $getIfAlready[0]['registration_mobile'],
                        'vismobile1' => substr_replace($getIfAlready[0]['registration_mobile'],'xxxxxx',0,7),
                    )
                );
                echo json_encode($response);
            }
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Invalid Credentials'
            );
            echo json_encode($response);
        }
    }

    function resendRegisterOtp()
    {
        $curl = curl_init();
        curl_setopt_array($curl, [
          CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/boson/generate-otp",
          CURLOPT_RETURNTRANSFER => true,
          CURLOPT_ENCODING => "",
          CURLOPT_MAXREDIRS => 10,
          CURLOPT_TIMEOUT => 30,
          CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
          CURLOPT_CUSTOMREQUEST => "POST",
          CURLOPT_POSTFIELDS => '{"aadhaar_number": '.$_POST['aadharNumber'].',  "consent": "Y"}',
          CURLOPT_HTTPHEADER => [
            "Content-Type: application/json",
            "X-API-Key: ".$this->getSettings(),
            "X-Auth-Type: API-Key"
          ],
        ]);

        $response = json_decode(curl_exec($curl),true);
        if($response['status'] == 200)
        {
            $_SESSION['transactionId'] = $response['data']['transaction_id'];
            $response = array(
                'status' => 'success',
                'message' => $response['data']['message']
            );
            echo json_encode($response);
        }else
        {
            $response = array(
                'status' => 'error',
                'message' => $response['error']['message']
            );
            echo json_encode($response);
        }
    }

    public function newregister($para1 = ''){
      if($para1 == 'do_register'){
        unset($_POST['_token']);
        $aadhar = $this->input->post('aadhar_id');
        $credential = array('aadhar_id' => $aadhar);
        $query = $this->db->get_where('user', $credential);
        if ($query->num_rows() > 0) {
            $row = $query->row();
            if($row->final_mobile_verification == 'success')
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Already Verified'
                );
                echo json_encode($response);
            }else
            {
                $curl = curl_init();
                curl_setopt_array($curl, [
                  CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/boson/generate-otp",
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => "",
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 30,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => "POST",
                  CURLOPT_POSTFIELDS => '{"aadhaar_number": '.$_POST['aadhar_id'].',  "consent": "Y"}',
                  CURLOPT_HTTPHEADER => [
                    "Content-Type: application/json",
                    "X-API-Key: ".$this->getSettings(),
                    "X-Auth-Type: API-Key"
                  ],
                ]);

                $response = json_decode(curl_exec($curl),true);
                if($response['status'] == 200)
                {
                    $this->db->where('uid',$row->uid);
                    $this->db->update('user',array('registration_mobile' => $_POST['registration_mobile']));
                    $_SESSION['aadharId'] = $_POST['aadhar_id'];
                    $_SESSION['mob'] = $_POST['registration_mobile'];
                    $_SESSION['transactionId'] = $response['data']['transaction_id'];
                    $response = array(
                        'status' => 'success',
                        'message' => $response['data']['message']
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => $response['error']['message']
                    );
                    echo json_encode($response);
                }
            }
        } else {
            $curl = curl_init();
            $postfields = json_encode(array(
                'aadhaar_number' => $_POST['aadhar_id'],
                'consent' => 'Y'
            ));
            curl_setopt_array($curl, [
              CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/boson/generate-otp",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => '{"aadhaar_number": '.$_POST['aadhar_id'].',  "consent": "Y"}',
              CURLOPT_HTTPHEADER => [
                "Content-Type: application/json",
                "X-API-Key: ".$this->getSettings(),
                "X-Auth-Type: API-Key"
              ],
            ]);

            $response = json_decode(curl_exec($curl),true);
            if($response['status'] == 200)
            {
                unset($_POST['consent']);
                $insert = $this->db->insert('user',$_POST) ;
                $_SESSION['aadharId'] = $_POST['aadhar_id'];
                $_SESSION['mob'] = $_POST['registration_mobile'];
                $_SESSION['transactionId'] = $response['data']['transaction_id'];
                $response = array(
                    'status' => 'success',
                    'message' => $response['data']['message']
                );
                echo json_encode($response);
            }else
            {
                $response = array(
                    'status' => 'error',
                    'message' => $response['error']['message']
                );
                echo json_encode($response);
            }
        }
      } else {
          $page_data['lasturl'] = basename($_SERVER['HTTP_REFERER']);
        $page_data['title'] = 'Register';
        $page_data['control'] = 'user';
        $this->load->view('NonKyc/common/header',$page_data); 
        $this->load->view('NonKyc/newregister');
        $this->load->view('NonKyc/common/footer'); 
      }
    }
    
    function missingvehicleregister($para1 = ''){
        if($para1 == 'do_register'){
        unset($_POST['_token']);
        $aadhar = $this->input->post('aadhar_id');
        $credential = array('aadhar_id' => $aadhar);
        $query = $this->db->get_where('user', $credential);
        if ($query->num_rows() > 0) {
            $row = $query->row();
            if($row->final_mobile_verification == 'success')
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Already Verified'
                );
                echo json_encode($response);
            }else
            {
                $curl = curl_init();
                curl_setopt_array($curl, [
                  CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/boson/generate-otp",
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => "",
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 30,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => "POST",
                  CURLOPT_POSTFIELDS => '{"aadhaar_number": '.$_POST['aadhar_id'].',  "consent": "Y"}',
                  CURLOPT_HTTPHEADER => [
                    "Content-Type: application/json",
                    "X-API-Key: ".$this->getSettings(),
                    "X-Auth-Type: API-Key"
                  ],
                ]);

                $response = json_decode(curl_exec($curl),true);
                if($response['status'] == 200)
                {
                    $this->db->where('uid',$row->uid);
                    $this->db->update('user',array('registration_mobile' => $_POST['registration_mobile']));
                    $_SESSION['aadharId'] = $_POST['aadhar_id'];
                    $_SESSION['mob'] = $_POST['registration_mobile'];
                    $_SESSION['transactionId'] = $response['data']['transaction_id'];
                    $response = array(
                        'status' => 'success',
                        'message' => $response['data']['message']
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => $response['error']['message']
                    );
                    echo json_encode($response);
                }
            }
        } else {
            $curl = curl_init();
            $postfields = json_encode(array(
                'aadhaar_number' => $_POST['aadhar_id'],
                'consent' => 'Y'
            ));
            curl_setopt_array($curl, [
              CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/boson/generate-otp",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => '{"aadhaar_number": '.$_POST['aadhar_id'].',  "consent": "Y"}',
              CURLOPT_HTTPHEADER => [
                "Content-Type: application/json",
                "X-API-Key: ".$this->getSettings(),
                "X-Auth-Type: API-Key"
              ],
            ]);

            $response = json_decode(curl_exec($curl),true);
            if($response['status'] == 200)
            {
                unset($_POST['consent']);
                $insert = $this->db->insert('user',$_POST) ;
                $_SESSION['aadharId'] = $_POST['aadhar_id'];
                $_SESSION['mob'] = $_POST['registration_mobile'];
                $_SESSION['transactionId'] = $response['data']['transaction_id'];
                $response = array(
                    'status' => 'success',
                    'message' => $response['data']['message']
                );
                echo json_encode($response);
            }else
            {
                $response = array(
                    'status' => 'error',
                    'message' => $response['error']['message']
                );
                echo json_encode($response);
            }
        }
      } else {
        $page_data['title'] = 'Register';
        $page_data['control'] = 'user';
        $this->load->view('NonKyc/common/header',$page_data); 
        $this->load->view('NonKyc/missingvehicleregister');
        $this->load->view('NonKyc/common/footer'); 
      }  
    }
    
    function missingregister($para1 = ''){
      if($para1 == 'do_register'){
        unset($_POST['_token']);
        $aadhar = $this->input->post('aadhar_id');
        $credential = array('aadhar_id' => $aadhar);
        $query = $this->db->get_where('user', $credential);
        if ($query->num_rows() > 0) {
            $row = $query->row();
            if($row->final_mobile_verification == 'success')
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Already Verified'
                );
                echo json_encode($response);
            }else
            {
                $curl = curl_init();
                curl_setopt_array($curl, [
                  CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/boson/generate-otp",
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => "",
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 30,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => "POST",
                  CURLOPT_POSTFIELDS => '{"aadhaar_number": '.$_POST['aadhar_id'].',  "consent": "Y"}',
                  CURLOPT_HTTPHEADER => [
                    "Content-Type: application/json",
                    "X-API-Key: ".$this->getSettings(),
                    "X-Auth-Type: API-Key"
                  ],
                ]);

                $response = json_decode(curl_exec($curl),true);
                if($response['status'] == 200)
                {
                    $this->db->where('uid',$row->uid);
                    $this->db->update('user',array('registration_mobile' => $_POST['registration_mobile']));
                    $_SESSION['aadharId'] = $_POST['aadhar_id'];
                    $_SESSION['mob'] = $_POST['registration_mobile'];
                    $_SESSION['transactionId'] = $response['data']['transaction_id'];
                    $response = array(
                        'status' => 'success',
                        'message' => $response['data']['message']
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => $response['error']['message']
                    );
                    echo json_encode($response);
                }
            }
        } else {
            $curl = curl_init();
            $postfields = json_encode(array(
                'aadhaar_number' => $_POST['aadhar_id'],
                'consent' => 'Y'
            ));
            curl_setopt_array($curl, [
              CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/boson/generate-otp",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => '{"aadhaar_number": '.$_POST['aadhar_id'].',  "consent": "Y"}',
              CURLOPT_HTTPHEADER => [
                "Content-Type: application/json",
                "X-API-Key: ".$this->getSettings(),
                "X-Auth-Type: API-Key"
              ],
            ]);

            $response = json_decode(curl_exec($curl),true);
            if($response['status'] == 200)
            {
                unset($_POST['consent']);
                $insert = $this->db->insert('user',$_POST) ;
                $_SESSION['aadharId'] = $_POST['aadhar_id'];
                $_SESSION['mob'] = $_POST['registration_mobile'];
                $_SESSION['transactionId'] = $response['data']['transaction_id'];
                $response = array(
                    'status' => 'success',
                    'message' => $response['data']['message']
                );
                echo json_encode($response);
            }else
            {
                $response = array(
                    'status' => 'error',
                    'message' => $response['error']['message']
                );
                echo json_encode($response);
            }
        }
      } else {
        $page_data['title'] = 'Register';
        $page_data['control'] = 'user';
        $this->load->view('NonKyc/common/header',$page_data); 
        $this->load->view('NonKyc/missingregister');
        $this->load->view('NonKyc/common/footer'); 
      }
    }
    
    function checkvehicleregister($para1 = ''){
        if($para1 == 'do_register'){
        unset($_POST['_token']);
        $aadhar = $this->input->post('aadhar_id');
        $credential = array('aadhar_id' => $aadhar);
        $query = $this->db->get_where('user', $credential);
        if ($query->num_rows() > 0) {
            $row = $query->row();
            if($row->final_mobile_verification == 'success')
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Already Verified'
                );
                echo json_encode($response);
            }else
            {
                $curl = curl_init();
                curl_setopt_array($curl, [
                  CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/boson/generate-otp",
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => "",
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 30,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => "POST",
                  CURLOPT_POSTFIELDS => '{"aadhaar_number": '.$_POST['aadhar_id'].',  "consent": "Y"}',
                  CURLOPT_HTTPHEADER => [
                    "Content-Type: application/json",
                    "X-API-Key: ".$this->getSettings(),
                    "X-Auth-Type: API-Key"
                  ],
                ]);

                $response = json_decode(curl_exec($curl),true);
                if($response['status'] == 200)
                {
                    $this->db->where('uid',$row->uid);
                    $this->db->update('user',array('registration_mobile' => $_POST['registration_mobile']));
                    $_SESSION['aadharId'] = $_POST['aadhar_id'];
                    $_SESSION['mob'] = $_POST['registration_mobile'];
                    $_SESSION['transactionId'] = $response['data']['transaction_id'];
                    $response = array(
                        'status' => 'success',
                        'message' => $response['data']['message']
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => $response['error']['message']
                    );
                    echo json_encode($response);
                }
            }
        } else {
            $curl = curl_init();
            $postfields = json_encode(array(
                'aadhaar_number' => $_POST['aadhar_id'],
                'consent' => 'Y'
            ));
            curl_setopt_array($curl, [
              CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/boson/generate-otp",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => '{"aadhaar_number": '.$_POST['aadhar_id'].',  "consent": "Y"}',
              CURLOPT_HTTPHEADER => [
                "Content-Type: application/json",
                "X-API-Key: ".$this->getSettings(),
                "X-Auth-Type: API-Key"
              ],
            ]);

            $response = json_decode(curl_exec($curl),true);
            if($response['status'] == 200)
            {
                unset($_POST['consent']);
                $insert = $this->db->insert('user',$_POST) ;
                $_SESSION['aadharId'] = $_POST['aadhar_id'];
                $_SESSION['mob'] = $_POST['registration_mobile'];
                $_SESSION['transactionId'] = $response['data']['transaction_id'];
                $response = array(
                    'status' => 'success',
                    'message' => $response['data']['message']
                );
                echo json_encode($response);
            }else
            {
                $response = array(
                    'status' => 'error',
                    'message' => $response['error']['message']
                );
                echo json_encode($response);
            }
        }
      } else {
        $page_data['title'] = 'Register';
        $page_data['control'] = 'user';
        $this->load->view('NonKyc/common/header',$page_data); 
        $this->load->view('NonKyc/checkvehicleregister');
        $this->load->view('NonKyc/common/footer'); 
      }  
    }
    
    public function checkregister($para1 = ''){
      if($para1 == 'do_register'){
        unset($_POST['_token']);
        $aadhar = $this->input->post('aadhar_id');
        $credential = array('aadhar_id' => $aadhar);
        $query = $this->db->get_where('user', $credential);
        if ($query->num_rows() > 0) {
            $row = $query->row();
            if($row->final_mobile_verification == 'success')
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Already Verified'
                );
                echo json_encode($response);
            }else
            {
                $curl = curl_init();
                curl_setopt_array($curl, [
                  CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/boson/generate-otp",
                  CURLOPT_RETURNTRANSFER => true,
                  CURLOPT_ENCODING => "",
                  CURLOPT_MAXREDIRS => 10,
                  CURLOPT_TIMEOUT => 30,
                  CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
                  CURLOPT_CUSTOMREQUEST => "POST",
                  CURLOPT_POSTFIELDS => '{"aadhaar_number": '.$_POST['aadhar_id'].',  "consent": "Y"}',
                  CURLOPT_HTTPHEADER => [
                    "Content-Type: application/json",
                    "X-API-Key: ".$this->getSettings(),
                    "X-Auth-Type: API-Key"
                  ],
                ]);

                $response = json_decode(curl_exec($curl),true);
                if($response['status'] == 200)
                {
                    $this->db->where('uid',$row->uid);
                    $this->db->update('user',array('registration_mobile' => $_POST['registration_mobile']));
                    $_SESSION['aadharId'] = $_POST['aadhar_id'];
                    $_SESSION['mob'] = $_POST['registration_mobile'];
                    $_SESSION['transactionId'] = $response['data']['transaction_id'];
                    $response = array(
                        'status' => 'success',
                        'message' => $response['data']['message']
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => $response['error']['message']
                    );
                    echo json_encode($response);
                }
            }
        } else {
            $curl = curl_init();
            $postfields = json_encode(array(
                'aadhaar_number' => $_POST['aadhar_id'],
                'consent' => 'Y'
            ));
            curl_setopt_array($curl, [
              CURLOPT_URL => "https://api.gridlines.io/aadhaar-api/boson/generate-otp",
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => "",
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 30,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => "POST",
              CURLOPT_POSTFIELDS => '{"aadhaar_number": '.$_POST['aadhar_id'].',  "consent": "Y"}',
              CURLOPT_HTTPHEADER => [
                "Content-Type: application/json",
                "X-API-Key: ".$this->getSettings(),
                "X-Auth-Type: API-Key"
              ],
            ]);

            $response = json_decode(curl_exec($curl),true);
            if($response['status'] == 200)
            {
                unset($_POST['consent']);
                $insert = $this->db->insert('user',$_POST) ;
                $_SESSION['aadharId'] = $_POST['aadhar_id'];
                $_SESSION['mob'] = $_POST['registration_mobile'];
                $_SESSION['transactionId'] = $response['data']['transaction_id'];
                $response = array(
                    'status' => 'success',
                    'message' => $response['data']['message']
                );
                echo json_encode($response);
            }else
            {
                $response = array(
                    'status' => 'error',
                    'message' => $response['error']['message']
                );
                echo json_encode($response);
            }
        }
      } else {
        $page_data['title'] = 'Register';
        $page_data['control'] = 'user';
        $this->load->view('NonKyc/common/header',$page_data); 
        $this->load->view('NonKyc/checkregister');
        $this->load->view('NonKyc/common/footer'); 
      }
    }

    public function register($para1 = ''){
      if($para1 == 'do_register'){
        unset($_POST['_token']);
      $aadhar = $this->input->post('aadhar_id');
        $registration_mobile = $this->input->post('registration_mobile');
        $credential = array('aadhar_id' => $aadhar);
        $query = $this->db->get_where('user', $credential);
        if ($query->num_rows() > 0) {
            $row = $query->row();
            if($row->final_mobile_verification == 'success')
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Already Verified'
                );
                echo json_encode($response);
            }else
            {
                $ch = curl_init();
                $curlConfig = array(
                    CURLOPT_URL            => "http://142.93.222.228:8080/Uidverifywebsvcv1/VerifyEmailMobilelink",
                    CURLOPT_POST           => true,
                    CURLOPT_RETURNTRANSFER => true,
                    CURLOPT_HTTPHEADER => array(
                        'Content-Type: application/x-www-form-urlencoded'
                    ),
                    CURLOPT_POSTFIELDS     => 'method=emailnmobilev2&txn_id=94b5c5de-e94d-11ec-8fea-0242ac120002&uidnumber='.$_POST['aadhar_id'].'&consent=Y&clientid=SIVA_TEST&verificationCode=&mobileNumber='.$_POST['registration_mobile'],
                );
                curl_setopt_array($ch, $curlConfig);
                $result = json_decode(curl_exec($ch),true);
                if(isset($result['Succeeded']))
                {
                    if($result['Succeeded']['Uid_Details']['responseData']['status'] == 'Success')
                    {
                        $captcha = $this->generateCaptcha();
                        if($captcha['status'])
                        {
                            $this->db->where('uid',$row->uid);
                            $this->db->update('user',array('registration_mobile' => $registration_mobile));
                            $_SESSION['aadharId'] = $_POST['aadhar_id'];
                            $_SESSION['mob'] = $_POST['registration_mobile'];
                            $response = array(
                                'status' => 'success',
                                'filename' => base_url().$captcha['filename']
                            );
                            echo json_encode($response);
                        }else{
                            $response = array(
                                'status' => 'captchafailed'
                            );
                            echo json_encode($response);
                        }
                    }else{
                        $response = array(
                            'status' => 'failed',
                            'message' => $result['Succeeded']['Uid_Details']['responseData']['message']
                        );
                        echo json_encode($response);
                    }
                }else{
                    $response = array(
                        'status' => 'failed',
                        'message' => $result['Failed']['ErrorMessage']
                    );
                    echo json_encode($response);
                }
                curl_close($ch);
            }
        } else {
            $ch = curl_init();
            $curlConfig = array(
                CURLOPT_URL            => "http://142.93.222.228:8080/Uidverifywebsvcv1/VerifyEmailMobilelink",
                CURLOPT_POST           => true,
                CURLOPT_RETURNTRANSFER => true,
                CURLOPT_HTTPHEADER => array(
                    'Content-Type: application/x-www-form-urlencoded'
                ),
                CURLOPT_POSTFIELDS     => 'method=emailnmobilev2&txn_id=94b5c5de-e94d-11ec-8fea-0242ac120002&uidnumber='.$_POST['aadhar_id'].'&consent=Y&clientid=SIVA_TEST&verificationCode=&mobileNumber='.$_POST['registration_mobile'],
            );
            curl_setopt_array($ch, $curlConfig);
            $result = json_decode(curl_exec($ch),true);
           
            curl_close($ch);
            if(isset($result['Succeeded']))
            {
                if($result['Succeeded']['Uid_Details']['responseData']['status'] == 'Success')
                {
                    $captcha = $this->generateCaptcha();
                    if($captcha['status'])
                    {
                        $insert = $this->db->insert('user',$_POST) ;
                        $_SESSION['aadharId'] = $_POST['aadhar_id'];
                        $_SESSION['mob'] = $_POST['registration_mobile'];
                        $response = array(
                            'status' => 'success',
                            'filename' => base_url().$captcha['filename']
                        );
                        echo json_encode($response);
                    }else{
                        $response = array(
                            'status' => 'captchafailed'
                        );
                        echo json_encode($response);
                    }
                }else{
                    $response = array(
                        'status' => 'failed',
                        'message' => $result['Succeeded']['Uid_Details']['responseData']['message']
                    );
                    echo json_encode($response);
                }
            }else{
                $response = array(
                    'status' => 'failed',
                    'message' => $result['Failed']['ErrorMessage']
                );
                echo json_encode($response);
            }
        }
      } else {
        $page_data['title'] = 'Register';
        $page_data['control'] = 'user';
        $this->load->view('NonKyc/common/header',$page_data); 
        $this->load->view('NonKyc/register');
        $this->load->view('NonKyc/common/footer'); 
      }
    }

    function sendTextLocalOtp($username,$mob,$otp)
    {
        $message = 'Dear '.$username.', To verify your mobile number your OTP is '.$otp.'.%nKhoji.in';
        $mob = '91'.$mob;
        try {
            $apiKey = urlencode("NGQ2YzQ3NDM0MjcxNjU2YjcwNmIzOTYzMzI0ZTZkNjg=");
            $sender = urlencode('KHOJI');
            $message = rawurlencode($message);
            $data = array('apikey' => $apiKey, 'numbers' => $mob, 'sender' => $sender, 'message' => $message);
            $ch = curl_init('https://api.textlocal.in/send/');
            curl_setopt($ch, CURLOPT_POST, true);
            curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
            $response = curl_exec($ch);
            curl_close($ch);
        } catch (\Throwable $th) {
            throw $th;

        }
    }

    function sendMissingPersonVerifyOtp()
    {
        $getIfAlreadyOtherInMobile1 = $this->db->query('select * from missingperson where mobile1="'.$_POST['mobile'].'" and missingId='.$_SESSION['missingPersonId'])->result_array();
        $getIfAlreadyOtherInMobile2 = $this->db->query('select * from missingperson where mobile2="'.$_POST['mobile'].'" and missingId='.$_SESSION['missingPersonId'])->result_array();
        $getIfAlreadyOtherInMobile3 = $this->db->query('select * from missingperson where mobile3="'.$_POST['mobile'].'" and missingId='.$_SESSION['missingPersonId'])->result_array();
        if(count($getIfAlreadyOtherInMobile1) > 0 || count($getIfAlreadyOtherInMobile2) > 0 || count($getIfAlreadyOtherInMobile3) > 0)
        {
            $response = array(
                'status' => 'username',
                'message' => 'Mobile number already added'
            );
            echo json_encode($response);
        }else{
            $string = '0123456789';
            $string_shuffled = str_shuffle($string);
            $otp = substr($string_shuffled, 1, 4);
            $this->sendTextLocalOtp($_SESSION['username'],$_POST['mobile'],$otp);
            $updatedata = array(
                'otp' => $otp
            );
            $this->db->where('uid',$_SESSION['user_id']);
            $update = $this->db->update('user',$updatedata);
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'Otp Sent Successfully'
                );
                echo json_encode($response);
            }else
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
    }

    function verifyMissingMobileOtp()
    {
        $getPreviousDetail = $this->db->query('select * from user where aadhar_id="'.$_SESSION['aadhar_id'].'"')->result_array();
        if($_POST['otp'] == $getPreviousDetail[0]['otp'])
        {
            if($_POST['count'] == 1)
            {
                $updatedata = array(
                    'otherrelationname1' => ($_POST['relation'] == 23 ? $_POST['otherrelation'] : NULL),
                    'relation1' => $_POST['relation'],
                    'mobile1' => $_POST['mobile'],
                );   
            }
            if($_POST['count'] == 2)
            {
                $updatedata = array(
                    'otherrelationname2' => ($_POST['relation'] == 23 ? $_POST['otherrelation'] : NULL),
                    'relation2' => $_POST['relation'],
                    'mobile2' => $_POST['mobile'],
                );   
            }
            if($_POST['count'] == 3)
            {
                $updatedata = array(
                    'otherrelationname3' => ($_POST['relation'] == 23 ? $_POST['otherrelation'] : NULL),
                    'relation3' => $_POST['relation'],
                    'mobile3' => $_POST['mobile'],
                );   
            }
            $this->db->where('missingId',$_SESSION['missingPersonId']);
            $update = $this->db->update('missingperson',$updatedata);
            $response = array(
                'status' => 'success',
                'message' => 'Mobile Number Verified Successfully'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Otp Invalid'
            );
            echo json_encode($response);
        }
    }

    function updateMissingStep2Detail()
    {
        $updatedata = array(
            'missinggender' => $_POST['gender'],
            'missingdob' => $_POST['dob'],
            'missingreligion' => $_POST['religion']
        );
        $this->db->where('Id',$_SESSION['missingNewId']);
        $update = $this->db->update('missingperson',$updatedata);
        if($update)
        {
            $response = array(
                'status' => 'success',
                'message' => 'Please provide some additional details'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }
    }

    function updateMissingStep5Detail()
    {
        $updatedata = array(
            'isFinalSubmitted'=>1,
            'finalAmount' => $_POST['totalAmount'],
            'paymentId' => $_POST['paymentId'],
            'rewardamount' => $_POST['rewardAmount'],
            'paymentStatus' => 'Success',
        );
        $this->db->where('missingId',$_SESSION['missingPersonId']);
        $update = $this->db->update('missingperson',$updatedata);
        if($update)
        {
            $response = array(
                'status' => 'success',
                'message' => 'Data Saved Successfully'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }
    }

    function updateMissingStep6Detail()
    {   
        $updatedata = array(
            'otherDetail' => $_POST['otherDetail'],
        );
        $this->db->where('missingId',$_SESSION['missingPersonId']);
        $update = $this->db->update('missingperson',$updatedata);
        if($update)
        {
            $response = array(
                'status' => 'success',
                'message' => 'Application No. Generated And Details Uploaded Successfully'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }
    }
    
    function finalMissingVehicleSumbit()
    {
        if(isset($_GET['id']))
        {
            $updatedata = array(
                'isFinalSubmitted' => 1,
            );
            $this->db->where('Id',$_GET['id']);
            $update = $this->db->update('missingvehicle',$updatedata);
        }else{
            $updatedata = array(
                'isFinalSubmitted' => 1,
            );
            $this->db->where('Id',$_SESSION['missingVehicleId']);
            $update = $this->db->update('missingvehicle',$updatedata);   
        }
    }
    
    function finalMissingPersonSumbit()
    {
        $updatedata = array(
            'isFinalSubmitted' => 1,
        );
        $this->db->where('missingId',$_SESSION['missingPersonId']);
        $update = $this->db->update('missingperson',$updatedata);
    }
    
    function deleteNewVehiclePhoto()
    {
        if(isset($_POST['id']))
        {
            $photo = array();
            $getOldPhoto = $this->db->query('select * from vehicles where Id='.$_POST['id'])->result_array();
            if($getOldPhoto[0]['vehiclePhoto'] != NULL)
            {
                $decode = json_decode($getOldPhoto[0]['vehiclePhoto'],true);
                unset($decode[$_POST['index']]);
                unlink($decode[$_POST['index']]);
                foreach($decode as $k=>$v)
                {
                    array_push($photo,$v);
                }
            }
            $updatedata = array(
                'vehiclePhoto' => json_encode($photo),
            );
            $this->db->where('Id',$_POST['id']);
            $update = $this->db->update('vehicles',$updatedata);   
        }else{
            $photo = array();
            $getOldPhoto = $this->db->query('select * from vehicles where Id='.$_SESSION['vehicleId'])->result_array();
            if($getOldPhoto[0]['vehiclePhoto'] != NULL)
            {
                $decode = json_decode($getOldPhoto[0]['vehiclePhoto'],true);
                unset($decode[$_POST['index']]);
                unlink($decode[$_POST['index']]);
                foreach($decode as $k=>$v)
                {
                    array_push($photo,$v);
                }
            }
            $updatedata = array(
                'vehiclePhoto' => json_encode($photo),
            );
            $this->db->where('Id',$_SESSION['vehicleId']);
            $update = $this->db->update('vehicles',$updatedata);
        }
    }
    
    function uploadNewVehicleDoc()
    {
        if($_POST['id'])
        {
            $name = $_FILES["file"]["name"];
            $ext = end((explode(".", $name)));
            $filepath = 'upload/vehicle/doc/'.time().''.rand(0,10000).'.'.$ext;
            move_uploaded_file($_FILES['file']['tmp_name'], $filepath);
            if($_POST['isUploaded'] == 0)
            {
                $insertdata = array(
                    'documentName' => $_POST['documentName'],
                    'vehicleId' => $_POST['id'],
                    'documentFile'=> $filepath
                );
                $this->db->insert('newVehicleDocs',$insertdata);
            }else{
                $getPreviousData = $this->db->query('select * from newVehicleDocs where Id='.$_POST['isUploaded'])->result_array();
                unlink($getPreviousData[0]['documentFile']);      
                $updatedata = array(
                    'documentFile' => $filepath,
                );
                $this->db->where('Id',$_POST['isUploaded']);
                $this->db->update('newVehicleDocs',$updatedata);
            }
            $response = array(
                'status' => 'success',
                'message' => 'Document Uploaded Successfully'
            );
            echo json_encode($response);   
        }else{
            $name = $_FILES["file"]["name"];
            $ext = end((explode(".", $name)));
            $filepath = 'upload/vehicle/doc/'.time().''.rand(0,10000).'.'.$ext;
            move_uploaded_file($_FILES['file']['tmp_name'], $filepath);
            if($_POST['isUploaded'] == 0)
            {
                $insertdata = array(
                    'documentName' => $_POST['documentName'],
                    'vehicleId' => $_SESSION['vehicleId'],
                    'documentFile'=> $filepath
                );
                $this->db->insert('newVehicleDocs',$insertdata);
            }else{
                $getPreviousData = $this->db->query('select * from newVehicleDocs where Id='.$_POST['isUploaded'])->result_array();
                unlink($getPreviousData[0]['documentFile']);      
                $updatedata = array(
                    'documentFile' => $filepath,
                );
                $this->db->where('Id',$_POST['isUploaded']);
                $this->db->update('newVehicleDocs',$updatedata);
            }
            $response = array(
                'status' => 'success',
                'message' => 'Document Uploaded Successfully'
            );
            echo json_encode($response);   
        }
    }
    
    function deleteNewVehicleDoc()
    {
        unlink($_POST['url']);
        $this->db->query('delete from newVehicleDocs where Id='.$_POST['index']);
    }
    
    function uploadNewVehicleFaceMatchPhoto()
    {
        if($_POST['id'])
        {
            $data = $_POST["file"];

            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = time().''.rand(0,10000);
            $mainphoto = 'upload/vehicle/facematch/'.$imageId.'.'.$split1[1];
            file_put_contents($mainphoto, $data);
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcavehicle",
                "image_id" => $imageId,
                "image_url" => base_url().''.$newImagePath,
            ));
            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => $postdata,
              CURLOPT_HTTPHEADER => array(
                'Content-Type: application/json',
                'Authorization: '.$this->getSettings('facematchtoken')
              ),
            ));
            $response = json_decode(curl_exec($curl),true);
            curl_close($curl);
            if(count($response) > 0)
            {
                if($response['status'] == 200)
                {
                    if($response['face_count'] == 1)
                    {
                        if($_POST['isUploaded'] == 0)
                        {
                            $insertdata = array(
                                'otherRelationName' => (isset($_POST['otherrelation']) ? $_POST['otherrelation'] : NULL),
                                'relationId' => $_POST['relation'],
                                'vehicleId' => $_POST['id'],
                                'facematchphoto'=> $mainphoto,
                                'imageId' => $imageId,
                                'awsEventName' => 'vehicle'
                            );
                            $this->db->insert('vehicleFaceMatch',$insertdata);
                        }else{
                            $getPreviousData = $this->db->query('select * from vehicleFaceMatch where Id='.$_POST['isUploaded'])->result_array();
                            unlink($getPreviousData[0]['facematchphoto']);      
                            $updatedata = array(
                                'otherRelationName' => (isset($_POST['otherrelation']) ? $_POST['otherrelation'] : NULL),
                                'relationId' => $_POST['relation'],
                                'facematchphoto' => $mainphoto,
                                'imageId' => $imageId,
                                'awsEventName' => 'vehicle'
                            );
                            $this->db->where('Id',$_POST['isUploaded']);
                            $this->db->update('vehicleFaceMatch',$updatedata);
                        }
                        $response = array(
                            'status' => 'success',
                            'message' => 'Face Match Photo Uploaded Successfully'
                        );
                        echo json_encode($response);   
                    }else{
                        if($response['face_count'] > 1)
                        {
                            $finalresponse = array(
                                'status' => 'error',
                                'message' => 'Multiple faces detected in image'
                            );
                            echo json_encode($finalresponse);
                        }else{
                            $finalresponse = array(
                                'status' => 'error',
                                'message' => 'No face found in the image'
                            );
                            echo json_encode($finalresponse);
                        }
                    }
                }else{
                    $finalresponse = array(
                        'status' => 'error',
                        'message' => 'Please upload valid face match image'
                    );
                    echo json_encode($finalresponse);
                }
            }else{
                $finalresponse = array(
                    'status' => 'error',
                    'message' => 'Please upload valid face match image'
                );
                echo json_encode($finalresponse);
            }
        }else{
            $data = $_POST["file"];

            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = time().''.rand(0,10000);
            $mainphoto = 'upload/vehicle/facematch/'.$imageId.'.'.$split1[1];
            file_put_contents($mainphoto, $data);
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcavehicle",
                "image_id" => $imageId,
                "image_url" => base_url().''.$mainphoto,
            ));
            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => $postdata,
              CURLOPT_HTTPHEADER => array(
                'Content-Type: application/json',
                'Authorization: '.$this->getSettings('facematchtoken')
              ),
            ));
            $response = json_decode(curl_exec($curl),true);
            curl_close($curl);
            if(count($response) > 0)
            {
                if($response['status'] == 200)
                {
                    if($response['face_count'] == 1)
                    {
                        if($_POST['isUploaded'] == 0)
                        {
                            $insertdata = array(
                                'otherRelationName' => (isset($_POST['otherrelation']) ? $_POST['otherrelation'] : NULL),
                                'relationId' => $_POST['relation'],
                                'vehicleId' => $_SESSION['vehicleId'],
                                'facematchphoto' => $mainphoto,
                                'imageId' => $imageId,
                                'awsEventName' => 'vehicle'
                            );
                            $this->db->insert('vehicleFaceMatch',$insertdata);
                        }else{
                            $getPreviousData = $this->db->query('select * from vehicleFaceMatch where Id='.$_POST['isUploaded'])->result_array();
                            unlink($getPreviousData[0]['facematchphoto']);      
                            $updatedata = array(
                                'otherRelationName' => (isset($_POST['otherrelation']) ? $_POST['otherrelation'] : NULL),
                                'relationId' => $_POST['relation'],
                                'facematchphoto' => $mainphoto,
                                'imageId' => $imageId,
                                'awsEventName' => 'vehicle'
                            );
                            $this->db->where('Id',$_POST['isUploaded']);
                            $this->db->update('vehicleFaceMatch',$updatedata);
                        }
                        $response = array(
                            'status' => 'success',
                            'message' => 'Face Match Photo Uploaded Successfully'
                        );
                        echo json_encode($response);   
                    }else{
                        if($response['face_count'] > 1)
                        {
                            $finalresponse = array(
                                'status' => 'error',
                                'message' => 'Multiple faces detected in image'
                            );
                            echo json_encode($finalresponse);
                        }else{
                            $finalresponse = array(
                                'status' => 'error',
                                'message' => 'No face found in the image'
                            );
                            echo json_encode($finalresponse);
                        }
                    }
                }else{
                    $finalresponse = array(
                        'status' => 'error',
                        'message' => 'Please upload valid face match image'
                    );
                    echo json_encode($finalresponse);
                }
            }else{
                $finalresponse = array(
                    'status' => 'error',
                    'message' => 'Please upload valid face match image'
                );
                echo json_encode($finalresponse);
            }
        }
    }
    
    function deleteNewVehicleFaceMatchPhoto()
    {
        unlink($_POST['url']);
        $this->db->query('delete from vehicleFaceMatch where Id='.$_POST['index']);   
    }
    
    function uploadNewVehiclePhoto()
    {
        if($_POST['id'])
        {
            $photo = array();
            $getOldPhoto = $this->db->query('select * from vehicles where Id='.$_POST['id'])->result_array();
            if($getOldPhoto[0]['vehiclePhoto'] != NULL)
            {
                $decode = json_decode($getOldPhoto[0]['vehiclePhoto'],true);
                unset($decode[$_POST['index']]);
                unlink($decode[$_POST['index']]);
                foreach($decode as $k=>$v)
                {
                    array_push($photo,$v);
                }
            }
            $filename = $_FILES["file"]["name"];
            $ext = end((explode(".", $filename)));
            $filename = 'upload/vehicle/photo/'.time().''.rand(0,10000).'.'.$ext;
            move_uploaded_file($_FILES['file']['tmp_name'], $filename);
            array_push($photo,$filename);
            $updatedata = array(
                'vehiclePhoto' => json_encode($photo),
            );
            $this->db->where('Id',$_POST['id']);
            $update = $this->db->update('vehicles',$updatedata);
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'Photo Saved Successfully'
                );
                echo json_encode($response);
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }else{
            $photo = array();
            $getOldPhoto = $this->db->query('select * from vehicles where Id='.$_SESSION['vehicleId'])->result_array();
            if($getOldPhoto[0]['vehiclePhoto'] != NULL)
            {
                $decode = json_decode($getOldPhoto[0]['vehiclePhoto'],true);
                unset($decode[$_POST['index']]);
                unlink($decode[$_POST['index']]);
                foreach($decode as $k=>$v)
                {
                    array_push($photo,$v);
                }
            }
            $filename = $_FILES["file"]["name"];
            $ext = end((explode(".", $filename)));
            $filename = 'upload/vehicle/photo/'.time().''.rand(0,10000).'.'.$ext;
            move_uploaded_file($_FILES['file']['tmp_name'], $filename);
            array_push($photo,$filename);
            $updatedata = array(
                'vehiclePhoto' => json_encode($photo),
            );
            $this->db->where('Id',$_SESSION['vehicleId']);
            $update = $this->db->update('vehicles',$updatedata);
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'Photo Saved Successfully'
                );
                echo json_encode($response);
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }   
        }
    }
    
    function updateMissingStepPhotoDetail()
    {
        $photo = array();
        if($_POST['imagecount'] == 0)
        {
            $response = array(
                'status' => 'error',
                'message' => 'One Latest Photo is required'
            );
            echo json_encode($response);
            return;   
        }else{
            $response = array(
                'status' => 'success',
                'message' => 'Photos Saved Successfully'
            );
            echo json_encode($response);
        }
            
    }

    function updateMissingStep4Detail()
    {
        if($_POST['facematch'] != '')
        {
            $data = $_POST["facematch"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId = 'Missing_'.time().''.rand(0,10000);
            $mainphoto = 'upload/missingperson/facematch/'.$imageId.'.'.$split1[1];
            file_put_contents($mainphoto, $data);
            $curl = curl_init();
            $postdata = json_encode(array(
                "collection_id" => "shivaguptabcakhoji4",
                "image_id" => $imageId,
                "image_url" => base_url().''.$mainphoto,
            ));
            curl_setopt_array($curl, array(
              CURLOPT_URL => 'https://wtlpo2vyxzv4ncm7lhgielfwnm0ivuex.lambda-url.ap-south-1.on.aws/',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => $postdata,
              CURLOPT_HTTPHEADER => array(
                'Content-Type: application/json',
                'Authorization: '.$this->getSettings('facematchtoken')
              ),
            ));
            
            $response = json_decode(curl_exec($curl),true);
            curl_close($curl);
            if(count($response) > 0)
            {
                if($response['status'] == 200)
                {
                    if($response['face_count'] == 1)
                    {
                        $getMissingDetails = $this->db->query('select * from missingperson where missingId='.$_SESSION['missingPersonId'])->result_array();
                        if(count($_POST['subcategory']) > 0)
                        {
                            $deleteSubCategories = $this->db->query('delete from userproperty where personId='.$getMissingDetails[0]['Id']);
                            for($i=0;$i<count($_POST['subcategory']);$i++)
                            {
                                if($_POST['subcategory'][$i] != '')
                                {
                                    $getSubCategoryData = $this->db->query('select * from subcategories where Id='.$_POST['subcategory'][$i])->result_array();
                                    $insertPropdata = array(
                                        'userCategory' => $getSubCategoryData[0]['categoryId'],
                                        'userSubCategory' => $_POST['subcategory'][$i],
                                        'personId' => $getMissingDetails[0]['Id']
                                    );
                                    $this->db->insert('userproperty',$insertPropdata);   
                                }
                            }
                        }
                        if($_POST['isAvailable'] == 1)
                        {
                            $getFullMissingDetails = $this->db->query('select * from missingpersondetail where missingId='.$getMissingDetails[0]['Id'])->result_array();
                            $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getMissingDetails[0]['missingaadhar'].'"')->result_array();
                            $updatedata = array(
                                'personNickname' => (($getMissingDetails[0]['personNickname'] != '') ? $getMissingDetails[0]['personNickname'] : $_POST['personNickname']),
                                'personFathername' => (($getMissingDetails[0]['personFathername'] != '') ? $getMissingDetails[0]['personFathername'] : $_POST['personFathername']),
                                'personMothername' => (($getMissingDetails[0]['personMothername'] != '') ? $getMissingDetails[0]['personMothername'] : $_POST['personMothername']),
                                'personSpousename' => (($getMissingDetails[0]['personSpousename'] != '') ? $getMissingDetails[0]['personSpousename'] : $_POST['personSpousename']),
                                'fatherstate' => (($getUserDetail[0]['curstate'] != '') ? $getUserDetail[0]['curstate'] : $_POST['curstate']),
                                'fathercurrentaddress' => (($getUserDetail[0]['curaddress'] != '') ? $getUserDetail[0]['curaddress'] : $_POST['curaddress']),
                                'fatherdistrict' => (($getUserDetail[0]['curdistrict'] != '') ? $getUserDetail[0]['curdistrict'] : $_POST['curdistrict']),
                                'fathercity' => (($getUserDetail[0]['curcity'] != '') ? $getUserDetail[0]['curcity'] : $_POST['curcity']),
                                'fatherpincode' => (($getUserDetail[0]['curpincode'] != '') ? $getUserDetail[0]['curpincode'] : $_POST['curpincode']),
                                'facematchphoto' => $mainphoto,
                                'missingreligion' => (($getUserDetail[0]['religion'] != '') ? $getUserDetail[0]['religion'] : $_POST['religion']),
                                'missingdob' => (($getUserDetail[0]['dob'] != '') ? $getUserDetail[0]['dob'] : $_POST['dob']),
                                'missinggender' => (($getUserDetail[0]['gender'] != '') ? $getUserDetail[0]['gender'] : $_POST['gender']),
                                'missingpan' => $_POST['missingpan'],
                                'missingdl' => $_POST['missingdl'],
                                'goldType' => $_POST['goldType'],
                                'goldId' => $_POST['goldId'],
                                'vehicleNumber' => $_POST['vehicleNumber'],
                                'missingvoter' => $_POST['missingvoter'],
                                'imageId' => $imageId,
                                'awsEventName' => 'Missing'
                            );
                            $this->db->where('missingId',$_SESSION['missingPersonId']);
                            $update = $this->db->update('missingperson',$updatedata);
                            if($update)
                            {
                                $response = array(
                                    'status' => 'success',
                                    'message' => 'Data Saved Successfully'
                                );
                                echo json_encode($response);
                            }else{
                                $response = array(
                                    'status' => 'error',
                                    'message' => 'Something Went Wrong'
                                );
                                echo json_encode($response);
                            }       
                        }else{
                            $getIfAlready = $this->db->query('select * from missingpersondetail where missingId='.$getMissingDetails[0]['Id'])->result_array();
                            if(count($getIfAlready) > 0)
                            {
                                $updatedata = array(
                                    'fathername' => $_POST['fathername'],
                                    'missingId' => $getMissingDetails[0]['Id'],
                                    'dob' => $_POST['dob'],
                                    'gender' => $_POST['gender'],
                                    'religion' => $_POST['religion']
                                );
                                $this->db->where('Id',$getIfAlready[0]['Id']);
                                $this->db->update('missingpersondetail',$updatedata);
                            }
                            $updatedata = array(
                                'personNickname' => (($getMissingDetails[0]['personNickname'] != '') ? $getMissingDetails[0]['personNickname'] : $_POST['personNickname']),
                                'personFathername' => (($getMissingDetails[0]['personFathername'] != '') ? $getMissingDetails[0]['personFathername'] : $_POST['personFathername']),
                                'personMothername' => (($getMissingDetails[0]['personMothername'] != '') ? $getMissingDetails[0]['personMothername'] : $_POST['personMothername']),
                                'personSpousename' => (($getMissingDetails[0]['personSpousename'] != '') ? $getMissingDetails[0]['personSpousename'] : $_POST['personSpousename']),
                                'fatherstate' => (($getMissingDetails[0]['fatherstate'] != '') ? $getMissingDetails[0]['fatherstate'] : $_POST['curstate']),
                                'fathercurrentaddress' => (($getMissingDetails[0]['fathercurrentaddress'] != '') ? $getMissingDetails[0]['fathercurrentaddress'] : $_POST['curaddress']),
                                'fatherdistrict' => (($getMissingDetails[0]['fatherdistrict'] != '') ? $getMissingDetails[0]['fatherdistrict'] : $_POST['curdistrict']),
                                'fathercity' => (($getMissingDetails[0]['fathercity'] != '') ? $getMissingDetails[0]['fathercity'] : $_POST['curcity']),
                                'fatherpincode' => (($getMissingDetails[0]['fatherpincode'] != '') ? $getMissingDetails[0]['fatherpincode'] : $_POST['curpincode']),
                                'missingreligion' => (($getMissingDetails[0]['missingreligion'] != '') ? $getMissingDetails[0]['missingreligion'] : $_POST['religion']),
                                'missingdob' => (($getMissingDetails[0]['missingdob'] != '') ? $getMissingDetails[0]['missingdob'] : $_POST['dob']),
                                'missinggender' => (($getMissingDetails[0]['missinggender'] != '') ? $getMissingDetails[0]['missinggender'] : $_POST['gender']),
                                'goldType' => $_POST['goldType'],
                                'goldId' => $_POST['goldId'],
                                'vehicleNumber' => $_POST['vehicleNumber'],
                                'facematchphoto' => $mainphoto,
                                'imageId' => $imageId,
                                'awsEventName' => 'Missing'
                            );
                            $this->db->where('missingId',$_SESSION['missingPersonId']);
                            $update = $this->db->update('missingperson',$updatedata);
                            if($update)
                            {
                                $response = array(
                                    'status' => 'success',
                                    'message' => 'Data Saved Successfully'
                                );
                                echo json_encode($response);
                            }else{
                                $response = array(
                                    'status' => 'error',
                                    'message' => 'Something Went Wrong'
                                );
                                echo json_encode($response);
                            }
                        }
                    }else{
                        if($response['face_count'] > 1)
                        {
                            $finalresponse = array(
                                'status' => 'error',
                                'message' => 'Multiple faces detected in image'
                            );
                            echo json_encode($finalresponse);
                        }else{
                            $finalresponse = array(
                                'status' => 'error',
                                'message' => 'No face found in the image'
                            );
                            echo json_encode($finalresponse);
                        }
                    }
                }else{
                    $finalresponse = array(
                        'status' => 'error',
                        'message' => 'Please upload valid face match image'
                    );
                    echo json_encode($finalresponse);
                }
            }else{
                $finalresponse = array(
                    'status' => 'error',
                    'message' => 'Please upload valid face match image'
                );
                echo json_encode($finalresponse);
            }
        }else{
            $getMissingDetails = $this->db->query('select * from missingperson where missingId='.$_SESSION['missingPersonId'])->result_array();
            if(count($_POST['subcategory']) > 0)
            {
                $deleteSubCategories = $this->db->query('delete from userproperty where personId='.$getMissingDetails[0]['Id']);
                for($i=0;$i<count($_POST['subcategory']);$i++)
                {
                    if($_POST['subcategory'][$i] != '')
                    {
                        $getSubCategoryData = $this->db->query('select * from subcategories where Id='.$_POST['subcategory'][$i])->result_array();
                        $insertPropdata = array(
                            'userCategory' => $getSubCategoryData[0]['categoryId'],
                            'userSubCategory' => $_POST['subcategory'][$i],
                            'personId' => $getMissingDetails[0]['Id']
                        );
                        $this->db->insert('userproperty',$insertPropdata);   
                    }
                }
            }
            if($_POST['oldfacephoto'] != '')
            {
                $getMissingDetails = $this->db->query('select * from missingperson where missingId='.$_SESSION['missingPersonId'])->result_array();
                if($_POST['isAvailable'] == 1)
                {
                    $getFullMissingDetails = $this->db->query('select * from missingpersondetail where missingId='.$getMissingDetails[0]['Id'])->result_array();
                    $getUserDetail = $this->db->query('select * from user where aadhar_id="'.$getMissingDetails[0]['missingaadhar'].'"')->result_array();
                    $updatedata = array(
                        'personNickname' => (($getMissingDetails[0]['personNickname'] != '') ? $getMissingDetails[0]['personNickname'] : $_POST['personNickname']),
                        'personFathername' => (($getMissingDetails[0]['personFathername'] != '') ? $getMissingDetails[0]['personFathername'] : $_POST['personFathername']),
                        'personMothername' => (($getMissingDetails[0]['personMothername'] != '') ? $getMissingDetails[0]['personMothername'] : $_POST['personMothername']),
                        'personSpousename' => (($getMissingDetails[0]['personSpousename'] != '') ? $getMissingDetails[0]['personSpousename'] : $_POST['personSpousename']),
                        'fatherstate' => (($getUserDetail[0]['curstate'] != '') ? $getUserDetail[0]['curstate'] : $_POST['curstate']),
                        'fathercurrentaddress' => (($getUserDetail[0]['curaddress'] != '') ? $getUserDetail[0]['curaddress'] : $_POST['curaddress']),
                        'fatherdistrict' => (($getUserDetail[0]['curdistrict'] != '') ? $getUserDetail[0]['curdistrict'] : $_POST['curdistrict']),
                        'fathercity' => (($getUserDetail[0]['curcity'] != '') ? $getUserDetail[0]['curcity'] : $_POST['curcity']),
                        'fatherpincode' => (($getUserDetail[0]['curpincode'] != '') ? $getUserDetail[0]['curpincode'] : $_POST['curpincode']),
                        'missingreligion' => (($getUserDetail[0]['religion'] != '') ? $getUserDetail[0]['religion'] : $_POST['religion']),
                        'missingdob' => (($getUserDetail[0]['dob'] != '') ? $getUserDetail[0]['dob'] : $_POST['dob']),
                        'missinggender' => (($getUserDetail[0]['gender'] != '') ? $getUserDetail[0]['gender'] : $_POST['gender']),
                        'facematchphoto' => $_POST['oldfacephoto'],
                        'goldType' => $_POST['goldType'],
                        'goldId' => $_POST['goldId'],
                        'vehicleNumber' => $_POST['vehicleNumber'],
                        'missingpan' => $_POST['missingpan'],
                        'missingdl' => $_POST['missingdl'],
                        'missingvoter' => $_POST['missingvoter']
                    );
                    $this->db->where('missingId',$_SESSION['missingPersonId']);
                    $update = $this->db->update('missingperson',$updatedata);
                    if($update)
                    {
                        $response = array(
                            'status' => 'success',
                            'message' => 'Data Saved Successfully'
                        );
                        echo json_encode($response);
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }else{
                    $updatedata = array(
                        'personNickname' => (($getMissingDetails[0]['personNickname'] != '') ? $getMissingDetails[0]['personNickname'] : $_POST['personNickname']),
                        'personFathername' => (($getMissingDetails[0]['personFathername'] != '') ? $getMissingDetails[0]['personFathername'] : $_POST['personFathername']),
                        'personMothername' => (($getMissingDetails[0]['personMothername'] != '') ? $getMissingDetails[0]['personMothername'] : $_POST['personMothername']),
                        'personSpousename' => (($getMissingDetails[0]['personSpousename'] != '') ? $getMissingDetails[0]['personSpousename'] : $_POST['personSpousename']),
                        'fatherstate' => (($getMissingDetails[0]['fatherstate'] != '') ? $getMissingDetails[0]['fatherstate'] : $_POST['curstate']),
                        'fathercurrentaddress' => (($getMissingDetails[0]['fathercurrentaddress'] != '') ? $getMissingDetails[0]['fathercurrentaddress'] : $_POST['curaddress']),
                        'fatherdistrict' => (($getMissingDetails[0]['fatherdistrict'] != '') ? $getMissingDetails[0]['fatherdistrict'] : $_POST['curdistrict']),
                        'fathercity' => (($getMissingDetails[0]['fathercity'] != '') ? $getMissingDetails[0]['fathercity'] : $_POST['curcity']),
                        'fatherpincode' => (($getMissingDetails[0]['fatherpincode'] != '') ? $getMissingDetails[0]['fatherpincode'] : $_POST['curpincode']),
                        'missingreligion' => (($getMissingDetails[0]['missingreligion'] != '') ? $getMissingDetails[0]['missingreligion'] : $_POST['religion']),
                        'missingdob' => (($getMissingDetails[0]['missingdob'] != '') ? $getMissingDetails[0]['missingdob'] : $_POST['dob']),
                        'missinggender' => (($getMissingDetails[0]['missinggender'] != '') ? $getMissingDetails[0]['missinggender'] : $_POST['gender']),
                        'goldType' => $_POST['goldType'],
                        'goldId' => $_POST['goldId'],
                        'vehicleNumber' => $_POST['vehicleNumber'],
                        'facematchphoto' => $_POST['oldfacephoto']
                    );
                    $this->db->where('missingId',$_SESSION['missingPersonId']);
                    $update = $this->db->update('missingperson',$updatedata);
                    if($update)
                    {
                        $response = array(
                            'status' => 'success',
                            'message' => 'Data Saved Successfully'
                        );
                        echo json_encode($response);
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }   
            }else{
                $response = array(
                        'status' => 'error',
                        'message' => 'Please Upload Face Match Photo'
                    );
                    echo json_encode($response);
                    return;
            }
        }
    }
    
    function updateMissingLatestPhotoForm()
    {
        if($_POST['imagecount'] == 0)
        {
            $response = array(
                'status' => 'error',
                'message' => 'One Latest Photo is required'
            );
            echo json_encode($response);
            return;   
        }else{
            $response = array(
                'status' => 'success',
                'message' => 'Photos saved successfully'
            );
            echo json_encode($response);
        }   
    }
    
    function updateMissingPersonPhoto()
    {
        $getOldData = $this->db->query('select * from missingpersonphotos where Id='.$_POST['Id'])->result_array();
        if(count($getOldData) > 0)
        {
            foreach($getOldData as $k=>$v)
            {
                unlink($v['photourl']);
            }
            $deleteold = $this->db->query('delete from missingpersonphotos where Id='.$_POST['Id']);
        }
        $filename = $_FILES["photo"]["name"];
        $ext = end((explode(".", $filename)));
        $filename = 'upload/missingperson/'.time().''.rand(0,10000).'.'.$ext;
        move_uploaded_file($_FILES['photo']['tmp_name'], $filename);
        switch ($ext) {
            case 'gif': //IMAGETYPE_GIF
                $image = imagecreatefromgif($filename);
                break;
            case 'jpg': //IMAGETYPE_JPEG
                $image = imagecreatefromjpeg($filename);
                break;
            case 'jpeg': //IMAGETYPE_JPEG
                $image = imagecreatefromjpeg($filename);
                break;
            case 'png': //IMAGETYPE_PNG
                $image = imagecreatefrompng($filename);
                break;
            case 'bmp': // IMAGETYPE_BMP
                $image = imagecreatefrombmp($filename);
                break;
            case 'xbm': //IMAGETYPE_XBM
                $image = imagecreatefromxbm($filename);
                break;
        }
        $newImagePath = 'upload/missingperson/'.time().''.rand(0,10000).'.webp';
        imagewebp($image,$newImagePath);
        imagedestroy($image);
        $insertdata = array(
            'photourl' => $newImagePath,
            'missingId' => $_POST['missingId']
        );
        $this->db->insert('missingpersonphotos',$insertdata);
        unlink($filename);
        $response = array(
            'status' => 'success',
            'message' => 'Photo Updated Successfully'
        );
        echo json_encode($response);   
    }
    
    function deleteMissingVehicle()
    {
        if($_GET['id'])
        {
            $getOldImageData = $this->db->query('select * from missingvehiclephotos where missingId='.$_GET['id'])->result_array();
            if(count($getOldImageData) > 0)
            {
                foreach($getOldImageData as $k=>$v)
                {
                    unlink($v['photourl']);
                }
                $deleteold = $this->db->query('delete from missingvehiclephotos where missingId='.$_GET['id']);
                $photos = array();
                $getLatestUserPhotos = $this->db->query('select * from missingvehiclephotos where missingId='.$_GET['id'])->result_array();   
                if(count($getLatestUserPhotos) > 0)
                {
                    foreach($getLatestUserPhotos as $k=>$v)
                    {
                        array_push($photos,$v['photourl']);
                    }
                }
                $updatetdata = array(
                    'photos' => json_encode($photos),
                );
                $this->db->where('Id',$_GET['id']);
                $this->db->update('missingvehicle',$updatetdata);
            }   
            $this->db->where('Id',$_GET['id']);
            $this->db->delete('missingvehicle');
        }else{
            $getOldData = $this->db->query('select * from missingvehiclephotos where missingId='.$id)->result_array();
            if(count($getOldData) > 0)
            {
                foreach($getOldData as $k=>$v)
                {
                    unlink($v['photourl']);
                }
                $deleteold = $this->db->query('delete from missingvehiclephotos where missingId='.$id);
                $photos = array();
                $getLatestUserPhotos = $this->db->query('select * from missingvehiclephotos where missingId='.$_SESSION['missingVehicleId'])->result_array();   
                if(count($getLatestUserPhotos) > 0)
                {
                    foreach($getLatestUserPhotos as $k=>$v)
                    {
                        array_push($photos,$v['photourl']);
                    }
                }
                $updatetdata = array(
                    'photos' => json_encode($photos),
                );
                $this->db->where('Id',$_SESSION['missingVehicleId']);
                $this->db->update('missingvehicle',$updatetdata);
            }
        }
    }
    
    function deleteMissingVehiclePhoto($id)
    {
        if($_GET['id'])
        {
            $getOldData = $this->db->query('select * from missingvehiclephotos where Id='.$id)->result_array();
            if(count($getOldData) > 0)
            {
                foreach($getOldData as $k=>$v)
                {
                    unlink($v['photourl']);
                }
                $deleteold = $this->db->query('delete from missingvehiclephotos where Id='.$id);
                $photos = array();
                $getLatestUserPhotos = $this->db->query('select * from missingvehiclephotos where missingId='.$_GET['id'])->result_array();   
                if(count($getLatestUserPhotos) > 0)
                {
                    foreach($getLatestUserPhotos as $k=>$v)
                    {
                        array_push($photos,$v['photourl']);
                    }
                }
                $updatetdata = array(
                    'photos' => json_encode($photos),
                );
                $this->db->where('Id',$_GET['id']);
                $this->db->update('missingvehicle',$updatetdata);
            }   
        }else{
            $getOldData = $this->db->query('select * from missingvehiclephotos where Id='.$id)->result_array();
            if(count($getOldData) > 0)
            {
                foreach($getOldData as $k=>$v)
                {
                    unlink($v['photourl']);
                }
                $deleteold = $this->db->query('delete from missingvehiclephotos where Id='.$id);
                $photos = array();
                $getLatestUserPhotos = $this->db->query('select * from missingvehiclephotos where missingId='.$_SESSION['missingVehicleId'])->result_array();   
                if(count($getLatestUserPhotos) > 0)
                {
                    foreach($getLatestUserPhotos as $k=>$v)
                    {
                        array_push($photos,$v['photourl']);
                    }
                }
                $updatetdata = array(
                    'photos' => json_encode($photos),
                );
                $this->db->where('Id',$_SESSION['missingVehicleId']);
                $this->db->update('missingvehicle',$updatetdata);
            }
        }
    }
    
    function deleteMissingPersonPhoto($id)
    {
        $getOldData = $this->db->query('select * from missingpersonphotos where Id='.$id)->result_array();
        if(count($getOldData) > 0)
        {
            foreach($getOldData as $k=>$v)
            {
                unlink($v['photourl']);
            }
            $deleteold = $this->db->query('delete from missingpersonphotos where Id='.$id);
        }
    }

    function updateMissingStep3Detail()
    {
        $updatedata = array(
            'fatherstate' => $_POST['missingstate'],
            'fatherdistrict' => $_POST['missingdistrict'],
            'fathercity' => $_POST['missingcity'],
            'fathervillage' => $_POST['missingvillage'],
            'fatherpincode' => $_POST['missingpincode'],
            'fathercurrentaddress' => $_POST['missingcurrent']
        );
        $this->db->where('Id',$_SESSION['missingNewId']);
        $update = $this->db->update('missingperson',$updatedata);
        if($update)
        {
            $response = array(
                'status' => 'success',
                'message' => 'Please provide some additional details'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }   
    }
    
    function getAadharName()
    {
        $getDetails = $this->db->query('select * from user where aadhar_id="'.$_POST['val'].'"')->result_array();
        if(count($getDetails) > 0)
        {
            $getIfAlready = $this->db->query('select * from missingperson where missingaadhar="'.$_POST['val'].'" and isVerified=1')->result_array();
            $isNominee = 'No';
            if($getDetails[0]['nominee1Aadhar'] == $_SESSION['aadhar_id'])
            {
                $isNominee = 'Yes';
            }
            if($getDetails[0]['nominee2Aadhar'] == $_SESSION['aadhar_id'])
            {
                $isNominee = 'Yes';
            }
            if($getDetails[0]['nominee3Aadhar'] == $_SESSION['aadhar_id'])
            {
                $isNominee = 'Yes';
            }
            if(count($getIfAlready) > 0)
            {
                $response = array(
                    'status' => 'success',
                    'name'=> $getDetails[0]['aadharname'],
                    'isAlready' => 1,
                    'isNominee' => $isNominee
                );   
            }else{
                $response = array(
                    'status' => 'success',
                    'name'=> $getDetails[0]['aadharname'],
                    'isAlready' => 0,
                    'isNominee' => $isNominee
                );
            }
        }else{
            $response = array(
                'status' => 'error',
                'message'=> 'No User Found'
            );
        }
        echo json_encode($response);
    }

    function create_complaints()
    {
        $aadhar = '';
        $name = '';
        if($_POST['isRegistered'] == 1)
        {
            $getIfAlready = $this->db->query('select * from user where aadhar_id='.$_POST['missingaadhar'])->result_array();
            if(count($getIfAlready) > 0)
            {
                $aadhar = $getIfAlready[0]['aadhar_id'];
                $name = $getIfAlready[0]['aadharname'];
                $insertdata = array(
                    'userId' => $_SESSION['user_id'],
                    'missingaadhar' => $_POST['missingaadhar'],
                    'missingname' => $_POST['missingName'],
                    'missingdob' => $getIfAlready[0]['dob'],
                    'missinggender' => $getIfAlready[0]['gender'],
                    'isMissingRegistered' => (isset($_POST['isRegistered']) ? 1 : 0)
                );
                $insert = $this->db->insert('missingperson',$insertdata);
                if($insert)
                {
                    $_SESSION['missingNewId'] = $this->db->insert_id();
                    $html = '';
                    $getMissingPersonDetails = $this->db->query('select * from missingperson where Id='.$_SESSION['missingNewId'])->result_array();
                    $html .= '<div class="row"><div class="col-lg-12"><hr><h5 style="font-weight:bold;text-align:center;">Enter Some Missing Person Details</h5><hr></div></div>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Aadhar Number</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly value="'.$getMissingPersonDetails[0]['missingaadhar'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Missing Person Name</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly value="'.$getMissingPersonDetails[0]['missingname'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Date of Birth</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" name="dob" required readonly value="'.$getMissingPersonDetails[0]['missingdob'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Gender</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly required name="gender" value="'.$getMissingPersonDetails[0]['missinggender'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Enter Religion</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" name="religion" required></div></div><hr>';
                    $html .= '<button type="submit" class="btn btn-success d-inline w-auto disabled-on-loading" style="background: darkblue!important;" id="okbtn"> Next</button>';
                    $response = array(
                        'html' => $html,
                        'status' => 'success',
                        'message' => 'Please provide some additional details'
                    );
                    echo json_encode($response);
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message'=> 'No user detail found in our records'
                );
                echo json_encode($response);
            }
        }else{
            if($_POST['preference'] == 1)
            {
                $getIfAlready = $this->db->query('select * from user where aadhar_id='.$_POST['preferredmissingaadhar'])->result_array();
                if(count($getIfAlready) > 0)
                {
                    $aadhar = $getIfAlready[0]['aadhar_id'];
                    $name = $getIfAlready[0]['aadharname'];
                    $insertdata = array(
                        'userId' => $_SESSION['user_id'],
                        'missingaadhar' => $_POST['preferredmissingaadhar'],
                        'missingname' => $_POST['preferredmissingname'],
                        'missingdob' => $getIfAlready[0]['dob'],
                        'missinggender' => $getIfAlready[0]['gender'],
                        'isMissingRegistered' => (isset($_POST['isRegistered']) ? 1 : 0)
                    );
                    $insert = $this->db->insert('missingperson',$insertdata);
                    if($insert)
                    {
                        $_SESSION['missingNewId'] = $this->db->insert_id();
                        $html = '';
                        $getMissingPersonDetails = $this->db->query('select * from missingperson where Id='.$_SESSION['missingNewId'])->result_array();
                        $html .= '<div class="row"><div class="col-lg-12"><hr><h5 style="font-weight:bold;text-align:center;">Enter Some Missing Person Details</h5><hr></div></div>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Aadhar Number</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly value="'.$getMissingPersonDetails[0]['missingaadhar'].'"></div></div><hr>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Missing Person Name</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly value="'.$getMissingPersonDetails[0]['missingname'].'"></div></div><hr>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Date of Birth</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" name="dob" required readonly value="'.$getMissingPersonDetails[0]['missingdob'].'"></div></div><hr>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Gender</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly required name="gender" value="'.$getMissingPersonDetails[0]['missinggender'].'"></div></div><hr>';
                        $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Enter Religion</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" name="religion" required></div></div><hr>';
                        $html .= '<button type="submit" class="btn btn-success d-inline w-auto disabled-on-loading" style="background: darkblue!important;" id="okbtn"> Next</button>';
                        $response = array(
                            'html' => $html,
                            'status' => 'success',
                            'message' => 'Please provide some additional details'
                        );
                        echo json_encode($response);
                    }else{
                        $response = array(
                            'status' => 'error',
                            'message' => 'Something Went Wrong'
                        );
                        echo json_encode($response);
                    }
                }else{
                    $response = array(
                        'status' => 'error',
                        'message'=> 'No user detail found in our records'
                    );
                    echo json_encode($response);
                }   
            }else{
                $name = $_FILES["aadharDoc"]["name"];
                $ext = end((explode(".", $name)));
                $filename = 'upload/aadhardoc/'.time().''.rand(0,10000).'.'.$ext;
                move_uploaded_file($_FILES['aadharDoc']['tmp_name'], $filename);
                $insertdata = array(
                    'missingaadhar' => $_POST['prefer2missingaadhar'],
                    'missingname' => $_POST['prefer2missingname'],
                    'userId' => $_SESSION['user_id'],
                    'aadharDoc' => $filename,
                    'isMissingRegistered' => (isset($_POST['isRegistered']) ? 1 : 0)
                );
                $insert = $this->db->insert('missingperson',$insertdata);
                if($insert)
                {
                    $_SESSION['missingNewId'] = $this->db->insert_id();
                    $html = '';
                    $getMissingPersonDetails = $this->db->query('select * from missingperson where Id='.$_SESSION['missingNewId'])->result_array();
                    $html .= '<div class="row"><div class="col-lg-12"><hr><h5 style="font-weight:bold;text-align:center;">Enter Some Missing Person Details</h5><hr></div></div>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Aadhar Number</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly value="'.$getMissingPersonDetails[0]['missingaadhar'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Missing Person Name</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly value="'.$getMissingPersonDetails[0]['missingname'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Date of Birth</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" name="dob" required readonly value="'.$getMissingPersonDetails[0]['missingdob'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Gender</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" readonly required name="gender" value="'.$getMissingPersonDetails[0]['missinggender'].'"></div></div><hr>';
                    $html .= '<div class="row"><div class="col-lg-3 col-md-4 label ">Enter Religion</div><div class="col-lg-9 col-md-8"><input type="text" class="form-control" name="religion" required></div></div><hr>';
                    $html .= '<button type="submit" class="btn btn-success d-inline w-auto disabled-on-loading" style="background: darkblue!important;" id="okbtn"> Next</button>';
                    $response = array(
                        'html' => $html,
                        'status' => 'success',
                        'message' => 'Please provide some additional details'
                    );
                    echo json_encode($response);
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }
        }
    }
    
    function getSubCategories($id)
    {
        $getSubCategories = $this->db->query('select * from subcategories where categoryId='.$id)->result_array();
        echo json_encode($getSubCategories);
    }
    
    function updateMissingStep7Detail()
    {
        for($i=0;$i<count($_POST['subcategory']);$i++)
        {
            $getCategory = $this->db->query('select * from subcategories where Id='.$_POST['subcategory'][$i])->result_array();
            $insertdata = array(
                'userCategory' => $getCategory[0]['categoryId'],
                'userSubCategory' => $_POST['subcategory'][$i],
                'personId' => $_SESSION['missingNewId']
            );
            $insert = $this->db->insert('userproperty',$insertdata);
        }
        $updatedata = array(
            'language' => $_POST['language'],
        );
        $this->db->where('Id',$_SESSION['missingNewId']);
        $update = $this->db->update('missingperson',$updatedata);
        if($update)
        {
            $response = array(
                'status' => 'success',
                'message' => 'Extra Details Saved Successfully'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }   
    }
    
    function verifyWellWisherMobileOtp()
    {
        $getPreviousDetail = $this->db->query('select * from user where aadhar_id="'.$_SESSION['aadhar_id'].'"')->result_array();
        if($_POST['otp'] == $getPreviousDetail[0]['otp'])
        {
            if($_POST['index'] == 2)
            {
                $updatedata = array(
                    'otherrelationname2' => ($_POST['relation'] == 23 ? $_POST['otherrelation'] : NULL),
                    'wellrel2' => $_POST['relation'],
                    'well2' => $_POST['mobile']
                );   
            }else if($_POST['index'] == 3)
            {
                $updatedata = array(
                    'otherrelationname3' => ($_POST['relation'] == 23 ? $_POST['otherrelation'] : NULL),
                    'wellrel3' => $_POST['relation'],
                    'well3' => $_POST['mobile']
                );   
            }
            else{
                $updatedata = array(
                    'otherrelationname1' => ($_POST['relation'] == 23 ? $_POST['otherrelation'] : NULL),
                    'wellrel1' => $_POST['relation'],
                    'well1' => $_POST['mobile']
                );
            }
            $this->db->where('uid',$getPreviousDetail[0]['uid']);
            $update = $this->db->update('user',$updatedata);
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'New Well Wisher Added Successfully'
                );
                echo json_encode($response);
            }else
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Otp Invalid'
            );
            echo json_encode($response);
        }   
    }
    
    function verifyNomineeMobileOtp()
    {
        $getPreviousDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['aadhar'].'"')->result_array();
        if($_POST['otp'] == $getPreviousDetail[0]['otp'])
        {
            if($_POST['index'] == 2)
            {
                $updatedata = array(
                    'othernomineename2' => ($_POST['relation'] == 23 ? $_POST['otherrelation'] : NULL),
                    'nominee2Aadhar' => $_POST['aadhar'],
                    'relation2' => $_POST['relation'],
                    'nominee2' => $_POST['mobile']
                );   
            }else if($_POST['index'] == 3)
            {
                $updatedata = array(
                    'othernomineename3' => ($_POST['relation'] == 23 ? $_POST['otherrelation'] : NULL),
                    'nominee3Aadhar' => $_POST['aadhar'],
                    'relation3' => $_POST['relation'],
                    'nominee3' => $_POST['mobile']
                );   
            }
            else{
                $updatedata = array(
                    'othernomineename1' => ($_POST['relation'] == 23 ? $_POST['otherrelation'] : NULL),
                    'nominee1Aadhar' => $_POST['aadhar'],
                    'relation1' => $_POST['relation'],
                    'nominee1' => $_POST['mobile']
                );
            }
            $this->db->where('uid',$_SESSION['user_id']);
            $update = $this->db->update('user',$updatedata);
            if($update)
            {
                if($_POST['index'] == 2)
                {
                    $updatedata = array(
                        'othernomineename2' => ($_POST['relation'] == 23 ? $_POST['otherrelation'] : NULL),
                        'nominee2Aadhar' => $_SESSION['aadhar_id'],
                        'relation2' => $_POST['relation'],
                        'nominee2' => $_POST['mobile']
                    );   
                }else if($_POST['index'] == 3)
                {
                    $updatedata = array(
                        'othernomineename3' => ($_POST['relation'] == 23 ? $_POST['otherrelation'] : NULL),
                        'nominee3Aadhar' => $_SESSION['aadhar_id'],
                        'relation3' => $_POST['relation'],
                        'nominee3' => $_POST['mobile']
                    );   
                }
                else{
                    $updatedata = array(
                        'othernomineename1' => ($_POST['relation'] == 23 ? $_POST['otherrelation'] : NULL),
                        'nominee1Aadhar' => $_SESSION['aadhar_id'],
                        'relation1' => $_POST['relation'],
                        'nominee1' => $_POST['mobile']
                    );
                }
                $this->db->where('aadhar_id',$_POST['aadhar']);
                $this->db->update('user',$updatedata);
                $response = array(
                    'status' => 'success',
                    'message' => 'New Nominee Added Successfully'
                );
                echo json_encode($response);
            }else
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Otp Invalid'
            );
            echo json_encode($response);
        }
    }

    function verifyProfileMobileOtp()
    {
        $getPreviousDetail = $this->db->query('select * from nonKycUser where uid="'.$_SESSION['user_id'].'"')->result_array();
        if($_POST['otp'] == $getPreviousDetail[0]['otp'])
        {
            if($_POST['index'] == 2)
            {
                $updatedata = array(
                    'alternate_mobile2' => $_POST['mobile']
                );   
            }else if($_POST['index'] == 3)
            {
                $updatedata = array(
                    'alternate_mobile3' => $_POST['mobile']
                );   
            }
            else{
                $updatedata = array(
                    'alternate_mobile1' => $_POST['mobile']
                );
            }
            $this->db->where('uid',$getPreviousDetail[0]['uid']);
            $update = $this->db->update('nonKycUser',$updatedata);
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'New Mobile Number Added Successfully'
                );
                echo json_encode($response);
            }else
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Otp Invalid'
            );
            echo json_encode($response);
        }
    }
    
    function saveVehiclePhoto()
    {
        if($_POST['imagecount'] == 0)
        {
            $response = array(
                'status' => 'error',
                'message' => 'One Vehicle Photo is required'
            );
            echo json_encode($response);
            return;   
        }else{
            $response = array(
                'status' => 'success',
                'message' => 'Photo Saved Successfully'
            );
            echo json_encode($response);
        }
    }

    function saveVehicleDoc()
    {
        $doc = array();
        for($i=1;$i<=$_POST['docCount'];$i++)
        {
            $name = $_FILES["docFile".$i]["name"];
            $ext = end((explode(".", $name)));
            $filename = 'upload/vehicle/doc/'.time().''.rand(0,10000).'.'.$ext;
            move_uploaded_file($_FILES['docFile'.$i]['tmp_name'], $filename);
            array_push($doc,array('docFile' => $filename,'docName'=>$_POST['vehicleDocName'.$i]));   
        }
        $updatedata = array(
            'vehiclePhoto' => json_encode($photo),
            'vehicleDoc' => json_encode($doc)
        );
        $this->db->where('Id',$_SESSION['vehicleId']);
        $update = $this->db->update('vehicles',$updatedata);
        if($update)
        {
            $response = array(
                'status' => 'success',
                'message' => 'Details Saved Successfully'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }
    }

    function addVehicleMobile()
    {
        $updatedata = array(
            'mobile1' => $_POST['mob1'],
            'mobile2' => $_POST['mob2'],
            'mobile3' => $_POST['mob3'],
        );
        $this->db->where('Id',$_SESSION['vehicleId']);
        $update = $this->db->update('vehicles',$updatedata);
        if($update)
        {
            $response = array(
                'status' => 'success',
                'message' => 'Contacts Saved Successfully'
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }
    }

    function savePayment()
    {
        $updatedata = array(
            'finalAmount' => $_POST['payment'],
            'paymentStatus' => 1,
            'paymentId' => $_POST['paymentId']
        );
        $this->db->where('Id',$_SESSION['vehicleId']);
        $update = $this->db->update('vehicles',$updatedata);
        if($update)
        {
            $response = array(
                'status' => 'success',
                'message' => 'Vehicle data successfully uploaded and messages will be sent to your mobile number and registered email id' 
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }

    }

    function verifyVehicleMobileOtp()
    {
        if(isset($_POST['id']))
        {
            $getPreviousDetail = $this->db->query('select * from vehicles where Id='.$_POST['id'])->result_array();
            if($_POST['otp'] == $getPreviousDetail[0]['otp'])
            {
                if($_POST['count'] == 1)
                {
                    $updatedata = array(
                        'otherrelationname1' => ($_POST['relation'] == 3 ? $_POST['otherrelation'] : NULL),
                        'relation1' => $_POST['relation'],
                        'mobile1' => $_POST['mobile'],
                    );   
                }
                else if($_POST['count'] == 2)
                {
                    $updatedata = array(
                        'otherrelationname2' => ($_POST['relation'] == 3 ? $_POST['otherrelation'] : NULL),
                        'relation2' => $_POST['relation'],
                        'mobile2' => $_POST['mobile'],
                    );   
                }else{
                    $updatedata = array(
                        'otherrelationname3' => ($_POST['relation'] == 3 ? $_POST['otherrelation'] : NULL),
                        'relation3' => $_POST['relation'],
                        'mobile3' => $_POST['mobile']
                    );   
                }
                $this->db->where('Id',$_POST['id']);
                $update = $this->db->update('vehicles',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Contact Saved Successfully'
                    );
                    echo json_encode($response);
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Otp Invalid'
                );
                echo json_encode($response);
            }
        }else{
            $getPreviousDetail = $this->db->query('select * from vehicles where Id='.$_SESSION['vehicleId'])->result_array();
            if($_POST['otp'] == $getPreviousDetail[0]['otp'])
            {
                if($_POST['count'] == 1)
                {
                    $updatedata = array(
                        'otherrelationname1' => ($_POST['relation'] == 3 ? $_POST['otherrelation'] : NULL),
                        'relation1' => $_POST['relation'],
                        'mobile1' => $_POST['mobile'],
                    );   
                }
                else if($_POST['count'] == 2)
                {
                    $updatedata = array(
                        'otherrelationname2' => ($_POST['relation'] == 3 ? $_POST['otherrelation'] : NULL),
                        'relation2' => $_POST['relation'],
                        'mobile2' => $_POST['mobile'],
                    );   
                }else{
                    $updatedata = array(
                        'otherrelationname3' => ($_POST['relation'] == 3 ? $_POST['otherrelation'] : NULL),
                        'relation3' => $_POST['relation'],
                        'mobile3' => $_POST['mobile']
                    );   
                }
                $this->db->where('Id',$_SESSION['vehicleId']);
                $update = $this->db->update('vehicles',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Contact Saved Successfully'
                    );
                    echo json_encode($response);
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Otp Invalid'
                );
                echo json_encode($response);
            }   
        }
    }
    
    function sendDeleteVehicleMissingContactOtp()
    {
        if(isset($_POST['id']))
        {
            $string = '0123456789';
            $string_shuffled = str_shuffle($string);
            $otp = substr($string_shuffled, 1, 4);
            $this->sendTextLocalOtp($_SESSION['aadharName'],$_POST['mobile'],$otp);
            $updatedata = array(
                'otp' => $otp
            );
            $this->db->where('Id',$_POST['id']);
            $this->db->update('missingvehicle',$updatedata);   
        }else{
            $string = '0123456789';
            $string_shuffled = str_shuffle($string);
            $otp = substr($string_shuffled, 1, 4);
            $this->sendTextLocalOtp($_SESSION['aadharName'],$_POST['mobile'],$otp);
            $updatedata = array(
                'otp' => $otp
            );
            $this->db->where('Id',$_SESSION['missingVehicleId']);
            $this->db->update('missingvehicle',$updatedata);
        }
    }
    
    function sendDeletePersonContactOtp()
    {
        $string = '0123456789';
        $string_shuffled = str_shuffle($string);
        $otp = substr($string_shuffled, 1, 4);
        $this->sendTextLocalOtp($_SESSION['aadharName'],$_POST['mobile'],$otp);
        $updatedata = array(
            'otp' => $otp
        );
        $this->db->where('missingId',$_SESSION['missingPersonId']);
        $this->db->update('missingperson',$updatedata);
    }
    
    function sendDeleteVehicleContactOtp()
    {
        if(isset($_POST['id']))
        {
            $string = '0123456789';
            $string_shuffled = str_shuffle($string);
            $otp = substr($string_shuffled, 1, 4);
            $this->sendTextLocalOtp($_SESSION['aadharName'],$_POST['mobile'],$otp);
            $updatedata = array(
                'otp' => $otp
            );
            $this->db->where('Id',$_POST['id']);
            $this->db->update('vehicles',$updatedata);   
        }else{
            $string = '0123456789';
            $string_shuffled = str_shuffle($string);
            $otp = substr($string_shuffled, 1, 4);
            $this->sendTextLocalOtp($_SESSION['aadharName'],$_POST['mobile'],$otp);
            $updatedata = array(
                'otp' => $otp
            );
            $this->db->where('Id',$_SESSION['vehicleId']);
            $this->db->update('vehicles',$updatedata);
        }
    }
    
    function verifyVehicleMissingMobileOtp()
    {
        if(isset($_POST['id']))
        {
            $getPreviousDetail = $this->db->query('select * from missingvehicle where Id='.$_POST['id'])->result_array();
            if($_POST['otp'] == $getPreviousDetail[0]['otp'])
            {
                if($_POST['count'] == 1)
                {
                    $updatedata = array(
                        'otherrelationname1' => ($_POST['relation'] == 3 ? $_POST['otherrelation'] : NULL),
                        'relation1' => $_POST['relation'],
                        'mobile1' => $_POST['mobile'],
                    );   
                }
                else if($_POST['count'] == 2)
                {
                    $updatedata = array(
                        'otherrelationname2' => ($_POST['relation'] == 3 ? $_POST['otherrelation'] : NULL),
                        'relation2' => $_POST['relation'],
                        'mobile2' => $_POST['mobile'],
                    );   
                }else{
                    $updatedata = array(
                        'otherrelationname3' => ($_POST['relation'] == 3 ? $_POST['otherrelation'] : NULL),
                        'relation3' => $_POST['relation'],
                        'mobile3' => $_POST['mobile']
                    );   
                }
                $this->db->where('Id',$_POST['id']);
                $update = $this->db->update('missingvehicle',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Contact Saved Successfully'
                    );
                    echo json_encode($response);
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Otp Invalid'
                );
                echo json_encode($response);
            }
        }else{
            $getPreviousDetail = $this->db->query('select * from missingvehicle where Id='.$_SESSION['missingVehicleId'])->result_array();
            if($_POST['otp'] == $getPreviousDetail[0]['otp'])
            {
                if($_POST['count'] == 1)
                {
                    $updatedata = array(
                        'otherrelationname1' => ($_POST['relation'] == 3 ? $_POST['otherrelation'] : NULL),
                        'relation1' => $_POST['relation'],
                        'mobile1' => $_POST['mobile'],
                    );   
                }
                else if($_POST['count'] == 2)
                {
                    $updatedata = array(
                        'otherrelationname2' => ($_POST['relation'] == 3 ? $_POST['otherrelation'] : NULL),
                        'relation2' => $_POST['relation'],
                        'mobile2' => $_POST['mobile'],
                    );   
                }else{
                    $updatedata = array(
                        'otherrelationname3' => ($_POST['relation'] == 3 ? $_POST['otherrelation'] : NULL),
                        'relation3' => $_POST['relation'],
                        'mobile3' => $_POST['mobile']
                    );   
                }
                $this->db->where('Id',$_SESSION['missingVehicleId']);
                $update = $this->db->update('missingvehicle',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Contact Saved Successfully'
                    );
                    echo json_encode($response);
                }else{
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Otp Invalid'
                );
                echo json_encode($response);
            }   
        }
    }
    
    function sendVehicleMissingMobileOtp()
    {
        if(isset($_POST['id']))
        {
            $getIfAlreadyOtherInMobile1 = $this->db->query('select * from missingvehicle where mobile1="'.$_POST['mobile'].'" and Id='.$_POST['id'])->result_array();
            $getIfAlreadyOtherInMobile2 = $this->db->query('select * from missingvehicle where mobile2="'.$_POST['mobile'].'" and Id='.$_POST['id'])->result_array();
            $getIfAlreadyOtherInMobile3 = $this->db->query('select * from missingvehicle where mobile3="'.$_POST['mobile'].'" and Id='.$_POST['id'])->result_array();
            if(count($getIfAlreadyOtherInMobile1) > 0 || count($getIfAlreadyOtherInMobile2) > 0 || count($getIfAlreadyOtherInMobile3) > 0)
            {
                $response = array(
                    'status' => 'username',
                    'message' => 'Mobile number already added'
                );
                echo json_encode($response);
            }else{
                // $otp = '1234';
                $string = '0123456789';
                $string_shuffled = str_shuffle($string);
                $otp = substr($string_shuffled, 1, 4);
                $this->sendTextLocalOtp($_SESSION['username'],$_POST['mobile'],$otp);
                $updatedata = array(
                    'otp' => $otp
                );
                $this->db->where('Id',$_POST['id']);
                $update = $this->db->update('missingvehicle',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Otp Sent Successfully'
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }
        }else{
            $getIfAlreadyOtherInMobile1 = $this->db->query('select * from missingvehicle where mobile1="'.$_POST['mobile'].'" and Id='.$_SESSION['missingVehicleId'])->result_array();
            $getIfAlreadyOtherInMobile2 = $this->db->query('select * from missingvehicle where mobile2="'.$_POST['mobile'].'" and Id='.$_SESSION['missingVehicleId'])->result_array();
            $getIfAlreadyOtherInMobile3 = $this->db->query('select * from missingvehicle where mobile3="'.$_POST['mobile'].'" and Id='.$_SESSION['missingVehicleId'])->result_array();
            if(count($getIfAlreadyOtherInMobile1) > 0 || count($getIfAlreadyOtherInMobile2) > 0 || count($getIfAlreadyOtherInMobile3) > 0)
            {
                $response = array(
                    'status' => 'username',
                    'message' => 'Mobile number already added'
                );
                echo json_encode($response);
            }else{
                // $otp = '1234';
                $string = '0123456789';
                $string_shuffled = str_shuffle($string);
                $otp = substr($string_shuffled, 1, 4);
                $this->sendTextLocalOtp($_SESSION['username'],$_POST['mobile'],$otp);
                $updatedata = array(
                    'otp' => $otp
                );
                $this->db->where('Id',$_SESSION['missingVehicleId']);
                $update = $this->db->update('missingvehicle',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Otp Sent Successfully'
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }
        }
    }

    function sendVehicleMobileOtp()
    {
        if(isset($_POST['id']))
        {
            $getIfAlreadyOtherInMobile1 = $this->db->query('select * from vehicles where mobile1="'.$_POST['mobile'].'" and Id='.$_POST['id'])->result_array();
            $getIfAlreadyOtherInMobile2 = $this->db->query('select * from vehicles where mobile2="'.$_POST['mobile'].'" and Id='.$_POST['id'])->result_array();
            $getIfAlreadyOtherInMobile3 = $this->db->query('select * from vehicles where mobile3="'.$_POST['mobile'].'" and Id='.$_POST['id'])->result_array();
            if(count($getIfAlreadyOtherInMobile1) > 0 || count($getIfAlreadyOtherInMobile2) > 0 || count($getIfAlreadyOtherInMobile3) > 0)
            {
                $response = array(
                    'status' => 'username',
                    'message' => 'Mobile number already added'
                );
                echo json_encode($response);
            }else{
                // $otp = '1234';
                $string = '0123456789';
                $string_shuffled = str_shuffle($string);
                $otp = substr($string_shuffled, 1, 4);
                $this->sendTextLocalOtp($_SESSION['username'],$_POST['mobile'],$otp);
                $updatedata = array(
                    'otp' => $otp
                );
                $this->db->where('Id',$_POST['id']);
                $update = $this->db->update('vehicles',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Otp Sent Successfully'
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }
        }else{
            $getIfAlreadyOtherInMobile1 = $this->db->query('select * from vehicles where mobile1="'.$_POST['mobile'].'" and Id='.$_SESSION['vehicleId'])->result_array();
            $getIfAlreadyOtherInMobile2 = $this->db->query('select * from vehicles where mobile2="'.$_POST['mobile'].'" and Id='.$_SESSION['vehicleId'])->result_array();
            $getIfAlreadyOtherInMobile3 = $this->db->query('select * from vehicles where mobile3="'.$_POST['mobile'].'" and Id='.$_SESSION['vehicleId'])->result_array();
            if(count($getIfAlreadyOtherInMobile1) > 0 || count($getIfAlreadyOtherInMobile2) > 0 || count($getIfAlreadyOtherInMobile3) > 0)
            {
                $response = array(
                    'status' => 'username',
                    'message' => 'Mobile number already added'
                );
                echo json_encode($response);
            }else{
                // $otp = '1234';
                $string = '0123456789';
                $string_shuffled = str_shuffle($string);
                $otp = substr($string_shuffled, 1, 4);
                $this->sendTextLocalOtp($_SESSION['username'],$_POST['mobile'],$otp);
                $updatedata = array(
                    'otp' => $otp
                );
                $this->db->where('Id',$_SESSION['vehicleId']);
                $update = $this->db->update('vehicles',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Otp Sent Successfully'
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }
        }
    }
    
    function profile($para = '')
    {
        if($para == '')
        {
            if(isset($_SESSION['landingMob'])){
                $page_data['title'] = 'Profile';
                $page_data['page_name'] = 'profile';
                $this->load->view('nonkyc/index', $page_data);
              } else {
                 redirect('login','refresh');
              }
        }else{
        }
    }
    
    function sendWellWisherMobileOtp()
    {
        $getPreviousDetail = $this->db->query('select * from user where aadhar_id="'.$_SESSION['aadhar_id'].'"')->result_array();
        $getIfAlreadyOtherInNominee1 = $this->db->query('select * from user where well1="'.$_POST['mobile'].'" and uid='.$_SESSION['user_id'])->result_array();
        $getIfAlreadyOtherInNominee2 = $this->db->query('select * from user where well2="'.$_POST['mobile'].'" and uid='.$_SESSION['user_id'])->result_array();
        $getIfAlreadyOtherInNominee3 = $this->db->query('select * from user where well3="'.$_POST['mobile'].'" and uid='.$_SESSION['user_id'])->result_array();
        if(count($getIfAlreadyOtherInNominee1) > 0 || count($getIfAlreadyOtherInNominee2) > 0 || count($getIfAlreadyOtherInNominee3) > 0)
        {
            $response = array(
                'status' => 'username',
                'message' => 'Well Wisher mobile number already added'
            );
            echo json_encode($response);
        }else{
            // $otp = '1234';
            $string = '0123456789';
            $string_shuffled = str_shuffle($string);
            $otp = substr($string_shuffled, 1, 4);
            $sendStatus = $this->sendMessage91Otp($getPreviousDetail[0]['aadharname'],$_POST['mobile'],$otp,$this->config->item('login_template_id'));
            if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                $response = [
                    'status' => 'error',
                    'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                ];
                echo json_encode($response);
                die();
            }
            $updatedata = array(
                'otp' => $otp
            );
            $this->db->where('uid',$getPreviousDetail[0]['uid']);
            $update = $this->db->update('user',$updatedata);
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'Otp Sent Successfully'
                );
                echo json_encode($response);
            }else
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
    }
    
    function sendNomineeMobileOtp()
    {
        $getPreviousDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['typeval'].'"')->result_array();
        $getIfAlreadyOtherInRegistered = $this->db->query('select * from user where registration_mobile="'.$_POST['mobile'].'" and aadhar_id="'.$_POST['typeval'].'"')->result_array();
        $getIfAlreadyOtherInAlternate1 = $this->db->query('select * from user where alternate_mobile1="'.$_POST['mobile'].'" and aadhar_id="'.$_POST['typeval'].'"')->result_array();
        $getIfAlreadyOtherInAlternate2 = $this->db->query('select * from user where alternate_mobile2="'.$_POST['mobile'].'" and aadhar_id="'.$_POST['typeval'].'"')->result_array();
        $getIfAlreadyOtherInAlternate3 = $this->db->query('select * from user where alternate_mobile3="'.$_POST['mobile'].'" and aadhar_id="'.$_POST['typeval'].'"')->result_array();
        if(count($getIfAlreadyOtherInRegistered) == 0 && count($getIfAlreadyOtherInAlternate1) == 0 && count($getIfAlreadyOtherInAlternate2) == 0 && count($getIfAlreadyOtherInAlternate3) == 0)
        {
            $response = array(
                'status' => 'username',
                'message' => 'This mobile number is not registered in your record'
            );
            echo json_encode($response);
        }else{
            $getIfAlreadyOtherInNominee1 = $this->db->query('select * from user where nominee1="'.$_POST['mobile'].'" and uid='.$_SESSION['user_id'])->result_array();
            $getIfAlreadyOtherInNominee2 = $this->db->query('select * from user where nominee2="'.$_POST['mobile'].'" and uid='.$_SESSION['user_id'])->result_array();
            $getIfAlreadyOtherInNominee3 = $this->db->query('select * from user where nominee3="'.$_POST['mobile'].'" and uid='.$_SESSION['user_id'])->result_array();
            if(count($getIfAlreadyOtherInNominee1) > 0 || count($getIfAlreadyOtherInNominee2) > 0 || count($getIfAlreadyOtherInNominee3) > 0)
            {
                $response = array(
                    'status' => 'username',
                    'message' => 'This mobile number is already available in your nominee details.'
                );
                echo json_encode($response);
            }else{
                // $otp = '1234';
                $getPreviousDetail = $this->db->query('select * from user where uid="'.$_SESSION['typeval'].'"')->result_array();
                $string = '0123456789';
                $string_shuffled = str_shuffle($string);
                $otp = substr($string_shuffled, 1, 4);
                $sendStatus = $this->sendMessage91Otp($getPreviousDetail[0]['aadharname'],$_POST['mobile'],$otp,$this->config->item('login_template_id'));
                if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                    $response = [
                        'status' => 'error',
                        'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                    ];
                    echo json_encode($response);
                    die();
                }
                $updatedata = array(
                    'otp' => $otp
                );
                $this->db->where('uid',$getPreviousDetail[0]['uid']);
                $update = $this->db->update('user',$updatedata);
                if($update)
                {
                    $response = array(
                        'status' => 'success',
                        'message' => 'Otp Sent Successfully',
                        'vismobile1' => substr_replace($_POST['mobile'],'xxxxxx',0,7)
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }
        }
    }

    function verifyClaimOtp()
    {
        $getPreviousDetail = $this->db->query('select * from user where uid='.$_SESSION['user_id'])->result_array();
        if($_POST['otp'] == $getPreviousDetail[0]['otp'])
        {
            $insertData = array(
                'applicationNumber' => $_POST['appNo'],
                'uploadedBy' => $_POST['uploadedBy'],
                'mobileNumber' => $_POST['mobile'],
                'userId' => $_SESSION['user_id'],
                'dateCreated' => date('Y-m-d H:i:s'),
                'username' => ($_POST['uploaded_by'] == 'police' ? $_POST['thanaUsername'] : $_POST['username']),
                'uploaderAadhar' => ($_POST['uploaded_by'] == 'police' ? NULL : $_POST['aadharNumber'])
            );
            $insert = $this->db->insert('handover', $insertData);
            $_SESSION['handoverId'] = $this->db->insert_id();
            echo json_encode(array('status' => 'success','message' => 'Verification Successful'));
        }else{
            echo json_encode(array('status' => 'error','message' => 'OTP Invalid'));
        }
    }

    function updateHandoverPreference()
    {
        $updatedata = array(
            'handOverType' => $_POST['handOverType']
        );
        $this->db->where('Id',$_SESSION['handoverId']);
        $update = $this->db->update('handover',$updatedata);
    }

    function checkHandoverFace()
    {
        $curl = curl_init();
        curl_setopt_array($curl, array(
            CURLOPT_URL => 'https://shammtech.in/api/validate-api',
            CURLOPT_RETURNTRANSFER => true,
            CURLOPT_CUSTOMREQUEST => 'GET',
            CURLOPT_HTTPHEADER => array(
                'Accept: application/json'
            ),
        ));
        $response = json_decode(curl_exec($curl),true);
        curl_close($curl);
        if($response['status'] == 'success')
        {
            $data = $_POST["mainPhotoSelectedFacematch"];
            $image_array_1 = explode(";", $data);
            $split1 = explode('data:image/',$image_array_1[0]);
            $image_array_2 = explode(",", $image_array_1[1]);
            $data = base64_decode($image_array_2[1]);
            $imageId1 = time().''.rand(0,10000);
            $mainphoto1 = 'upload/handover/'.$imageId1.'.'.$split1[1];
            file_put_contents($mainphoto1, $data);
            $curl = curl_init();
            curl_setopt_array($curl, array(
              CURLOPT_URL => 'http://ec2-13-201-84-246.ap-south-1.compute.amazonaws.com/',
              CURLOPT_RETURNTRANSFER => true,
              CURLOPT_ENCODING => '',
              CURLOPT_MAXREDIRS => 10,
              CURLOPT_TIMEOUT => 0,
              CURLOPT_FOLLOWLOCATION => true,
              CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
              CURLOPT_CUSTOMREQUEST => 'POST',
              CURLOPT_POSTFIELDS => 'image1='.base_url().''.$mainphoto1.'&image2='.$_POST['image2'],
              CURLOPT_HTTPHEADER => array(
                'Content-Type: application/x-www-form-urlencoded'
              ),
            ));
            
            $response = json_decode(curl_exec($curl),true);
            if($response['message'] != 'Internal Server Error')
            {
                if($response['confidence'] >= $this->getSettings('ourFRTThreshold'))
                {
                    $updatedata = array(
                        'personPhoto' => $mainphoto1,
                        'status' => 1
                    );
                    $this->db->where('Id',$_SESSION['handoverId']);
                    $update = $this->db->update('handover',$updatedata);
                    curl_close($curl);      
                    $finalresponse = array(
                        'status' => 'success',
                    );
                    echo json_encode($finalresponse);   
                }else{
                    unlink($mainphoto1);
                    $finalResponse = array(
                        'status' => 'error',
                        'message' => 'Face not matching with first photo'
                    );
                    echo json_encode($finalResponse);   
                    die();    
                }
            }else
            {
                unlink($mainphoto1);
                $finalResponse = array(
                    'status' => 'error',
                    'message' => 'Face not matching with first photo'
                );
                echo json_encode($finalResponse);   
                die();
            }
        }else{
            $finalResponse = array(
                'status' => 'error',
                'message' => $response['message']
            );
            echo json_encode($finalResponse);   
            die();       
        }
    }

    function sendClaimOtp()
    {
        $string = '0123456789';
        $string_shuffled = str_shuffle($string);
        $otp = substr($string_shuffled, 1, 4);
        $this->sendTextLocalOtp($_POST['username'],$_POST['mobile'],$otp);
        $updatedata = array(
            'otp' => $otp
        );
        $this->db->where('uid',$_SESSION['user_id']);
        $update = $this->db->update('user',$updatedata);
        if($update)
        {
            $response = array(
                'status' => 'success',
                'message' => 'OTP Sent Successfully',
            );
            echo json_encode($response);
        }else
        {
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }
    }

    function sendProfileMobileOtp()
    {
        $getPreviousDetail = $this->db->query('select * from nonKycUser where uid="'.$_SESSION['user_id'].'"')->result_array();
        $getIfAlreadyOtherInAlternate1 = $this->db->query('select * from nonKycUser where alternate_mobile1="'.$_POST['mobile'].'" and uid='.$_SESSION['user_id'])->result_array();
        $getIfAlreadyOtherInRegistered = $this->db->query('select * from nonKycUser where registration_mobile="'.$_POST['mobile'].'" and uid='.$_SESSION['user_id'])->result_array();
        $getIfAlreadyOtherInAlternate2 = $this->db->query('select * from nonKycUser where alternate_mobile2="'.$_POST['mobile'].'" and uid='.$_SESSION['user_id'])->result_array();
        if(count($getIfAlreadyOtherInAlternate2) > 0 || count($getIfAlreadyOtherInAlternate1) > 0 || count($getIfAlreadyOtherInRegistered) > 0)
        {
            $response = array(
                'status' => 'username',
                'message' => 'Note- This number already exist in your profile.'
            );
            echo json_encode($response);
        }else{
            $string = '0123456789';
            $string_shuffled = str_shuffle($string);
            $otp = substr($string_shuffled, 1, 4);
            $sendStatus = $this->sendMessage91Otp($getPreviousDetail[0]['aadharname'],$_POST['mobile'],$otp,$this->config->item('login_template_id'));
            if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                $response = [
                    'status' => 'error',
                    'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                ];
                echo json_encode($response);
                die();
            }
            $updatedata = array(
                'otp' => $otp
            );
            $this->db->where('uid',$getPreviousDetail[0]['uid']);
            $update = $this->db->update('nonKycUser',$updatedata);
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'OTP Sent Successfully To - '.substr_replace($_POST['mobile'],'XXXXXXX',0,7)
                );
                echo json_encode($response);
            }else
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
        // $getIfAlreadyOtherInAlternate1 = $this->db->query('select * from user where alternate_mobile1="'.$_POST['mobile'].'"')->result_array();
        // $getIfAlreadyOtherInAlternate2 = $this->db->query('select * from user where alternate_mobile2="'.$_POST['mobile'].'"')->result_array();
        // $getIfAlreadyOtherInRegistered = $this->db->query('select * from user where registration_mobile="'.$_POST['mobile'].'"')->result_array();
        // if(count($getIfAlreadyOtherInAlternate2) > 0 || count($getIfAlreadyOtherInAlternate1) > 0 || count($getIfAlreadyOtherInRegistered) > 0)
        // {
        //     $response = array(
        //         'status' => 'username',
        //         'message' => 'Alternate mobile number already exists in our records'
        //     );
        //     echo json_encode($response);
        // }else{
        //     // $otp = '1234';
        //     $string = '0123456789';
        //     $string_shuffled = str_shuffle($string);
        //     $otp = substr($string_shuffled, 1, 4);
        //     $this->sendTextLocalOtp($getPreviousDetail[0]['aadharname'],$_POST['mobile'],$otp);
        //     $updatedata = array(
        //         'otp' => $otp
        //     );
        //     $this->db->where('uid',$getPreviousDetail[0]['uid']);
        //     $update = $this->db->update('user',$updatedata);
        //     if($update)
        //     {
        //         $response = array(
        //             'status' => 'success',
        //             'message' => 'Otp Sent Successfully'
        //         );
        //         echo json_encode($response);
        //     }else
        //     {
        //         $response = array(
        //             'status' => 'error',
        //             'message' => 'Something Went Wrong'
        //         );
        //         echo json_encode($response);
        //     }
        // }
    }

    function changeOther()
    {
        $getPreviousDetail = $this->db->query('select * from user where aadhar_id="'.$_SESSION['aadharId'].'"')->result_array();
        if(isset($_POST['othershow']))
        {
            $getIfAlreadyOtherInAlternate = $this->db->query('select * from user where alternate_mobile="'.$_POST['othermob'].'" and aadhar_id !="'.$_SESSION['aadharId'].'"')->result_array();
            $getIfAlreadyOtherInRegistered = $this->db->query('select * from user where registration_mobile="'.$_POST['othermob'].'"')->result_array();
        }else
        {
            $getIfAlreadyOtherInAlternate = array();
            $getIfAlreadyOtherInRegistered = array();
        }
        if(count($getIfAlreadyOtherInAlternate) > 0 || count($getIfAlreadyOtherInRegistered) > 0)
        {
            $response = array(
                'status' => 'username',
                'message' => 'Alternate mobile number already exists in our records'
            );
            echo json_encode($response);
        }else{
            // $otp = '1234';
            if(isset($_POST['othershow']))
            {
                $_SESSION['othermob'] = $_POST['othermob'];
                $string = '0123456789';
                $string_shuffled = str_shuffle($string);
                $otp = substr($string_shuffled, 1, 4);
                $sendStatus = $this->sendMessage91Otp($getPreviousDetail[0]['username'],$_POST['othermob'],$otp,$this->config->item('login_template_id'));
                if (!$sendStatus || (isset($sendStatus['status']) && $sendStatus['status'] == 'error')) {
                    $response = [
                        'status' => 'error',
                        'message'    => isset($sendStatus['message']) ? $sendStatus['message'] : 'Failed to send OTP. Please try again later.'
                    ];
                    echo json_encode($response);
                    die();
                }
                $updatedata = array(
                    'alternate_mobile' => (isset($_POST['othershow']) ? $_POST['othermob'] : NULL),
                    'otp' => $otp
                );
                $this->db->where('uid',$getPreviousDetail[0]['uid']);
                $update = $this->db->update('user',$updatedata);
                if($update)
                {
                    $response = array(
                        'isOther' => (isset($_POST['othershow']) ? true : false),
                        'status' => 'success',
                        'message' => 'OTP Sent Successfully To - '.substr_replace($_POST['othermob'],'XXXXXXX',0,7)
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }else
            {
                $otp = '1234';
                $updatedata = array(
                    'alternate_mobile' => (isset($_POST['othershow']) ? $_POST['othermob'] : NULL),
                    'otp' => $otp,
                    'final_mobile_verification' => 'success'
                );
                $this->db->where('uid',$getPreviousDetail[0]['uid']);
                $update = $this->db->update('user',$updatedata);
                if($update)
                {
                    $this->session->set_userdata('loginmob',$_POST['othermob']);
                    $this->session->set_userdata('user_login', 'yes');
                    $this->session->set_userdata('user_id', $getPreviousDetail[0]['uid']);
                    $this->session->set_userdata('aadhar_id', $getPreviousDetail[0]['aadhar_id']);
                    $this->session->set_userdata('username', $getPreviousDetail[0]['username']);
                    $this->session->set_userdata('login_type', 'user');
                    $response = array(
                        'isOther' => (isset($_POST['othershow']) ? true : false),
                        'status' => 'success',
                        'message' => 'Id Created Successfully'
                    );
                    echo json_encode($response);
                }else
                {
                    $response = array(
                        'status' => 'error',
                        'message' => 'Something Went Wrong'
                    );
                    echo json_encode($response);
                }
            }
        }
    }
    
    function add_address()
    {
        $getPreviousDetail = $this->db->query('select * from user where aadhar_id="'.$_SESSION['aadhar_id'].'"')->result_array();
        $updatedata = array(
            'correspondaddress' => (($_POST['correspondaddress'] != '') ? $_POST['correspondaddress'] : NULL),
        );
        $this->db->where('uid',$getPreviousDetail[0]['uid']);
        $update = $this->db->update('user',$updatedata);
        if($update)
        {
            $response = array(
                'status' => 'success',
                'message' => 'Profile Updated Successfully'
            );
            echo json_encode($response);
        }else
        {
            $response = array(
                'status' => 'error',
                'message' => 'Something Went Wrong'
            );
            echo json_encode($response);
        }
    }

    function step2($para = ''){
        if($para == '')
        {
            $page_data['title'] = 'Step2';
            $page_data['control'] = 'user';
            $this->load->view('NonKyc/common/header',$page_data); 
            $this->load->view('NonKyc/step2');
            $this->load->view('NonKyc/common/footer'); 
        }else{
            $getPreviousDetail = $this->db->query('select * from nonKycUser where registration_mobile="'.$_SESSION['landingMob'].'"')->result_array();
            $updatedata = array(
                'email_id' => (($_POST['email'] != '') ? $_POST['email'] : NULL),
                'aadharname' => $_POST['aadharname'],
                'dob' => $_POST['dob'],
                'gender' => $_POST['gender']
            );
            $this->db->where('uid',$getPreviousDetail[0]['uid']);
            $update = $this->db->update('nonKycUser',$updatedata);
            if($update)
            {
                $response = array(
                    'status' => 'success',
                    'message' => 'Profile Updated Successfully'
                );
                echo json_encode($response);
            }else
            {
                $response = array(
                    'status' => 'error',
                    'message' => 'Something Went Wrong'
                );
                echo json_encode($response);
            }
        }
    }
    
    function deleteProfilePhoto($id)
    {
        $getOldData = $this->db->query('select * from userphotos where Id='.$id)->result_array();
        if(count($getOldData) > 0)
        {
            foreach($getOldData as $k=>$v)
            {
                unlink($v['photourl']);
            }
            $deleteold = $this->db->query('delete from userphotos where Id='.$id);
        }
    }
    
    function updateSinglePhoto()
    {
        $getOldData = $this->db->query('select * from userphotos where Id='.$_POST['Id'])->result_array();
        if(count($getOldData) > 0)
        {
            foreach($getOldData as $k=>$v)
            {
                unlink($v['photourl']);
            }
            $deleteold = $this->db->query('delete from userphotos where Id='.$_POST['Id']);
        }
        $filename = $_FILES["photo"]["name"];
        $ext = end((explode(".", $filename)));
        $filename = 'upload/profile/'.time().''.rand(0,10000).'.'.$ext;
        move_uploaded_file($_FILES['photo']['tmp_name'], $filename);
        switch ($ext) {
            case 'gif': //IMAGETYPE_GIF
                $image = imagecreatefromgif($filename);
                break;
            case 'jpg': //IMAGETYPE_JPEG
                $image = imagecreatefromjpeg($filename);
                break;
            case 'jpeg': //IMAGETYPE_JPEG
                $image = imagecreatefromjpeg($filename);
                break;
            case 'png': //IMAGETYPE_PNG
                $image = imagecreatefrompng($filename);
                break;
            case 'bmp': // IMAGETYPE_BMP
                $image = imagecreatefrombmp($filename);
                break;
            case 'xbm': //IMAGETYPE_XBM
                $image = imagecreatefromxbm($filename);
                break;
        }
        $newImagePath = 'upload/profile/'.time().''.rand(0,10000).'.webp';
        imagewebp($image,$newImagePath);
        imagedestroy($image);
        $insertdata = array(
            'photourl' => $newImagePath,
            'userId' => $_SESSION['user_id']
        );
        $this->db->insert('userphotos',$insertdata);
        unlink($filename);
        $response = array(
            'status' => 'success',
            'message' => 'Photo Updated Successfully'
        );
        echo json_encode($response);
    }
    
    function add_other_info()
    {
        $this->db->query('delete from userOtherInfo where userId='.$_SESSION['user_id']);
        if(count($_POST['subcategory']) > 0)
        {
            for($i=0;$i<count($_POST['subcategory']);$i++)
            {
                if($_POST['subcategory'][$i] != '')
                {
                    $insertdata = array(
                        'subCategoryId' => $_POST['subcategory'][$i],
                        'userId' => $_SESSION['user_id']
                    );      
                    $this->db->insert('userOtherInfo',$insertdata);
                }
            }
        }
        $response = array(
            'status' => 'success',
            'message' => 'Other information updated successfully'
        );
        echo json_encode($response);
    }
    
    function photos()
    {
        if(count($_FILES['photos']['name']) > 0)
        {
            if($_FILES['photos']['name'][0] != '')
            {
                $getOldData = $this->db->query('select * from userphotos where userId='.$_SESSION['user_id'])->result_array();
                if(count($getOldData) > 0)
                {
                    foreach($getOldData as $k=>$v)
                    {
                        unlink($v['photourl']);
                    }
                    $deleteold = $this->db->query('delete from userphotos where userId='.$_SESSION['user_id']);
                }
                for($i=0;$i<count($_FILES['photos']['name']);$i++)
                {
                    $filename = $_FILES["photos"]["name"][$i];
                    $ext = end((explode(".", $filename)));
                    $filename = 'upload/profile/'.time().''.rand(0,10000).'.'.$ext;
                    move_uploaded_file($_FILES['photos']['tmp_name'][$i], $filename);
                    switch ($ext) {
                        case 'gif': //IMAGETYPE_GIF
                            $image = imagecreatefromgif($filename);
                            break;
                        case 'jpg': //IMAGETYPE_JPEG
                            $image = imagecreatefromjpeg($filename);
                            break;
                        case 'jpeg': //IMAGETYPE_JPEG
                            $image = imagecreatefromjpeg($filename);
                            break;
                        case 'png': //IMAGETYPE_PNG
                            $image = imagecreatefrompng($filename);
                            break;
                        case 'bmp': // IMAGETYPE_BMP
                            $image = imagecreatefrombmp($filename);
                            break;
                        case 'xbm': //IMAGETYPE_XBM
                            $image = imagecreatefromxbm($filename);
                            break;
                    }
                    $newImagePath = 'upload/profile/'.time().''.rand(0,10000).'.webp';
                    imagewebp($image,$newImagePath);
                    imagedestroy($image);
                    $insertdata = array(
                        'photourl' => $newImagePath,
                        'userId' => $_SESSION['user_id']
                    );
                    $this->db->insert('userphotos',$insertdata);
                    unlink($filename);
                }   
            }
        }
        if($_FILES['facematch']['name'] != '')
        {
            $filename = $_FILES["facematch"]["name"];
            $ext = end((explode(".", $filename)));
            $filename = 'upload/profile/facematch/'.time().''.rand(0,10000).'.'.$ext;
            move_uploaded_file($_FILES['facematch']['tmp_name'], $filename);
            switch ($ext) {
                case 'gif': //IMAGETYPE_GIF
                    $image = imagecreatefromgif($filename);
                    break;
                case 'jpg': //IMAGETYPE_JPEG
                    $image = imagecreatefromjpeg($filename);
                    break;
                case 'jpeg': //IMAGETYPE_JPEG
                    $image = imagecreatefromjpeg($filename);
                    break;
                case 'png': //IMAGETYPE_PNG
                    $image = imagecreatefrompng($filename);
                    break;
                case 'bmp': // IMAGETYPE_BMP
                    $image = imagecreatefrombmp($filename);
                    break;
                case 'xbm': //IMAGETYPE_XBM
                    $image = imagecreatefromxbm($filename);
                    break;
            }
            $newImagePath = 'upload/profile/facematch/'.time().''.rand(0,10000).'.webp';
            imagewebp($image,$newImagePath);
            imagedestroy($image);
            $updatedata = array(
                'facematchphoto' => $newImagePath
            );
            $this->db->where('uid',$_SESSION['user_id']);
            $this->db->update('user',$updatedata);
        }
        $response = array(
            'status' => 'success',
            'message' => 'Photos Uploaded Successfully'
        );
        echo json_encode($response);
    }
    
    function getVehicleAmount()
    {
        $getSettings = $this->db->query('select * from settings where name="vehiclePayment"')->result_array();
        echo $getSettings[0]['value'];
    }

    public function logout(){
        $this->session->sess_destroy();
        redirect(base_url(), 'refresh');
    }
    
    public function login($para1 = ''){
      if($para1 == 'do_login'){
        if($_POST['type'] == 'aadhar')
        {
            $getDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['typeval'].'"')->result_array();
        }else{
            $getDetail = $this->db->query('select * from user where username="'.$_POST['typeval'].'"')->result_array();
        }
        if($getDetail[0]['otp'] == $_POST['otp'])
        {
            if(isset($_SESSION['fcmtokenId']))
            $update = $this->db->query('update notification_tokens_tbl set userType="user", userId='.$getDetail[0]['uid'].' where Id='.$_SESSION['fcmtokenId']);
            $this->session->set_userdata('loginmob',$_POST['mobile']);
            $this->session->set_userdata('user_login', 'yes');
            $this->session->set_userdata('user_id', $getDetail[0]['uid']);
            $this->session->set_userdata('aadhar_id', $getDetail[0]['aadhar_id']);
            $this->session->set_userdata('username', $getDetail[0]['username']);
            $this->session->set_userdata('aadharName', $getDetail[0]['aadharname']);
            $this->session->set_userdata('login_type', 'user');
            $response = array(
                'status' => 'success',
                'message' => 'Login Successful',
                'lasturl' => $_POST['basename'],
                'finalverification' => ($getDetail[0]['final_mobile_verification'] == 'success' ? 'success' : 'failed')
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Invalid Otp'
            );
            echo json_encode($response);
        }
      } else {
        $page_data['lasturl'] = basename($_SERVER['HTTP_REFERER']);
        $page_data['title'] = 'Login';
        $page_data['control'] = 'user';
        $this->load->view('NonKyc/common/header',$page_data); 
        $this->load->view('NonKyc/login');
        $this->load->view('NonKyc/common/footer'); 
      }
    }
    
    function newVehiclelogin($para1 = ''){
        if($para1 == 'do_login'){
            if($_POST['type'] == 'aadhar')
            {
                $getDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['typeval'].'"')->result_array();
            }else{
                $getDetail = $this->db->query('select * from user where username="'.$_POST['typeval'].'"')->result_array();
            }
            if($getDetail[0]['otp'] == $_POST['otp'])
            {
                $this->session->set_userdata('loginmob',$_POST['mobile']);
                $this->session->set_userdata('user_login', 'yes');
                $this->session->set_userdata('user_id', $getDetail[0]['uid']);
                $this->session->set_userdata('aadhar_id', $getDetail[0]['aadhar_id']);
                $this->session->set_userdata('username', $getDetail[0]['username']);
                $this->session->set_userdata('aadharName', $getDetail[0]['aadharname']);
                $this->session->set_userdata('login_type', 'user');
                $response = array(
                    'status' => 'success',
                    'message' => 'Login Successful',
                    'finalverification' => ($getDetail[0]['final_mobile_verification'] == 'success' ? 'success' : 'failed')
                );
                echo json_encode($response);
            }else{
                $response = array(
                    'status' => 'error',
                    'message' => 'Invalid Otp'
                );
                echo json_encode($response);
            }
          } else {
            
            $page_data['title'] = 'Login';
            $page_data['control'] = 'user';
            $this->load->view('NonKyc/common/header',$page_data); 
            $this->load->view('NonKyc/newVehiclelogin');
            $this->load->view('NonKyc/common/footer'); 
          }  
    }
    
    public function newlogin($para1 = ''){
      if($para1 == 'do_login'){
        if($_POST['type'] == 'aadhar')
        {
            $getDetail = $this->db->query('select * from user where aadhar_id="'.$_POST['typeval'].'"')->result_array();
        }else{
            $getDetail = $this->db->query('select * from user where username="'.$_POST['typeval'].'"')->result_array();
        }
        if($getDetail[0]['otp'] == $_POST['otp'])
        {
            $this->session->set_userdata('loginmob',$_POST['mobile']);
            $this->session->set_userdata('user_login', 'yes');
            $this->session->set_userdata('user_id', $getDetail[0]['uid']);
            $this->session->set_userdata('aadhar_id', $getDetail[0]['aadhar_id']);
            $this->session->set_userdata('username', $getDetail[0]['username']);
            $this->session->set_userdata('aadharName', $getDetail[0]['aadharname']);
            $this->session->set_userdata('login_type', 'user');
            $response = array(
                'status' => 'success',
                'message' => 'Login Successful',
                'lasturl' => $_POST['basename'],
                'finalverification' => ($getDetail[0]['final_mobile_verification'] == 'success' ? 'success' : 'failed')
            );
            echo json_encode($response);
        }else{
            $response = array(
                'status' => 'error',
                'message' => 'Invalid Otp'
            );
            echo json_encode($response);
        }
      } else {
        
        $page_data['title'] = 'Login';
        $page_data['control'] = 'user';
        $this->load->view('NonKyc/common/header',$page_data); 
        $this->load->view('NonKyc/newlogin');
        $this->load->view('NonKyc/common/footer'); 
      }
    }
    
    function unknown_person_filter()
    {
        if(isset($_SESSION['landingMob'])){
          
           $this->load->view('NonKyc/common/header',$page_data); 
                $this->load->view('NonKyc/unknown_person_filter');
                $this->load->view('NonKyc/common/footer');   
          
        } else {
            redirect('login','refresh');
        }   
    }

    function lapta_person_after_login()
    {
        if(isset($_SESSION['landingMob']))
        {
            if(isset($_GET['pn']))
            {
                if($_GET['pn'] == 2)
                {
                    if($_GET['idNumber'] != '')
                    {
                        if($_GET['idType'] == 'aadhar')
                        {
                            $this->db->where('aadharNumber',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'dl')
                        {
                            $this->db->where('Dl_no',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'pan')
                        {
                            $this->db->where('PAN',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'voter')
                        {
                            $this->db->where('voter_id',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'vehicle')
                        {
                            $this->db->where('vehicle_no',$_GET['idNumber']);
                        }
                    }
                    $this->db->where('dateCreated >=',date('Y-m-d 00:00:00',strtotime($_GET['startFormDate'])));
                    $this->db->where('dateCreated <=',date('Y-m-d 23:59:59',strtotime($_GET['endFormDate'])));
                    $this->db->where('Gender',$_GET['genderForm']);
                    if(($_GET['personFormName']) != '')
                    {
                        $this->db->where("SUBSTRING(person_name, 1, 1) = '".substr($_GET['personFormName'], 0, 1)."'");
                    }
                    if(($_GET['AgeForm']) != '')
                    {
                        $getInBetweenAge = $this->db->query('select * from ageBands where ageBand="'.$_GET['AgeForm'].'"')->result_array();
                        $explode = explode(',',$getInBetweenAge[0]['ages']);
                        $this->db->where_in('Age',$explode);
                    }
                    if(($_GET['stateForm']) != '')
                    {
                        $this->db->like('state',$_GET['stateForm']);
                    }
                    if(($_GET['districtForm']) != '')
                    {
                        $this->db->like('district',$_GET['districtForm']);
                    }
                    if(($_GET['faceMatch']) != '')
                    {
                        $this->db->where_in('imageId',explode(',',$_GET['faceMatch']));
                        $this->db->or_where_in('imageId1',explode(',',$_GET['faceMatch']));
                        $this->db->or_where_in('imageId2',explode(',',$_GET['faceMatch']));
                    }
                    $this->db->where('awsEventName','All');
                    $this->db->where("expiryDate >= ", date('Y-m-d'));
                    $this->db->where('isFound',0);
                    $this->db->where('isFinalSubmitted',1);
                    if(($_GET['cityForm']) != '')
                    {
                        $this->db->where('city',$_GET['cityForm']);
                    }
                    $page_data['data']=$this->db->get('unknown_person')->result_array();
                    $finalId = array();
                    if($_GET['idNumber'] != '')
                    {
                        if($_GET['idType'] == 'gold')
                        {
                            if(count($page_data['data']) > 0)
                            {
                                foreach($page_data['data'] as $k=>$v)
                                {
                                    $getGoldDetails = $this->db->query('select * from unknownPersonGold where unknownId='.$v['id'].' and goldHUID="'.$_GET['idNumber'].'"')->result_array();
                                    if(count($getGoldDetails) > 0)
                                    {
                                        array_push($finalId,$v['id']);
                                    }
                                }
                            }
                            if(count($finalId) > 0)
                            {
                                $this->db->where_in('id',$finalId);
                                $page_data['data']=$this->db->get('unknown_person')->result_array();
                            }else{
                                $page_data['data'] = array();
                            }
                        }
                    }
                    $page_data['rows'] = count($page_data['data']);
                    if(isset($_GET['perPage']))
                    {
                        $page_rows = $_GET['perPage'];
                        $page_data['perPage'] = $page_rows; 
                    }else{
                        $page_rows = 100;
                        $page_data['perPage'] = 100;
                    }
                    $last = ceil($page_data['rows']/$page_rows);
                    if($last < 1){
                        $last = 1;
                    }

                    $page_data['last'] = $last;
                 
                    $pagenum = 1;
                 
                    if(isset($_GET['page'])){
                        $pagenum = preg_replace('#[^0-9]#', '', $_GET['page']);
                    }
                 
                    if ($pagenum < 1) { 
                        $pagenum = 1; 
                    } 
                    else if ($pagenum > $last) { 
                        $pagenum = $last; 
                    }
                    if($_GET['idNumber'] != '')
                    {
                        if($_GET['idType'] == 'aadhar')
                        {
                            $this->db->where('aadharNumber',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'dl')
                        {
                            $this->db->where('Dl_no',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'pan')
                        {
                            $this->db->where('PAN',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'voter')
                        {
                            $this->db->where('voter_id',$_GET['idNumber']);
                        }
                        if($_GET['idType'] == 'vehicle')
                        {
                            $this->db->where('vehicle_no',$_GET['idNumber']);
                        }
                    }
                    $this->db->where('dateCreated >=',date('Y-m-d 00:00:00',strtotime($_GET['startFormDate'])));
                    $this->db->where('dateCreated <=',date('Y-m-d 23:59:59',strtotime($_GET['endFormDate'])));
                    $this->db->where('Gender',$_GET['genderForm']);
                    if(($_GET['personFormName']) != '')
                    {
                        $this->db->where("SUBSTRING(person_name, 1, 1) = '".substr($_GET['personFormName'], 0, 1)."'");
                    }
                    if(($_GET['AgeForm']) != '')
                    {
                        $getInBetweenAge = $this->db->query('select * from ageBands where ageBand="'.$_GET['AgeForm'].'"')->result_array();
                        $explode = explode(',',$getInBetweenAge[0]['ages']);
                        $this->db->where_in('Age',$explode);
                    }
                    if(($_GET['stateForm']) != '')
                    {
                        $this->db->like('state',$_GET['stateForm']);
                    }
                    if(($_GET['districtForm']) != '')
                    {
                        $this->db->like('district',$_GET['districtForm']);
                    }
                    if(($_GET['cityForm']) != '')
                    {
                        $this->db->where('city',$_GET['cityForm']);
                    }
                    if(($_GET['faceMatch']) != '')
                    {
                        $this->db->where_in('imageId',explode(',',$_GET['faceMatch']));
                        $this->db->or_where_in('imageId1',explode(',',$_GET['faceMatch']));
                        $this->db->or_where_in('imageId2',explode(',',$_GET['faceMatch']));
                    }
                    $this->db->where('awsEventName','All');
                    $this->db->where('isFound',0);
                    $this->db->where('isFinalSubmitted',1);
                    if($_GET['idNumber'] == '')
                    {
                        $this->db->limit($page_rows,($pagenum - 1) * $page_rows);
                    }
                    $this->db->where("expiryDate >= ", date('Y-m-d'));
                    $page_data['data']=$this->db->get('unknown_person')->result_array();
                    $finalId = array();
                    if($_GET['idNumber'] != '')
                    {
                        if($_GET['idType'] == 'gold')
                        {
                            if(count($page_data['data']) > 0)
                            {
                                foreach($page_data['data'] as $k=>$v)
                                {
                                    $getGoldDetails = $this->db->query('select * from unknownPersonGold where unknownId='.$v['id'].' and goldHUID="'.$_GET['idNumber'].'"')->result_array();   
                                    if(count($getGoldDetails) > 0)
                                    {
                                        array_push($finalId,$v['id']);
                                    }
                                }
                            }
                            if(count($finalId) > 0)
                            {
                                $this->db->where_in('id',$finalId);
                                $this->db->limit(($pagenum - 1) * $page_rows,$page_rows);
                                $page_data['data']=$this->db->get('unknown_person')->result_array();
                            }else{
                                $page_data['data']= array();
                            }
                        }
                    }
                    $page_data['paginationBigCtrls'] = '';     
                    $page_data['paginationMobileCtrls'] = '';     
                    if($last != 1){
                        if ($pagenum > 1) {
                            $previous = $pagenum - 1;
                            $page_data['paginationBigCtrls'] .= '<a href="javascript:void(0)" onclick="apply('.$previous.')" class="btn btn-default">Previous</a> &nbsp; &nbsp; ';
                            $page_data['paginationMobileCtrls'] .= '<a href="javascript:void(0)" onclick="apply('.$previous.')" class="btn btn-default mt-0">Previous</a> &nbsp; &nbsp; ';
                     
                            for($i = $pagenum-4; $i < $pagenum; $i++){
                                if($i > 0){
                                    $paginationCtrls .= '<a href="javascript:void(0)" onclick="apply('.$i.')" class="btn btn-default">'.$i.'</a> &nbsp; ';
                                }
                            }
                        }
                     
                        $page_data['paginationBigCtrls'] .= '<a href="javascript:void(0)" class="mt-0 ms-3">'.$pagenum.' </a>&nbsp; ';
                     
                        for($i = $pagenum+1; $i <= $last; $i++){
                            $page_data['paginationBigCtrls'] .= '<a href="javascript:void(0)" onclick="apply('.$i.')" class="btn btn-default">'.$i.'</a> &nbsp; ';
                            if($i >= $pagenum+4){
                                break;
                            }
                        }
                     
                        if ($pagenum != $last) {
                            $next = $pagenum + 1;
                            $page_data['paginationBigCtrls'] .= ' &nbsp; &nbsp; <a href="javascript:void(0)" onclick="apply('.$next.')" class="btn btn-default">Next</a> ';
                            $page_data['paginationMobileCtrls'] .= ' &nbsp; &nbsp; <a href="javascript:void(0)" onclick="apply('.$next.')" class="btn btn-default mt-0">Next</a> ';
                        }
                    }   
                }else{
                    $page_data['data']= [];
                    $page_data['paginationBigCtrls'] = '';
                    $page_data['paginationMobileCtrls'] = '';
                }
            }else{
                $page_data['data']= [];
                $page_data['paginationBigCtrls'] = '';
                $page_data['paginationMobileCtrls'] = '';
            }
            $page_data['pn'] = 1;
            if(isset($_GET['pn']))
            {
                $page_data['pn'] = $_GET['pn'];    
            }
            $page_data['page'] = 1;
            if(isset($_GET['page']))
            {
                $page_data['page'] = $_GET['page'];    
            }
            $page_data['page_name'] = 'lapta_person_after_login';
            $this->load->view('nonkyc/index', $page_data);  
        }else{
           redirect('login','refresh');
        }
    }

    function checkFacePayment()
    {
        switch($_GET['type']){
            case 'lapata':
                $getPaymentDetails = $this->db->query('select * from userTransactions where isKyc=0 and userId='.$_SESSION['user_id'].' and type="lapata" and expiryDate >="'.date('Y-m-d').'" order by Id desc')->result_array();
                $response = array(
                        'status' => 'success'
                    );
                echo json_encode($response);
                die();
                if(count($getPaymentDetails) > 0)
                {
                    $response = array(
                        'status' => 'success'
                    );
                    echo json_encode($response);
                }else{
                    $getCurrentPaymentType = $this->db->query('select * from settings where name="paymentType"')->result_array();
                    $response = array(
                        'status' => 'error',
                        'paymentType' => $getCurrentPaymentType[0]['value'],
                        'paymentAmount' => $this->getSettings('lapataFaceAmount')
                    );
                    echo json_encode($response);
                }
                break;

            case 'unknown':
                $getPaymentDetails = $this->db->query('select * from userTransactions where isKyc=0 and userId='.$_SESSION['user_id'].' and type="unknown" and expiryDate >="'.date('Y-m-d').'" order by Id desc')->result_array();
                $response = array(
                        'status' => 'success'
                    );
                echo json_encode($response);
                die();
                if(count($getPaymentDetails) > 0)
                {
                    $response = array(
                        'status' => 'success'
                    );
                    echo json_encode($response);
                }else{
                    $getCurrentPaymentType = $this->db->query('select * from settings where name="paymentType"')->result_array();
                    $response = array(
                        'status' => 'error',
                        'paymentType' => $getCurrentPaymentType[0]['value'],
                        'paymentAmount' => $this->getSettings('unknownFaceAmount')
                    );
                    echo json_encode($response);
                }
                break;
        }
    }

    function saveFaceMatchPayment()
    {
        $insertdata = array(
            'userId' => $_SESSION['user_id'],
            'isKyc' => 0,
            'type' => $_POST['type'],
            'expiryDate' => date('Y-m-d',strtotime('+'.$this->getSettings('unknownExpiryDays').' days')),
            'dateCreated' => date('Y-m-d H:i:s A'),
            'amount' => $_POST['amount']
        );
        $this->db->insert('userTransactions', $insertdata);
        $response['expiryDate'] = date('d-m-Y',strtotime('+'.$this->getSettings('unknownExpiryDays').' days'));
        echo json_encode($response);
    }

    function savePersonalUnknownPayment()
    {
        $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
        $insertdata = array(
            'userId' => $_SESSION['user_id'],
            'isKyc' => 0,
            'type' => 'unknown',
            'idNumber' => $getUserDetail[0]['registration_mobile'],
            'dateCreated' => date('Y-m-d H:i:s A'),
            'amount' => 49,
        );
        $this->db->insert('unknownTransactions', $insertdata);
    }

    function savePersonalPayment()
    {
        $getUserDetail = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
        $insertdata = array(
            'userId' => $_SESSION['user_id'],
            'type' => 'personal',
            'idNumber' => $getUserDetail[0]['aadhar_id'],
            'expiryDate' => date('Y-m-d',strtotime('+1 year')),
            'dateCreated' => date('Y-m-d H:i:s A'),
            'amount' => $this->getSettings('personalFaceAmount'),
            'packageId' => 0,
        );
        $this->db->insert('uploadtransactions', $insertdata);
        $response['Id'] = $this->db->insert_id();
        echo json_encode($response);
    }

    function showPaymentModels()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'showNewPaymentModels';
            $this->load->view('nonkyc/index', $page_data);  
        } else {
             redirect('login','refresh');
        }
    }

    function showNewPaymentModels()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'showNewPaymentModels';
            $this->load->view('nonkyc/index', $page_data);  
        } else {
             redirect('login','refresh');
        }
    }

    function showFunnelPaymentModels()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'showFunnelPaymentModelsNew';
            $this->load->view('nonkyc/index', $page_data);  
        } else {
             redirect('login','refresh');
        }
    }

    function showFunnelPaymentModelsNew()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'showFunnelPaymentModelsNew';
            $this->load->view('nonkyc/index', $page_data);  
        } else {
             redirect('login','refresh');
        }
    }

    function showUnknownPaymentModels()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'showUnknownPaymentModels';
            $this->load->view('nonkyc/index', $page_data);  
        } else {
             redirect('login','refresh');
        }
    }

    function showUnknownPaymentModelsNew()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'showFreshUnknownPaymentModels';
            $this->load->view('nonkyc/index', $page_data);  
        } else {
             redirect('login','refresh');
        }
    }

    function showFreshUnknownPaymentModels()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'showFreshUnknownPaymentModels';
            $this->load->view('nonkyc/index', $page_data);  
        } else {
             redirect('login','refresh');
        }
    }

    function paymentExpiries()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'paymentExpiries';
            $this->load->view('nonkyc/index', $page_data);  
        } else {
             redirect('login','refresh');
        }
    }

    function paymentFunnelMissingExpiries()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'paymentFunnelMissingExpiries';
            $this->load->view('nonkyc/index', $page_data);  
        } else {
             redirect('login','refresh');
        }
    }

    function paymentWithoutExpiries()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'paymentWithoutExpiries';
            $this->load->view('nonkyc/index', $page_data);  
        } else {
             redirect('login','refresh');
        }
    }

    function sendTextLocalCustomMsg($msg,$mob)
    {
        $mob = '91'.$mob;
        try {
            $apiKey = urlencode("NGQ2YzQ3NDM0MjcxNjU2YjcwNmIzOTYzMzI0ZTZkNjg=");
            $sender = urlencode('KHOJI');
            $message = rawurlencode($msg);
            $data = array('apikey' => $apiKey, 'numbers' => $mob, 'sender' => $sender, 'message' => $message);
            $ch = curl_init('https://api.textlocal.in/send/');
            curl_setopt($ch, CURLOPT_POST, true);
            curl_setopt($ch, CURLOPT_POSTFIELDS, $data);
            curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
            $response = curl_exec($ch);
            curl_close($ch);
        } catch (\Throwable $th) {
            throw $th;

        }
    }

    function saveLapataWithoutPayment()
    {
        if($_POST['amount'] == 0)
        {
            $this->db->where('uid',$_SESSION['user_id']);
            $this->db->update('nonKycUser',array('freeCreditUsed' => 1));
        }
        $getIfAlready = $this->db->query('select * from uploadWithoutTransactions where type="lapata" and isKyc=0 and userId='.$_SESSION['user_id'].' and idNumber="'.$_POST['idNumber'].'" and expiryDate >= "'.date('Y-m-d').'" order by Id desc')->result_array();
        $getPackageDetails = $this->db->query('select * from packages where Id='.$_POST['packageId'])->result_array();
        if(count($getIfAlready) > 0)
        {
            $date=date_create(date('Y-m-d',strtotime($getIfAlready[0]['expiryDate'])));
            date_add($date,date_interval_create_from_date_string($getPackageDetails[0]['validity']." days"));
            $finaldate = date_format($date,"Y-m-d");
            $update = $this->db->query('update unknown_person set isFromUpload = 0, isFinalSubmitted = 1,finalSubmitTime="'.date('Y-m-d H:i:s A').'",dateCreated="'.date('Y-m-d H:i:s A').'", expiryDate="'.$finaldate.'" where userId='.$_SESSION['user_id'].' and awsEventName !="Unknown" and isKyc=0 and Application_no="'.$_POST['idNumber'].'"');
            $insertdata = array(
                'userId' => $_SESSION['user_id'],
                'type' => $_POST['type'],
                'expiryDate' => $finaldate,
                'dateCreated' => date('Y-m-d H:i:s A'),
                'idNumber' => $_POST['idNumber'],
                'amount' => $_POST['amount'],
                'packageId' => $_POST['packageId'],
				'isKyc' => 0
            );
        }else{
            $update = $this->db->query('update unknown_person set isFromUpload = 0, isFinalSubmitted = 1,finalSubmitTime="'.date('Y-m-d H:i:s A').'", dateCreated="'.date('Y-m-d H:i:s A').'", expiryDate="'.date('Y-m-d',strtotime('+'.($getPackageDetails[0]['validity']).' days')).'" where userId='.$_SESSION['user_id'].' and isKyc=0 and awsEventName !="Unknown" and Application_no="'.$_POST['idNumber'].'"');
            $insertdata = array(
                'userId' => $_SESSION['user_id'],
                'type' => $_POST['type'],
                'idNumber' => $_POST['idNumber'],
                'expiryDate' => date('Y-m-d',strtotime('+'.($getPackageDetails[0]['validity']).' days')),
                'dateCreated' => date('Y-m-d H:i:s A'),
                'amount' => $_POST['amount'],
                'packageId' => $_POST['packageId'],
				'isKyc' => 0
            );
        }
        $this->db->insert('uploadWithoutTransactions', $insertdata);
        $response['Id'] = $this->db->insert_id();
        $vectorizerData = array(
            'unknownId' => $_POST['unknownId'],
            'imageStatus' => 'Pending',
            'uploadTime' => date('Y-m-d H:i:s A'),
            'isUpload' => $_POST['isUpload']
        );
        $this->db->insert('indexer',$vectorizerData);
        echo json_encode($response);    
    }

    function saveFunnelMissingUploadPayment()
    {
        $getPackageDetails = $this->db->query('select * from packages where Id='.$_POST['packageId'])->result_array();
        $getPreviousDetail = $this->db->query('select * from funnel_missing where id='.$_POST['idNumber'])->result_array();
        if(strtotime(date('Y-m-d',strtotime($getPreviousDetail[0]['expiryDate']))) < strtotime(date('Y-m-d')))
        {
            $date=date_create(date('Y-m-d'));
            date_add($date,date_interval_create_from_date_string($getPackageDetails[0]['validity']." days"));
            $finaldate = date_format($date,"Y-m-d");
            $update = $this->db->query('update funnel_missing set expiryDate="'.$finaldate.'" where userId='.$_SESSION['user_id'].' and id="'.$_POST['idNumber'].'"');
            $insertData = array(
                'userId' => $_SESSION['user_id'],
                'idNumber' => $_POST['idNumber'],
                'expiryDate' => $finaldate,
                'dateCreated' => date('Y-m-d H:i:s A'),
                'amount' => $_POST['amount'],
                'packageId' => $_POST['packageId']
            );
        }else{
            $date=date_create(date('Y-m-d',strtotime($getPreviousDetail[0]['expiryDate'])));
            date_add($date,date_interval_create_from_date_string($getPackageDetails[0]['validity']." days"));
            $finaldate = date_format($date,"Y-m-d");
            $update = $this->db->query('update funnel_missing set expiryDate="'.$finaldate.'" where userId='.$_SESSION['user_id'].' and id="'.$_POST['idNumber'].'"');
            $insertData = array(
                'userId' => $_SESSION['user_id'],
                'idNumber' => $_POST['idNumber'],
                'expiryDate' => $finaldate,
                'dateCreated' => date('Y-m-d H:i:s A'),
                'amount' => $_POST['amount'],
                'packageId' => $_POST['packageId']
            );
        }
        $this->db->insert('funnelinnertransactions',$insertData);
        $response['Id'] = $this->db->insert_id();
        echo json_encode($response);

    }

    function saveLapataUploadPayment()
    {
        if($_POST['amount'] == 0)
        {
            if($_POST['type'] == 'unknown')
            {
                if($_POST['isUpload'] == 0)
                {
                    $getIfFreeCredit = $this->db->query('select * from nonKycUser where uid='.$_SESSION['user_id'])->result_array();
                    if(count($getIfFreeCredit) > 0)
                    {
                        if($getIfFreeCredit[0]['freeUnknownCreditUsed'] == NULL || $getIfFreeCredit[0]['freeUnknownCreditUsed'] < 10)
                        {
                            if($getIfFreeCredit[0]['freeUnknownCreditUsed'] != NULL)
                            {
                                $this->db->query('update nonKycUser set freeUnknownCreditUsed = freeUnknownCreditUsed + 1 where uid='.$_SESSION['user_id']);
                            }else{
                                $this->db->query('update nonKycUser set freeUnknownCreditUsed = 1 where uid='.$_SESSION['user_id']);
                            }       
                        }
                    }
                }
            }else{
                $this->db->where('uid',$_SESSION['user_id']);
                $this->db->update('nonKycUser',array('freeCreditUsed' => 1));
            }
        }
        $getIfAlready = $this->db->query('select * from uploadtransactions where type="'.$_POST['type'].'" and isKyc=0 and userId='.$_SESSION['user_id'].' and idNumber="'.$_POST['idNumber'].'" and expiryDate >= "'.date('Y-m-d').'" order by Id desc')->result_array();
        $getPackageDetails = $this->db->query('select * from packages where Id='.$_POST['packageId'])->result_array();
        if(count($getIfAlready) > 0)
        {
            $date=date_create(date('Y-m-d',strtotime($getIfAlready[0]['expiryDate'])));
            date_add($date,date_interval_create_from_date_string($getPackageDetails[0]['validity']." days"));
            $finaldate = date_format($date,"Y-m-d");
            if($_POST['type'] != 'unknown')
            {
                $update = $this->db->query('update unknown_person set isFromUpload = 0, dateCreated="'.date('Y-m-d H:i:s A').'",finalSubmitTime="'.date('Y-m-d H:i:s A').'",isFinalSubmitted=1, expiryDate="'.$finaldate.'" where userId='.$_SESSION['user_id'].' and isKyc=0 and aadharNumber="'.$_POST['idNumber'].'" and id='.$_POST['unknownId']);
            }else{
                $update = $this->db->query('update unknown_person set isFromUpload = 0, dateCreated="'.date('Y-m-d H:i:s A').'",finalSubmitTime="'.date('Y-m-d H:i:s A').'",isFinalSubmitted=1, expiryDate="'.$finaldate.'" where userId='.$_SESSION['user_id'].' and isKyc=0 and Application_no="'.$_POST['idNumber'].'" and id='.$_POST['unknownId']);
            }
            $insertdata = array(
                'userId' => $_SESSION['user_id'],
                'type' => $_POST['type'],
                'expiryDate' => $finaldate,
                'dateCreated' => date('Y-m-d H:i:s A'),
                'idNumber' => $_POST['idNumber'],
                'amount' => $_POST['amount'],
                'packageId' => $_POST['packageId'],
				'isKyc' => 0
            );
        }else{
            if($_POST['type'] == 'unknown')
            {
                $update = $this->db->query('update unknown_person set isFromUpload = 0, dateCreated="'.date('Y-m-d H:i:s A').'",finalSubmitTime="'.date('Y-m-d H:i:s A').'",isFinalSubmitted=1, expiryDate="'.date('Y-m-d',strtotime('+'.($getPackageDetails[0]['validity']).' days')).'" where userId='.$_SESSION['user_id'].' and isKyc=0 and Application_no="'.$_POST['idNumber'].'"');
            }else{
                $update = $this->db->query('update unknown_person set isFromUpload = 0, dateCreated="'.date('Y-m-d H:i:s A').'",finalSubmitTime="'.date('Y-m-d H:i:s A').'",isFinalSubmitted=1, expiryDate="'.date('Y-m-d',strtotime('+'.($getPackageDetails[0]['validity']).' days')).'" where userId='.$_SESSION['user_id'].' and isKyc=0 and aadharNumber="'.$_POST['idNumber'].'" and id='.$_POST['unknownId']);
            }
            $insertdata = array(
                'userId' => $_SESSION['user_id'],
                'type' => $_POST['type'],
                'idNumber' => $_POST['idNumber'],
                'expiryDate' => date('Y-m-d',strtotime('+'.($getPackageDetails[0]['validity']).' days')),
                'dateCreated' => date('Y-m-d H:i:s A'),
                'amount' => $_POST['amount'],
                'packageId' => $_POST['packageId'],
				'isKyc' => 0
            );
        }
        $this->db->insert('uploadtransactions', $insertdata);
        $response['Id'] = $this->db->insert_id();
        $vectorizerData = array(
            'unknownId' => $_POST['unknownId'],
            'imageStatus' => 'Pending',
            'uploadTime' => date('Y-m-d H:i:s A'),
            'isUpload' => $_POST['isUpload']
        );
        $this->db->insert('indexer',$vectorizerData);
        echo json_encode($response);        
    }

    function personalPayment()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'personalPayment';
            $this->load->view('nonkyc/index', $page_data);  
        } else {
             redirect('login','refresh');
        }   
    }

    function missingTerms()
    {
        if(isset($_SESSION['landingMob'])){
            $page_data['page_name'] = 'missingTerms';
            $this->load->view('nonkyc/index', $page_data);  
        } else {
             redirect('login','refresh');
        }   
    }
    
    
}